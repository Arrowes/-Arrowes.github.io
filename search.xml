<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Bookmarks：常用书签汇总</title>
    <url>/2022/11/23/Bookmarks/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>从Chrome的书签管理器导出，使用<a href="https://codebeautify.org/html-to-markdown">html-to-markdown</a>在线转换为.md文件。</p>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p><a href="https://play.google.com/store">Google Play</a></p>
<p><a href="https://mirrors.huaweicloud.com/home">华为开源镜像站_软件开发服务_华为云</a></p>
<p><a href="https://www.aliyun.com/?spm=5176.200137.fszjobuve.2.2af56bdbUGH6QZ">阿里云-为了无法计算的价值</a></p>
<p><a href="https://cloud.huawei.com/home#/home">华为云空间</a></p>
<p><a href="https://pan.quark.cn/#/list/all">夸克网盘</a></p>
<p><a href="https://www.aliyundrive.com/drive">阿里云盘</a></p>
<p><a href="http://www.html22.com/d/?url=http://wenku.baidu.com/view/c5511db8c1c708a1284a44a3.html">网页转换助手202</a></p>
<p><a href="https://pc.qq.com/">腾讯软件中心-海量软件高速下载</a></p>
<p><a href="http://www.wepe.com.cn/">微PE工具箱 - 最好用的WinPE装机维护工具</a></p>
<p><a href="https://msdn.itellyou.cn/">MSDN, 我告诉你 - 做一个安静的工具站</a></p>
<p><a href="https://www.bypass.cn/">Bypass - 分流抢票</a></p>
<p><a href="https://console.cloud.tencent.com/cam/capi">访问密钥 - 控制台</a></p>
<p><a href="https://houxu.app/">后续 · 有记忆的新闻，持续追踪热点新闻</a></p>
<p><a href="https://imwcr.cn/api/GetDocumentText/">文库下载助手</a></p>
<p><a href="https://sockboom.lol/auth/login">袜子热潮</a></p>
<p><a href="https://xbeibeix.com/api/bilibili/">贝贝BiliBili - B站视频下载</a></p>
<p><a href="https://www.testufo.com/">UFO Test: Multiple Framerates</a></p>
<h3 id="湖科"><a href="#湖科" class="headerlink" title="湖科"></a>湖科</h3><p><a href="http://login.hnust.cn/">校园网上网登录页</a></p>
<p><a href="http://fw.hnust.edu.cn/dudpui/UI/v_/SPORTAL/base/index.w">湖南科技大学服务门户</a></p>
<p><a href="http://lib.hnust.cn/">湖南科技大学图书馆</a></p>
<p><a href="http://49.123.0.148/gmis/(S(tly35jfsprni3oxybwui4hzo))/home/stulogin">研究生管理信息系统登录</a></p>
<p><a href="http://www.chsi.com.cn/">学信网</a></p>
<p><a href="https://www.hnust.cn/">湖南科技大学</a></p>
<p><a href="http://ygfw.hnust.edu.cn/">湖南科技大学教育阳光服务大厅</a></p>
<p><a href="https://wlxy.hnust.edu.cn/">湖科大物理与电子科学学院</a></p>
<h4 id="湘大"><a href="#湘大" class="headerlink" title="湘大"></a>湘大</h4><p><a href="https://yxzz.xtu.edu.cn/yxxt/web/xsLogin/login.zf">湘大新生服务网</a></p>
<p><a href="https://yjsc.xtu.edu.cn/">湘潭大学研究生院</a></p>
<p><a href="https://yzbm.xtu.edu.cn/ssfs/TXlIZWFydFdpbGxHb09uZnNscS90eGR6eGcjZGZiYmViNDYtY2ExMy00ODcwLTliYjItZTU3NzMyYjY4ZDZk">湘大研究生报考服务系统</a></p>
<p><a href="https://jlpt.neea.cn/index.do">教育部教育考试院—日本语能力测试网上报名系统</a></p>
<p><a href="http://kdjw.hnust.edu.cn/">本科生登录</a></p>
<p><a href="http://fresh.hnust.edu.cn/#">湖南科技大学-自助迎新服务平台</a></p>
<p><a href="https://exmail.qq.com/cgi-bin/frame_html?sid=uqAjFql-HviYglMw,7&sign_type=&r=55b026c32b34f462230cf6c0ed12e2c7">企业邮箱 - 收件箱</a></p>
<p><a href="https://webvpn.hnust.edu.cn/login">湖南科技大学WebVPN系统</a></p>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><h4 id="图片工具"><a href="#图片工具" class="headerlink" title="图片工具"></a>图片工具</h4><p><a href="https://imagecolorizer.com/">图像着色器 | 老照片修复和增强</a></p>
<p><a href="https://www.qvdv.net/tools/">图片转编码</a></p>
<p><a href="https://picwish.cn/">佐糖-免费在线抠图神器_证件照换底色_照片修复_无损压缩创意图像平台-PicWish</a></p>
<p><a href="https://www.magiceraser.io/">擦除Magic Eraser - Remove unwanted things from images in seconds</a></p>
<p><a href="https://www.remove.bg/zh">在线抠图软件_图片去除背景 | remove.bg – remove.bg</a></p>
<p><a href="https://zh.pixfix.com/">搞定含噪和质量下降的图像 - Pix Fix</a></p>
<p><a href="https://extract.pics/">网页图片提取</a></p>
<p><a href="https://www.tutieshi.com/">在线图片压缩_视频转GIF软件_GIF裁剪合成工具-图贴士</a></p>
<p><a href="https://sm.ms/">Image Upload - SM.MS - Simple Free Image Hosting</a></p>
<p><a href="https://imgse.com/">路过图床 - 免费图片上传, 专业图片外链, 免费公共图床</a></p>
<h4 id="3D"><a href="#3D" class="headerlink" title="3D"></a>3D</h4><p><a href="http://192.168.123.131/#/">fluidd | Dashboard</a></p>
<p><a href="https://www.thingiverse.com/">Thingiverse - Digital Designs for Physical Objects</a></p>
<p><a href="https://www.aigei.com/">爱给网_音效配乐_3D模型_视频素材_游戏素材_免费下载</a></p>
<p><a href="https://pinshape.com/">Free 3D Printable Files and Designs | Pinshape</a></p>
<h4 id="修图"><a href="#修图" class="headerlink" title="修图"></a>修图</h4><p><a href="https://ibaotu.com/">包图网_专注原创商用设计图片下载，免费设计素材模板独家图库</a></p>
<p><a href="http://www.58pic.com/">千图网_专注免费设计素材下载的网站_免费设计图片素材中国</a></p>
<p><a href="http://588ku.com/">千库网</a></p>
<p><a href="https://www.nicepsd.com/">NicePSD 优质设计素材下载站</a></p>
<p><a href="https://freebiesbug.com/">Free Web Design Resources - Freebiesbug</a></p>
<p><a href="http://www.zitikoudai.com/">字体口袋 - 中英文字体下载与在线转换生成预览</a></p>
<p><a href="https://creativebooster.net/">CreativeBooster - 英文字体</a></p>
<p><a href="https://zh-cn.ac-illust.com/">免费矢量艺术，剪贴画</a></p>
<p><a href="http://www.shufaziti.com/">在线书法字体转换_毛笔书法字体生成_矢量书法字典在线查询</a></p>
<p><a href="https://www.cgown.com/?cat=0&s=%E7%85%A7%E7%89%87">CG资源网</a></p>
<p><a href="http://2634.replace.favo.piefeng.cn/">创客贴</a></p>
<p><a href="https://www.designevo.com/cn/logo-maker/">Logo 制作 | DesignEvo</a></p>
<p><a href="http://www.cnu.cc/">首页 - CNU视觉联盟</a></p>
<p><a href="https://unsplash.com/">Beautiful Free Images &amp; Pictures | Unsplash</a></p>
<p><a href="https://pixabay.com/">惊人的免费图片 · Pixabay</a></p>
<p><a href="https://www.pexels.com/popular-searches/">Popular Searches · Pexels</a></p>
<p><a href="https://uigradients.com/#Sulphur">渐变 uiGradients - Beautiful colored gradients</a></p>
<p><a href="https://colorhunt.co/popular">配色 Color Hunt - Popular Schemes for Designers and Artists</a></p>
<p><a href="https://www.pinterest.com/">Pinterest</a></p>
<p><a href="https://www.colordic.org/w/">日本の伝統色 和色大辞典 - Traditional colors of Japan</a></p>
<p><a href="https://www.nasa.gov/content/goddard/what-did-hubble-see-on-your-birthday">What Did Hubble See on Your Birthday? | NASA</a></p>
<p><a href="https://wallhaven.cc/search?categories=111&purity=100&topRange=6M&sorting=toplist&order=asc&page=2">热门壁纸-wallhaven.cc</a></p>
<p><a href="https://www.lightpollutionmap.info/#zoom=5.76&lat=28.0462&lon=112.0694&layers=B0TFFFFFFFFFFFFFFFFFF&state=eyJtYXJrZXJzIjp7fX0=">光污染图</a></p>
<p><a href="https://www.darkmap.cn/">天文通 - 全球光污染地图</a></p>
<p><a href="https://www.iconfont.cn/">iconfont-阿里巴巴矢量图标库</a></p>
<p><a href="https://tineye.com/">TinEye反向图像搜索</a></p>
<h3 id="影视"><a href="#影视" class="headerlink" title="影视"></a>影视</h3><p><a href="https://www.dy2018.com/">电影天堂_电影下载_高清首发</a></p>
<p><a href="https://v.qq.com/">腾讯视频 - 中国领先的在线视频媒体平台,海量高清视频在线观看</a></p>
<p><a href="https://www.youku.com/?spm=a2h1n.8261147.youkuheader.5~5~5~5~5~A">优酷 - 这世界很酷</a></p>
<p><a href="https://www.iqiyi.com/">爱奇艺-在线视频网站-海量正版高清视频在线观看</a></p>
<p><a href="https://www.youtube.com/">YouTube</a></p>
<p><a href="https://www.acfun.cn/">AcFun弹幕视频网 - 认真你就输啦 (・ω・)ノ- ( ゜- ゜)つロ</a></p>
<p><a href="https://www.gqdm.net/index.php/vod/play/id/1391/sid/1/nid/1.html">恋上换装娃娃第1集高清资源在线播放_新番 - 異世界動漫</a></p>
<p><a href="https://www.5music.com.tw/">五大唱片</a></p>
<p><a href="https://ddys.tv/">低端影视 - 超清在线视频站</a></p>
<h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p><a href="https://www.3dmgame.com/">单机游戏_单机游戏下载_单机游戏大全中文版下载_3DM游戏网</a></p>
<p><a href="https://accounts.nintendo.com/">Nintendo Account</a></p>
<p><a href="http://3000.replace.favo.gng92.com/">单机游戏_单机游戏下载_单机游戏大全中文版下载_3DM游戏网</a></p>
<p><a href="https://pirate-bays.net/torrent-search">海盗湾 - 下载电影、音乐、游戏和软件！</a></p>
<p><a href="https://www.dajiaoxing.top/">大角星游戏平台-大角星游戏下载平台</a></p>
<p><a href="https://www.1337x.tw/">1337x | 免费电影、电视剧、音乐、游戏和软件</a></p>
<p><a href="https://steamdb.info/upcoming/free/?__cf_chl_jschl_tk__=7edc66cd4685ba19fd6a286b6ba61b7ffe6b0e01-1587268983-0-AYLrh79P_nPeb3MG8XcnFkgMggBuRJ-_oO59TlI6XGL6xjkLg5djU2pvRG7bVmJPxWu8cFcZM1vq0ahdtfTweim9Bpwkd-XC-Tfo3BnoWM37iADUHOe_x-CbiplAshy1QwHP8tU9PsKlxkzDz6A6sR5pksN1fMu5-CTCFfMP8aShS4CY7BmydqddZf_4m6u-YJM61mTHtKgnqOuTOun52qxcoXGF8wALDPXJghnL2AZ5IrCkoUj-U3XFXMWSU3S3axU9_P-0XQbIsoBGdVp8BUEALACLMHfWd5vHX8nqBiQk">Steam促销</a></p>
<p><a href="https://docs.qq.com/sheet/DVGh2RE1Gd3VNa0pQ?tab=BB08J2&spm_id_from=333.788.b_636f6d6d656e74.46">FH5 车辆与调教摸索1.0</a></p>
<p><a href="https://steamcommunity.com/sharedfiles/filedetails/?id=818572137">Steam 社区 :: 指南 :: 合金装备5原爆点&amp;幻痛：汉化、存档继承与氪金</a></p>
<p><a href="https://store.steampowered.com/">Steam</a></p>
<p><a href="https://gamepad-tester.com/?spm_id_from=333.788.b_636f6d6d656e74.7">Gamepad Tester - 在线检查控制器和操纵杆</a></p>
<p><a href="https://bbs.nga.cn/">NGA玩家社区</a></p>
<p><a href="https://www.paypal.com/signin">PayPal账户</a></p>
<p><a href="https://www.youtube.com/watch?v=GppjNvl8OYU&ab_channel=%E6%B3%A1%E6%B3%A1%E7%99%BD%E6%B0%B4">【GTA5】2022（超詳細）全版本通用如何安裝人物mod怎麼安裝汽車mod GTAV附addonpeds openIV安裝教程 - YouTube</a></p>
<p><a href="https://www.cmdw.vip/">CMDW-游戏仓库-全球最大的游戏下载中心-游戏交流</a></p>
<h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><h4 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h4><p><a href="https://www.ilovematlab.cn/forum.php?mod=home">MATLAB中文论坛</a></p>
<p><a href="https://blog.csdn.net/xiaosebi1111/article/details/46517409">敏感性分析—Sobol_方法,分析,Sobol_隔壁的老王的博客-CSDN博客</a></p>
<p><a href="http://www.inoteexpress.com/wiki/index.php/%E9%A6%96%E9%A1%B5">NoteExpress知识库</a></p>
<p><a href="https://www.thesaurus.com/">Thesaurus.com | 英文同义词替换</a></p>
<p><a href="http://www.gongshi996.com/index.html">公式996-在线识别公式，一个帮你快速输入公式的网站</a></p>
<p><a href="http://ope.lightpublishing.cn/homeNav">光学精密工程</a></p>
<h4 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h4><p><a href="http://mp.yiban.cn/notice/index">易班</a></p>
<p><a href="http://www.hixianchang.com/pro/admin/home/wall/list.html">活动列表</a></p>
<p><a href="http://www.135editor.com/">135编辑器</a></p>
<p><a href="https://mp.weixin.qq.com/cgi-bin/loginpage?url=/cgi-bin/appmsg?begin=20&count=10&t=media/appmsg_list2&type=10&action=list_card&token=977591098&lang=zh_CN">微信公众平台</a></p>
<p><a href="https://xiumi.us/#/studio/papers">秀米</a></p>
<p><a href="https://www.wenjuan.com/report/basic_chart/5c0cc5c392beb52ba95b3f7a?pid=5c0cc5c392beb52ba95b3f7a">问卷网</a></p>
<p><a href="http://www.arkie.cn/?hmsr=135%E7%BC%96%E8%BE%91%E5%99%A8&hmpl=&hmcu=&hmkw=&hmci=">ARKie</a></p>
<p><a href="https://open.163.com/">网易公开课</a></p>
<p><a href="https://www.icourse163.org/">中国大学MOOC(慕课)_国家精品课程在线学习平台</a></p>
<p><a href="https://www.shiyanlou.com/courses/57">C 语言 - 实验楼</a></p>
<p><a href="https://www.zhixi.com/#zh727bz">知犀思维导图 - 知犀官网</a></p>
<p><a href="https://github.com/XiangLinPro/IT_book">IT_book: 常用的上千本书籍</a></p>
<p><a href="http://ppt.sotary.com/web/wxapp/index.html">PPT超级市场</a></p>
<p><a href="https://www.wolframalpha.com/">Wolfram | Alpha：计算智能</a></p>
<p><a href="https://www.desmos.com/scientific?lang=zh-CN">Desmos | 科学计算器</a></p>
<p><a href="https://www.onlinedoctranslator.com/zh-CN/">免费的在线文档翻译器——保留原文档的排版（Word、PDF、Excel、Powerpoint、OpenOffice、文本）</a></p>
<p><a href="http://www.fanyigou.net/">翻译在线-Word翻译,Pdf翻译,文献论文翻译-翻译狗</a></p>
<p><a href="https://www.zhixi.com/space?page=owner">知犀官网</a></p>
<p><a href="https://wantwords.net/">WantWords 反向词典</a></p>
<p><a href="https://www.kdocs.cn/latest">金山文档 - 一起办公才高效</a></p>
<p><a href="https://docs.qq.com/desktop/?u=8590049e2df4408eb75f4175b1a2fae7&_from=1">腾讯文档</a></p>
<p><a href="https://www.ilovepdf.com/zh-cn">iLovePDF | 为PDF爱好者提供的PDF文件在线处理工具</a></p>
<h3 id="论文"><a href="#论文" class="headerlink" title="论文"></a>论文</h3><p><a href="https://webvpn.hnust.edu.cn/">湖南科技大学WebVPN系统门户</a></p>
<p><a href="http://www.cb.cnki.net/index.aspx">中国学术期刊论文投稿平台</a></p>
<p><a href="https://scholar.chongbuluo.com/">学术搜索 - 站在巨人的肩膀上 - Google 学术</a></p>
<p><a href="https://ifish.fun/paper/search">AnyPaper-所有论文都可免费下载</a></p>
<p><a href="http://www.ucdrs.superlib.net/">全国图书馆参考咨询联盟</a></p>
<p><a href="http://xueshu.baidu.com/">百度学术 - 保持学习的态度</a></p>
<p><a href="https://www.drugfuture.com/cnpat/cn_patent.asp">中国专利下载</a></p>
<p><a href="https://tool.yovisun.com/scihub/">SCI-Hub论文下载可用网址链接（实时更新） - YoviSun工具集</a></p>
<p><a href="https://www.storkapp.me/?ref=1003">文献鸟Stork，您忠实的科研助手，追踪新文献</a></p>
<p><a href="https://app.grammarly.com/">Grammarly</a></p>
<p><a href="https://fangjiangtong.chabiguo.com/">仿降通</a></p>
<p><a href="https://ludwig.guru/">Ludwig • Find your English sentence</a></p>
<p><a href="https://www.letpub.com.cn/index.php?page=journalapp">最新SCI期刊查询及投稿分析系统（2021-2022年） - LetPub</a></p>
<p><a href="https://www.researchgate.net/scientific-contributions/Hongli-Liu-2069011923">刘红丽的研究作品| 湖南大学、长沙等地</a></p>
<p><a href="https://sci.justscience.cn/">SCI期刊影响因子查询_2022年(2021年度)即时影响因子预测_唯问Justscience_中外核心期刊系统_友情价英文母语润色服务</a></p>
<p><a href="http://impactfactor.cn/ci.html">影响因子学科分类，影响因子中文官网</a></p>
<p><a href="https://blog.csdn.net/qq_41897304/article/details/120137875">IEEE论文参考文献引用格式_lliuhao–的博客-CSDN博客_ieee引用格式</a></p>
<p><a href="https://ieee.atyponrex.com/dashboard">My Submissions | IEEE Author Portal</a></p>
<h3 id="嵌入式"><a href="#嵌入式" class="headerlink" title="嵌入式"></a>嵌入式</h3><p><a href="https://gitee.com/zhengnianli/EmbedSummary">zhengnianli&#x2F;EmbedSummary: 嵌入式大杂烩资源汇总</a></p>
<p><a href="https://www.hackster.io/adambeedle/robot-swings-and-climbs-like-spider-man-32ed8c">机器人像蜘蛛侠一样摆动和攀爬 - Hackster.io</a></p>
<p><a href="https://blog.csdn.net/u013779722/article/details/78418217">C Primer Plus 第六版 所有章节课后编程练习答案_xiaojimmychen的专栏-CSDN博客</a></p>
<p><a href="http://www.doc88.com/p-2912992965095.html">最全的Proteus电子元件符号大全及汉英对照表 - 道客巴巴</a></p>
<p><a href="http://www.51hei.com/bbs/">51黑电子论坛-单片机 电子制作DIY MCU 嵌入式技术学习</a></p>
<p><a href="http://www.openedv.com/forum.php?gid=111">OpenEdv-开源电子网</a></p>
<p><a href="https://easydatasheet.cn/">易芯网 | 翻译2亿份元器件数据手册</a></p>
<p><a href="http://prechin.net/">普中开源电子分享网 - Powered by Discuz!</a></p>
<p><a href="https://www.freertos.org/">FreeRTOS - Market leading RTOS (Real Time Operating System) for embedded systems with Internet of Things extensions</a></p>
<p><a href="file:///D:/Study/%E5%B5%8C%E5%85%A5%E5%BC%8F/32/3%EF%BC%8CALIENTEK%E6%88%98%E8%88%B0STM32F1%20V3%E5%BC%80%E5%8F%91%E6%9D%BF%E5%8E%9F%E7%90%86%E5%9B%BE/WarShip%20STM32F1_V3.4_SCH.pdf">V3开发板原理图</a></p>
<h4 id="esp"><a href="#esp" class="headerlink" title="esp"></a>esp</h4><p><a href="https://download.csdn.net/download/qq_52336990/13116918">(44条消息) 51+ESP8266-01s（ap模式）WIFI控制小灯程序.zip_esp8266-01s-网管软件文档类资源-CSDN文库</a></p>
<p><a href="https://blog.csdn.net/weixin_51105655/article/details/122532259">单片机通过mqtt联网（51单片机和esp01s）_好肥的猪猪啊的博客-CSDN博客_单片机联网</a></p>
<p><a href="http://www.51hei.com/bbs/dpj-167192-1.html">51单片机连esp8266和手机端串口调试助手 手机端一直显示无法连接远程主机 - 24小时必答区</a></p>
<p><a href="https://www.bilibili.com/read/cv7036439">烂大街的ESP8266该怎么玩？ - 哔哩哔哩</a></p>
<p><a href="https://blog.csdn.net/wing_man/article/details/124517140">ESP8266-01S的AT指令调试与TCP连接_夜半良辰的博客-CSDN博客_esp8266 tcp连接</a></p>
<p><a href="https://blog.csdn.net/NICHUN12345/article/details/123745557">使用手机APP远程控制51单片机_⁽⁽ଘ晴空万里ଓ⁾⁾的博客-CSDN博客_手机app控制单片机</a></p>
<h4 id="课程"><a href="#课程" class="headerlink" title="课程"></a>课程</h4><p><a href="http://www.ilab-x.com/list?sid=222">项目列表</a></p>
<h5 id="课设"><a href="#课设" class="headerlink" title="课设"></a>课设</h5><p><a href="https://wenku.baidu.com/view/8e0c4f155901020206409c03.html?rec_flag=default">传感器课程设计霍尔位移传感器的设计 - 百度文库</a></p>
<p><a href="https://www.docin.com/p-941878595-f3.html">第6章_磁电式传感器 - 豆丁网</a></p>
<p><a href="https://wenku.baidu.com/view/99c9a6530640be1e650e52ea551810a6f424c84b.html">第7章-霍尔式传感器 - 图文 - 百度文库</a></p>
<p><a href="https://wenku.baidu.com/view/cfaae0766bec0975f565e2c9.html">基于线性霍尔元件的位移传感器设计 - 百度文库</a></p>
<p><a href="https://www.doc88.com/p-1716977317793.html">三运放高共模抑制比放大电路设计 - 道客巴巴</a></p>
<h5 id="课设2021"><a href="#课设2021" class="headerlink" title="课设2021"></a>课设2021</h5><p><a href="https://wenku.baidu.com/view/dd90d2eea0c7aa00b52acfc789eb172dec639940.html">数字信号发生器的设计毕业设计论文 - 百度文库</a></p>
<p><a href="https://wenku.baidu.com/view/9fa89e6b30b765ce0508763231126edb6f1a769a.html">多功能信号发生器毕业论文设计 - 百度文库</a></p>
<p><a href="http://www.51hei.com/bbs/dpj-131013-1.html">51单片机DAC0832波形发生器仿真加程序源码 - 单片机仿真论坛</a></p>
<p><a href="http://www.51hei.com/bbs/dpj-200942-1.html">51单片机简易波形发生器程序 Proteus仿真 模拟正弦波、方波、锯齿波和三角波 有注释 - 51单片机</a></p>
<p><a href="https://wenku.baidu.com/view/7615a3a50b4c2e3f57276398.html">c语言模块化编程(我见过最好的) - 百度文库</a></p>
<h5 id="毕设"><a href="#毕设" class="headerlink" title="毕设"></a>毕设</h5><p><a href="https://www.3dcontentcentral.cn/">3D ContentCentral - 免费 3D CAD 模型、2D 工程图和供应商目录</a></p>
<p><a href="http://www.openedv.com/thread-308933-1-1.html">【正点原子产品资料】战舰STM32F103开发板资料下载和技术讨论链接-OpenEdv-开源电子网</a></p>
<p><a href="https://wenku.baidu.com/view/87a1cf5c312b3169a451a47e.html?rec_flag=default">ADXL345官方资料中文翻译 - 百度文库</a></p>
<p><a href="https://blog.csdn.net/qq_41877422/article/details/85621972?utm_medium=distribute.pc_relevant_download.none-task-blog-baidujs-4.nonecase&depth_1-utm_source=distribute.pc_relevant_download.none-task-blog-baidujs-4.nonecase">STM32与ADXL335模块——角度传感器_少侠好走位-CSDN博客</a></p>
<p><a href="https://oshwhub.com/lengyuefeng/ji-yuesp8266-stm32f1-di-zhi-neng-sheng-huo-tao-jian">【训练营_进阶班】基于ESP8266的智慧生活套件 - 立创EDA开源硬件平台</a></p>
<p><a href="https://blog.csdn.net/sinat_40936062/article/details/95244689">(7条消息) STM32F103C8T6最小系统_sinat_40936062的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/ima_xu/article/details/85008406">详解去耦电容，真正的理解及在真正工程中的使用！_Ndst的博客-CSDN博客_去耦电容</a></p>
<p><a href="http://www.360doc.com/content/20/1224/14/35356821_953221736.shtml">上拉、下拉以及对应上拉电阻和下拉电阻的作用原理</a></p>
<p><a href="https://www.cnblogs.com/nimadi/p/12166800.html">STM32固件库详解 - 泥马帝 - 博客园</a></p>
<p><a href="https://living.aliyun.com/project/a123qqHPFmxzPeHZ/dev/product/a1i2E36q2ch/Interact/device_panel">手机控制页面</a></p>
<p><a href="https://studio.iot.aliyun.com/web/a1237TJOSNF5wiKn/app/a120VhUU6JSxab4t/edit">web开发页面</a></p>
<p><a href="http://co.gocheck.cn/dashboard/analysis">G·格子达本科毕设（论文）管理系统</a></p>
<p><a href="https://a120vhuu6jsxab4t.vapp.cloudhost.link/a1LDFPuJaFfxCYKv/page/563282?token=4e668ad16ec1af4a9e777a4f3b42b48d">空压机状态监测系统</a></p>
<h6 id="bmp280"><a href="#bmp280" class="headerlink" title="bmp280"></a>bmp280</h6><p><a href="https://blog.csdn.net/zhangyl000/article/details/111163179">(7条消息) BMP280使用笔记_zhangyl000的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/bdjsm_hh/article/details/107623788?utm_medium=distribute.pc_relevant_download.none-task-blog-blogcommendfrombaidu-4.nonecase&depth_1-utm_source=distribute.pc_relevant_download.none-task-blog-blogcommendfrombaidu-4.nonecas">(7条消息) STM32驱动BMP280模块_bdjsm_hh的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/zhangyl000/article/details/111053314">(7条消息) 单片机-bmp280大气压强与温度传感器使用详解_zhangyl000的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/sunshinebooming/article/details/79637822">BMP280使用详解_sunshinebooming的博客-CSDN博客_bmp280</a></p>
<h6 id="ADC"><a href="#ADC" class="headerlink" title="ADC"></a>ADC</h6><p><a href="https://blog.csdn.net/asdfg1075511750/article/details/84196095">(7条消息) STM32_ADC框图理解_‘朕不是皇’的博客-CSDN博客_stm32ad转换流程图</a></p>
<p><a href="https://bbs.elecfans.com/jishu_2029885_1_1.html">【新提醒】STM32F1 ADC主要特性和结构框图 - 电路设计论坛 - 电子技术论坛 - 广受欢迎的专业电子论坛!</a></p>
<p><a href="https://blog.csdn.net/qq_43743762/article/details/100067558">(7条消息) STM32—ADC详解_肥宅快乐博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/laifengyuan1/article/details/107481945?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242">(7条消息) STM32: ADC采样频率及相应时间的确定_不吃鱼的猫的博客-CSDN博客_stm32adc采样频率</a></p>
<h6 id="OLED"><a href="#OLED" class="headerlink" title="OLED"></a>OLED</h6><p><a href="https://yngzmiao.blog.csdn.net/article/details/80033873?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-5.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-5.control">(7条消息) 【常用模块】OLED显示模块（原理讲解、STM32实例操作）_Yngz_Miao的博客-CSDN博客_oled模块</a></p>
<p><a href="https://blog.csdn.net/Keep_moving_tzw/article/details/104877286?utm_term=I2C%E4%B8%8Eoled%E9%80%9A%E4%BF%A1&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-1-104877286&spm=3001.4430">(7条消息) 【STM32F103笔记】9、I2C通信——玩转OLED（OLED命令详解）_TTZZWWW-CSDN博客</a></p>
<h6 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a>ESP8266</h6><p><a href="https://blog.csdn.net/tiantang_1986/article/details/85101366">(7条消息) MQTT.fx的安装和使用_一只没有脚的鸟-CSDN博客_mqtt.fx</a></p>
<p><a href="https://help.aliyun.com/document_detail/140507.html?spm=a2c4g.11186623.6.584.486b3799i3D9Jh">使用MQTT.fx接入物联网平台 - 阿里云物联网平台 - 阿里云</a></p>
<p><a href="https://blog.csdn.net/qq_21229657/category_6665596.html">基于STM32的ESP8266使用教程</a></p>
<p><a href="https://blog.csdn.net/mbs520/article/details/109572070">AT</a></p>
<p><a href="https://www.icxbk.com/article/detail/1598.html">物联网—利用ESP8266和STM32单片机接入服务器-电子芯吧客（www.icxbk.com）</a></p>
<p><a href="file:///D:/%E9%A1%B9%E7%9B%AE/%E5%9F%BA%E4%BA%8E%E5%9B%A0%E7%89%B9%E7%BD%91%E7%9A%84%E7%A9%BA%E5%8E%8B%E6%9C%BA%E8%BF%90%E8%A1%8C%E7%8A%B6%E6%80%81%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1/%E8%AE%BA%E6%96%87%E7%A8%BF/5%E5%9F%BA%E4%BA%8E%E5%9B%A0%E7%89%B9%E7%BD%91%E7%9A%84%E7%A9%BA%E5%8E%8B%E6%9C%BA%E8%BF%90%E8%A1%8C%E7%8A%B6%E6%80%81%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1.pdf">5基于因特网的空压机运行状态监控系统的设计.pdf</a></p>
<h4 id="校园网"><a href="#校园网" class="headerlink" title="校园网"></a>校园网</h4><p><a href="https://greasyfork.org/zh-CN/scripts/423581-%E6%B9%96%E5%8D%97%E4%BF%A1%E6%81%AF%E8%81%8C%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%AD%A6%E9%99%A2-%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/code">湖南信息职业技术学院 校园网自动登录 - 源码</a></p>
<p><a href="https://greasyfork.org/zh-CN/scripts/446921-%E5%8E%A6%E9%97%A8%E8%BD%AF%E4%BB%B6%E8%81%8C%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%AD%A6%E9%99%A2%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E6%8F%92%E4%BB%B6">厦门软件职业技术学院校园网自动登录插件</a></p>
<p><a href="https://jakting.com/archives/drcom-autologin-padavan-tgbot.html">Dr.COM校园网多设备解决方案——路由器 Padavan&#x2F;LuCI 固件自动网页认证+Telegram Bot 定时发送连接情况 - 老虎豆</a></p>
<p><a href="https://greasyfork.org/zh-CN/scripts?q=%E6%A0%A1%E5%9B%AD%E7%BD%91">用户脚本</a></p>
<p><a href="https://greasyfork.org/zh-CN/scripts/412742-%E6%A1%82%E6%9E%97%E7%90%86%E5%B7%A5%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/code">桂林理工校园网自动登录 - 源码</a></p>
<p><a href="https://greasyfork.org/zh-CN/scripts/389970-%E4%B8%AD%E5%8E%9F%E5%B7%A5%E5%AD%A6%E9%99%A2-%E4%B8%AD%E5%8E%9F%E5%B7%A5-%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/code">中原工学院（中原工）校园网自动登录 - 源码</a></p>
<p><a href="https://greasyfork.org/en/scripts/448662-%E6%B9%96%E5%8D%97%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95hnust">湖南科技大学校园网自动登录HNUST</a></p>
<p><a href="https://greasyfork.org/zh-CN/scripts/433707-%E5%8D%97%E6%98%8C%E5%A4%A7%E5%AD%A6%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5/code">南昌大学校园网自动连接 - 源码</a></p>
<p><a href="https://github.com/notnotype/hnust-auto-login/blob/main/readme.md?plain=1">hnust-auto-login&#x2F;readme.md at main · notnotype&#x2F;hnust-auto-login</a></p>
<h4 id="打卡"><a href="#打卡" class="headerlink" title="打卡"></a>打卡</h4><p><a href="https://github.com/dundunnp/auto_xuexiqiangguo/blob/version-15.53/%E5%85%B6%E4%BB%96%E8%84%9A%E6%9C%AC/%E5%8D%97%E5%A4%A7%E5%AE%B6%E5%9B%AD%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1/%E5%8D%97%E5%A4%A7%E5%AE%B6%E5%9B%AD%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1.js">auto_xuexiqiangguo&#x2F;南大家园自动打卡.js at version-15.53 · dundunnp&#x2F;auto_xuexiqiangguo · GitHub</a></p>
<p><a href="https://github.com/search?q=hamibot">Search · hamibot</a></p>
<p><a href="https://hamibot.com/">hamibot</a></p>
<p><a href="https://oshwhub.com/">立创EDA开源硬件平台</a></p>
<h4 id="板子"><a href="#板子" class="headerlink" title="板子"></a>板子</h4><p><a href="https://oshwhub.com/xywang/gameboy">自制GameBoy游戏机 - 嘉立创EDA开源硬件平台</a></p>
<p><a href="https://oshwhub.com/45coll/zi-ping-heng-di-lai-luo-san-jiao_10-10-ban-ben_copy">莱洛三角V2-esp32-无刷驱动EG2133 - 嘉立创EDA开源硬件平台</a></p>
<p><a href="https://oshwhub.com/45coll/zi-ping-heng-di-lai-luo-san-jiao_10-10-ban-ben">自平衡的莱洛三角_esp32_可充电_10*10版本 - 嘉立创EDA开源硬件平台</a></p>
<p><a href="https://oshwhub.com/mazhiliang/nfc_card_4in1">NFC名片4合1 NfcCard-4in1 - 嘉立创EDA开源硬件平台</a></p>
<p><a href="https://oshwhub.com/Aknice/1dfda80b41104751846aecc99dd9e055">HDMI3 进1出切换器 AG7111芯片验证板 - 嘉立创EDA开源硬件平台</a></p>
<p><a href="https://oshwhub.com/Aknice/she-yinvu-dian-ping-biao_copy">拾音律动VU电平表（青春版） - 嘉立创EDA开源硬件平台</a></p>
<p><a href="https://github.com/liaozhelin/yds-charger">liaozhelin&#x2F;yds-charger: 一个精致的多功能四路166W桌面充电器</a></p>
<p><a href="https://x.jlc.com/platform/categoryPreview?subject=&projectType=all&queryTime=">硬件开发设计方案共享平台 - 硬创社</a></p>
<h3 id="DL"><a href="#DL" class="headerlink" title="DL"></a>DL</h3><h4 id="标注工具"><a href="#标注工具" class="headerlink" title="标注工具"></a>标注工具</h4><p><a href="https://app.roboflow.com/395841716-qq-com">Roboflow</a></p>
<p><a href="https://www.makesense.ai/">makesense标注</a></p>
<p><a href="https://cvat.org/auth/login">计算机视觉注释工具</a></p>
<p><a href="https://pytorch.org/docs/stable/index.html">PyTorch 文档</a></p>
<p><a href="https://colab.research.google.com/?utm_source=scs-index#scrollTo=2fhs6GZ4qFMx">Cola</a></p>
<p><a href="https://www.autodl.com/console/instance/list">AutoDL-品质GPU租用平台-租GPU就上AutoDL</a></p>
<p><a href="https://mofanpy.com/">莫烦Python</a></p>
<p><a href="https://www.liaoxuefeng.com/">廖雪峰的官方网站</a></p>
<p><a href="https://www.runoob.com/python3/python3-tutorial.html">Python3 教程 | 菜鸟教程</a></p>
<p><a href="https://www.cs.ryerson.ca/~aharley/vis/conv/">卷积神经网络的 3D 可视化</a></p>
<p><a href="https://codepen.io/tommyzihao/pen/ZEKpQxR">MediaPipe - Hands</a></p>
<p><a href="https://lutzroeder.github.io/netron/">Netron-模型分析</a></p>
<p><a href="https://nndl.github.io/">神经网络与深度学习</a></p>
<p><a href="https://www.valeo.com/cn/%e4%ba%ba%e5%b7%a5%e6%99%ba%e8%83%bd%e5%92%8c%e6%b7%b1%e5%ba%a6%e5%ad%a6%e4%b9%a0%e7%a0%94%e7%a9%b6%e4%b8%ad%e5%bf%83/">Valeo.ai</a></p>
<p><a href="https://gas.graviti.cn/open-datasets">公开数据集下载，优质机器学习数据集，图像识别、NLP免费获取 | 格物钛，非结构化数据平台</a></p>
<p><a href="https://www.kaggle.com/">Kaggle: Your Machine Learning and Data Science Community</a></p>
<p><a href="https://zh.d2l.ai/">《动手学深度学习》 — 动手学深度学习 2.0.0-beta0 documentation</a></p>
<p><a href="https://docs.google.com/presentation/d/11mR1nkIR9fbHegFkcFq8z9oDQ5sjv8E3JJp1LfLGKuk/edit#slide=id.g78327f1586_217_821">ML Visuals - Google 幻灯片</a></p>
<p><a href="https://mp.weixin.qq.com/s/XO05gwcy-l0KP0jA01Q3NQ">普通段位CV玩家上岸算法岗之路</a></p>
<p><a href="https://mp.weixin.qq.com/s/zXEvPu1rZaHhntv8WSRvFQ">非广告 | AI全栈工程师学习+进阶+实战笔记</a></p>
<p><a href="https://mp.weixin.qq.com/s/AZ5S0-7OT3fGsefcighlMw">训练好的深度学习模型原来这样部署的！（干货满满，收藏慢慢看）</a></p>
<h3 id="海思"><a href="#海思" class="headerlink" title="海思"></a>海思</h3><p><a href="https://gitee.com/HiSpark/HiSpark_NICU2022">HiSpark&#x2F;HiSpark_NICU2022</a></p>
<p><a href="https://www.hisilicon.com/cn/chip-tactic/embedded-competition/winnerlist">嵌入式大赛获奖作品 | 海思</a></p>
<p><a href="https://www.hisilicon.com/cn/chip-academy">海思 - 芯课堂</a></p>
<h4 id="台球"><a href="#台球" class="headerlink" title="台球"></a>台球</h4><p><a href="https://github.com/search?q=Billiards">Search · Billiards</a></p>
<p><a href="https://blog.csdn.net/olncy/article/details/3341541?utm_term=%E6%A1%8C%E7%90%83%E7%A2%B0%E6%92%9E%E7%AE%97%E6%B3%95&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-3-3341541&spm=3001.4430">关于台球（刚体）碰撞物理模型的编写方案_olncy的博客-CSDN博客</a></p>
<p><a href="https://www.cnblogs.com/mumuxinfei/p/4414281.html">台球游戏的核心算法和AI(1) - mumuxinfei - 博客园</a></p>
<p><a href="https://www.bbsmax.com/A/obzbvxYjzE/">台球游戏的核心算法和AI(2)</a></p>
<p><a href="https://blog.csdn.net/qq_43592352/article/details/113738688">台球html游戏算法介绍_征途黯然.的博客-CSDN博客_台球算法</a></p>
<p><a href="https://blog.csdn.net/qq_36738482/article/details/75756700?utm_term=%E6%A1%8C%E7%90%83%E7%A2%B0%E6%92%9E%E7%AE%97%E6%B3%95&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-2-75756700&spm=3001.4430">完全碰撞问题 台球碰撞_big大鸟的博客-CSDN博客</a></p>
<p><a href="https://www.pudn.com/detail/4178723?spm=1000.2123.3001.8073.3">djf.rar_C#_C#编程_Windows编程下载-pudn.com</a></p>
<p><a href="http://socchina.net/">嵌入式芯片与系统设计竞赛首页-嵌入式芯片与系统设计竞赛官网-嵌入式暨智能互联大赛官网</a></p>
<h3 id="YOLO"><a href="#YOLO" class="headerlink" title="YOLO"></a>YOLO</h3><p><a href="https://pjreddie.com/darknet/yolo/">YOLO</a></p>
<p><a href="https://www.cnblogs.com/augustone/p/10627426.html">survey</a></p>
<p><a href="https://github.com/ageron/handson-ml2">机器学习实战</a></p>
<p><a href="https://datawhalechina.github.io/leeml-notes/#/">李宏毅机器学习LeeML-Notes</a></p>
<p><a href="https://www.kaggle.com/c/state-farm-distracted-driver-detection/data">国营农场分心驾驶员检测 | 卡格尔</a></p>
<p><a href="https://www.heywhale.com/home/column/5dd7524c83b6ff002c786fff">吴恩达《机器学习》 - Heywhale.com</a></p>
<p><a href="https://github.com/meituan/YOLOv6">YOLOv6</a></p>
<p><a href="https://github.com/WongKinYiu/yolov7">yolov7</a></p>
<p><a href="https://github.com/search?q=yolo-for-k210">搜索·yolo-for-k210</a></p>
<h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><p><a href="https://github.com/Gumpest/YOLOv5-Multibackbone-Compression">Gumpest&#x2F;YOLOv5-Multibackbone-Compression: YOLOv5 Series Multi-backbone(TPH-YOLOv5, Ghostnet, ShuffleNetv2, Mobilenetv3Small, EfficientNetLite, PP-LCNet, SwinTransformer YOLO), Module(CBAM, DCN), Pruning (EagleEye, Network Slimming) and Quantization (MQBench) Compression Tool Box.</a></p>
<p><a href="https://blog.csdn.net/weixin_46297839/article/details/118729401?ops_request_misc=&request_id=&biz_id=102&utm_term=yolov5%E4%BF%AE%E6%94%B9&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-118729401.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&spm=1018.2226.3001.4187">中文修改</a></p>
<p><a href="https://blog.csdn.net/weixin_56184890/article/details/119840555?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165173285816781667828444%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165173285816781667828444&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-4-119840555.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=yolov5%E4%BF%AE%E6%94%B9&spm=1018.2226.3001.4187">YOLOV5 模型和代码修改——针对小目标识别_xiaoY322的博客-CSDN博客_yolov5小目标</a></p>
<p><a href="https://blog.csdn.net/fadaishaitaiyang/article/details/123719611?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165173285816781667828444%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165173285816781667828444&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-123719611.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=yolov5%E4%BF%AE%E6%94%B9&spm=1018.2226.3001.4187">替换MobileNetv2</a></p>
<p><a href="https://blog.csdn.net/weixin_44119362/article/details/114289607?ops_request_misc=&request_id=&biz_id=102&utm_term=yolov5%E4%BF%AE%E6%94%B9&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-7-114289607.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&spm=1018.2226.3001.4187">一点就分享系列（实践篇3-上篇）— 修改YOLOV5 之”魔刀小试“+ Trick心得分享+V5精髓部分源码解读_啥都会一点的老程的博客-CSDN博客_yolov5魔改</a></p>
<p><a href="https://blog.csdn.net/weixin_42182534/article/details/123418604?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165173285816780357256326%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=165173285816780357256326&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-11-123418604.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=yolov5%E4%BF%AE%E6%94%B9&spm=1018.2226.3001.4187">YOLOv5尝试修改backbone_江小白jlj的博客-CSDN博客_yolov5修改backbone</a></p>
<p><a href="https://blog.csdn.net/weixin_43694096/article/details/124413941?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165173285816780357256326%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=165173285816780357256326&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-19-124413941.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=yolov5%E4%BF%AE%E6%94%B9&spm=1018.2226.3001.4187">换激活函数</a></p>
<p><a href="https://docs.ultralytics.com/tutorials/training-tips-best-results/">最佳训练结果提示📌 - YOLOv5 文档</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/330535757">CV中即插即用的注意力模块 - 知乎</a></p>
<p><a href="https://blog.csdn.net/wa1tzy/article/details/114492726?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165164679816781683930081%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165164679816781683930081&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-114492726.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=yolov5%E4%BF%AE%E6%94%B9%E4%B8%BB%E5%B9%B2%E7%BD%91%E7%BB%9C&spm=1018.2226.3001.4187">修改网络结构</a></p>
<h4 id="v5"><a href="#v5" class="headerlink" title="v5"></a>v5</h4><p><a href="https://blog.csdn.net/qq_38253797/article/details/119043919">【YOLOV5-5.x 源码讲解】整体项目文件导航_满船清梦压星河HK的博客-CSDN博客_yolov5源码讲解</a></p>
<p><a href="https://blog.csdn.net/wjinjie/article/details/107509243?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163082957716780366599375%2522%252C%2522scm%2522%253A%252220140713.130102334%E2%80%A6%2522%257D&request_id=163082957716780366599375&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2alltop_positive~default-1-107509243.first_rank_v2_pc_rank_v29&utm_term=yolo&spm=1018.2226.3001.4187">YOLO系列算法精讲：从yolov1至yolov4的进阶之路（2万字超全整理，建议收藏！）_不积跬步，无以至千里！-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/Q1u1NG/article/details/107511465">YOLOV5网络结构_Q1u1NG的博客-CSDN博客_yolov5网络结构</a></p>
<p><a href="https://blog.csdn.net/weixin_44057060/article/details/124349715?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-124349715-null-null.pc_agg_new_rank&utm_term=yolov5%20%E6%8E%A5%E7%9D%80%E4%B8%8A%E4%B8%80%E4%B8%AA%E6%A8%A1%E5%9E%8B%E7%BB%A7%E7%BB%AD%E8%AE%AD%E7%BB%83&spm=1000.2123.3001.4430">yolov5 继续训练_weixin_44057060的博客-CSDN博客_yolov5 继续训练</a></p>
<p><a href="https://blog.csdn.net/weixin_44119362/article/details/120748319?spm=1001.2014.3001.5501">YOLOv5 v6.0改动说明和思考</a></p>
<h4 id="v7"><a href="#v7" class="headerlink" title="v7"></a>v7</h4><p><a href="https://blog.csdn.net/athrunsunny/article/details/125951001?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0-125951001-blog-125883770.pc_relevant_show_downloadRating&spm=1001.2101.3001.4242.1&utm_relevant_index=1">理解yolov7网络结构_athrunsunny的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/u010899190/article/details/125883770">深入浅出 Yolo 系列之 Yolov7 基础网络结构详解_计算机视觉linke的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/weixin_44119362/article/details/125665404">一点就分享系列（实践篇5-上篇）[持续更新中！代码已吸收！依旧全网首发] yolov7解析：yolov5的plus扩充 ，仍旧值得学习！一起看V5代码如何变成V7！_啥都会一点的老程的博客-CSDN博客</a></p>
<p><a href="https://github.com/positive666/yolov5_research">positive666&#x2F;yolov5_research: improvement research based on yolov5,SwintransformV2 and Attention Series. training skills, business customization, engineering deployment C</a></p>
<p><a href="http://cpuwdl.com/archives/17/">python中使用opencv进行CLAHE处理 - 流水日记</a></p>
<p><a href="https://blog.csdn.net/qq_38901147/article/details/82531654?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-82531654-blog-118771352.pc_relevant_multi_platform_whitelistv4eslandingrelevant&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-82531654-blog-118771352.pc_relevant_multi_platform_whitelistv4eslandingrelevant&utm_relevant_index=2">(2条消息) 图像去噪经典算法（均值滤波，高斯滤波，双边滤波，中值滤波）_睡虎的博客-CSDN博客_图像滤波去噪算法</a></p>
<p><a href="https://mp.weixin.qq.com/s/FjX52X15U-BdLtdZgmSj_w">YoloV5一系列实践详情，Github代码已开源</a></p>
<p><a href="https://blog.csdn.net/Emins/article/details/125484539">机器学习分类问题指标评估内容详解（准确率、精准率、召回率、F1、ROC、AUC等）_Emins的博客-CSDN博客_准确率召回率f1分数</a></p>
<p><a href="https://blog.csdn.net/qq_40507857/article/details/118764782?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166496900516782391872544%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=166496900516782391872544&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-118764782-null-null.142%5Ev51%5Econtrol,201%5Ev3%5Eadd_ask&utm_term=flops%E5%92%8Cparams&spm=1018.2226.3001.4187">深度学习中模型计算量(FLOPs)和参数量(Params)的理解以及四种计算方法总结_紫芝的博客-CSDN博客_模型计算量</a></p>
<p><a href="https://blog.csdn.net/mathnan/article/details/115002778?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-115002778-blog-117715293.t5_refersearch_landing&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-115002778-blog-117715293.t5_refersearch_landing&utm_relevant_index=4">AP、mAP、F1 Score、PR曲线、ROC曲线_mathnan的博客-CSDN博客</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/172121380">深入浅出Yolo系列之Yolov5核心基础知识完整讲解 - 知乎</a></p>
<p><a href="https://mp.weixin.qq.com/s/N07bmetEkyDXbLl5YzL3JA">深入浅出Yolov1-v7，全系列Tricks解析汇总，值得推荐！</a></p>
<p><a href="https://github.com/lp6m/yolov5s_android">lp6m&#x2F;yolov5s_android: Run yolov5s on Android device!</a></p>
<p><a href="https://github.com/iscyy/yoloair/wiki/Improved-tutorial-presentation">Improved tutorial presentation · iscyy&#x2F;yoloair Wiki</a></p>
<h3 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h3><p><a href="https://github.com/Arrowes/Arrowes.github.io">Arrowes&#x2F;Arrowes.github.io</a></p>
<p><a href="https://hexo.io/zh-cn/">Hexo</a></p>
<p><a href="https://dc.console.aliyun.com/next/index?spm=5176.12818093.ProductAndResource--ali--widget-product-recent.dre1.265516d0P13nxv#/overview">域名控制台</a></p>
<p><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown 教程 | 菜鸟教程</a></p>
<p><a href="http://lanbing510.info/2016/04/24/C-Language-Understanding.html">博客 | 冰蓝记录思考的地方</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo 搭建个人网站详细教程 - 知乎</a></p>
<p><a href="https://hexo.io/zh-cn/docs/commands">指令 | Hexo</a></p>
<p><a href="https://blog.csdn.net/HTL2018/article/details/106876940">hexo发生error：spawn failed错误的解决方法_HuangTLhit的博客-CSDN博客</a></p>
<p><a href="https://river106.cn/">river’s blog - 记录与分享</a></p>
<p><a href="https://www.wukong918.cn/Hexo%E7%9A%84Next%E4%B8%BB%E9%A2%98%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF.html">Hexo的Next主题如何添加动态背景 | 悟空的博客</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/28128674">hexo的next主题个性化教程:打造炫酷网站 - 知乎</a></p>
<p><a href="http://localhost:4000/">localhost:4000</a></p>
<p><a href="https://fontawesome.com/icons">Find Icons with the Perfect Look &amp; Feel | Font Awesome</a></p>
<p><a href="https://zoharandroid.github.io/2019-08-03-%E8%AE%A9%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/">让Google搜索到自己的博客</a></p>
<p><a href="https://www.bilibili.com/"></a></p>
<p><a href="https://www.baidu.com/link?url=wK3Nls9D7eJq9nufHBR2131KjjQ09BMBWp6icXe2Lnm&wd=&eqid=dbae2d5e000062050000000662e12dea"></a></p>
<p><a href="https://www.baidu.com/link?url=359ws0zClpNEZuksxaomACos1bBFk1c5kJpHSh4DVbO&wd=&eqid=e561a698002d3eb10000000662a553f6"></a></p>
<p><a href="https://github.com/Arrowes"></a></p>
<p><a href="https://github.com/linyiLYi/pose-monitor">pose-monitor</a></p>
<p><a href="https://leetcode-cn.com/">力扣</a></p>
<p><a href="https://arrowes.github.io/"></a></p>
<p><a href="http://99558911.qqszwang.com/?buyok=1">QQ代刷网 - 专业代刷QQ业务名片赞秒赞,最好的QQ代刷网平台-666秒赞吧</a></p>
<p><a href="https://bbs.tianya.cn/m/post-culture-1006759-1.shtml">三体:银河纪元_舞文弄墨_论坛_天涯社区</a></p>
<p><a href="https://www.gaoding.com/koutu?hmsr=zhongcao-kt_zh_47-koutu---sy47-bdqd&utm_medium=&utm_source=zhongcao">【抠图】在线抠图软件_ps抠图证件照换底色-稿定设计</a></p>
<p><a href="https://suulnnka.github.io/BullshitGenerator/index.html?%E4%B8%BB%E9%A2%98=%E4%B8%80%E5%A4%A9%E6%8E%89%E5%A4%9A%E5%B0%91%E6%A0%B9%E5%A4%B4%E5%8F%91&%E9%9A%8F%E6%9C%BA%E7%A7%8D%E5%AD%90=3506239116">狗屁不通文章生成器</a></p>
<p><a href="http://www.innerken.com/CHP/">彩虹屁生成器</a></p>
<p><a href="http://www.qqkm.net/index/#wddd">卡盟排行榜推荐首选卡盟各种各样货源站点-汇想卡盟</a></p>
<p><a href="http://www.bewindoweb.com/dwg.php">嗖嗖搜 | BEWINDOWEB</a></p>
<p><a href="https://essay.1ts.fun/">小论文神器【一键生成，随意更新段落内容，标准格式下载】</a></p>
<p><a href="https://www.yikm.net/nes?page=2&tag=&e=">小霸王，其乐无穷 。红白机，FC在线游戏，街机游戏，街机在线，NES games，NES games online，Super Mario</a></p>
<p><a href="https://www.zhenbuka.com/">真不卡电影网_我不卡影院 - 真正不卡的超清电影网站</a></p>
<p><a href="https://www.gaitubao.com/">改图宝 - 在线修改照片大小尺寸工具</a></p>
<p><a href="https://docsmall.com/">docsmall - 免费在线图片压缩、GIF压缩工具、PDF压缩工具、PDF合并工具、PDF分割工具</a></p>
<p><a href="https://pdc.capub.cn/index.html">中国最权威的出版物数据服务平台（PDC）</a></p>
]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>DL：深度学习相关概念</title>
    <url>/2022/12/28/DL/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="深度学习框架"><a href="#深度学习框架" class="headerlink" title="深度学习框架"></a><a href="bilibili.com/video/BV14f4y1q7ms?p=3">深度学习框架</a></h1><pre class="mermaid">graph LR
A[程序框架]-->B[A.黑箱]
A-->C[B.模块化] -->1.处理数据
C-->2.构建网络
C-->3.损失函数
C-->4.优化函数
C-->5.模型保存
A-->E[C.定义]</pre>
<p><img src="/images/344cde48d397b26519717e0fceb12a89a93ce710b1289e55c503e3209f6fbd61.png" alt="图 10"><br>GPU 网络和数据要同时送进GPU</p>
<h2 id="感受野"><a href="#感受野" class="headerlink" title="感受野"></a>感受野</h2><p>感受野被定义为卷积神经网络特征所能看到输入图像的区域，换句话说特征输出受感受野区域内的像素点的影响。<img src="/images/ed608fbfae27bd5e0a2b0d5e517c47d1d49d249d7fab85b1e90e8aa329307381.png" alt="图 11"> </p>
<h2 id="Optimizer"><a href="#Optimizer" class="headerlink" title="Optimizer"></a>Optimizer</h2><h3 id="Adam和SGD"><a href="#Adam和SGD" class="headerlink" title="Adam和SGD"></a>Adam和SGD</h3><p><img src="/images/588eef77b3289781adf9761b6693e036a88ffe462efd70033b319dce91997f1e.gif" alt="图 12"><br>$$SGD → SGDM → NAG → AdaGrad → AdaDelta → Adam → Nadam$$<br><img src="/images/100f42c80b5ce9a14ca53d2ca5ffc3597a7f9a64cd2b39edb339ce47caba89dc.png" alt="图 13">  </p>
<h2 id="Batch-size"><a href="#Batch-size" class="headerlink" title="Batch size"></a>Batch size</h2><p>batch size的大小影响的是训练过程中的完成①<em>每个epoch所需的时间</em>（假设算力确定了）和每次迭代(iteration)之间②<em>梯度的平滑程度</em>。</p>
<blockquote>
<p>①假设训练集大小为N，每个epoch中mini-batch大小为b，那么完成每个epoch所需的迭代次数为 N&#x2F;b , 因此完成每个epoch所需的时间会随着迭代次数的增加而增加<br>②如pytorch\tensorflow等深度学习框架，在进行mini-batch的loss反向传播时，一般都是先将每个mini-batch中每个样本得到的loss求sum后再平均化之后再反求梯度，进行迭代，因此b的大小决定了相邻迭代batch之间的梯度平滑程度。一个batch内所含样本越多，这个batch的梯度应该越能反映真实的梯度，因此这样的大batch间梯度不会跨越太大</p>
</blockquote>
<p>因此：大的batch_size往往建议可以相应取大点learning_rate, 因为梯度震荡小，大 learning_rate可以加速收敛过程，也可以防止陷入到局部最小值，而小batch_size用小learning_rate迭代，防止错过最优点，一直上下震荡没法收敛 </p>
<blockquote>
<ol>
<li>若是loss还能降，指标还在升，那说明欠拟合，还没收敛，应该继续train，增大epoch。</li>
<li>若是loss还能再降，指标也在降，说明过拟合了，那就得采用提前终止（减少epoch）或采用weight_decay等防过拟合措施。</li>
<li>若是设置epoch&#x3D;16，到第8个epoch，loss也不降了，指标也不动了，说明8个epoch就够了，剩下的白算了。</li>
</ol>
</blockquote>
<h2 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h2><h3 id="交叉熵损失函数「Cross-Entropy-Loss」"><a href="#交叉熵损失函数「Cross-Entropy-Loss」" class="headerlink" title="交叉熵损失函数「Cross Entropy Loss」"></a>交叉熵损失函数「Cross Entropy Loss」</h3><p>$$L&#x3D;-[ylog\hat{y}+(1-y)log(1-\hat{y})]$$<br>$$L&#x3D;\sum_{i&#x3D;1}^{N}y^ilog\hat{y}^i+(1-y^i)log(1-\hat{y}^i)$$<br>在Pytorch中，BCELoss和BCEWithLogitsLoss是一组常用的二元交叉熵损失函数，常用于二分类问题。区别在于BCELoss的输入需要先进行Sigmoid处理，而BCEWithLogitsLoss则是将Sigmoid和BCELoss合成一步，也就是说BCEWithLogitsLoss函数内部自动先对output进行Sigmoid处理，再对output 和target进行BCELoss计算。<br>BCELoss和BCEWithLogitsLoss还提供了两个重要参数： </p>
<blockquote>
<p>weight：可用于控制各样本的权重，常用作对对齐后的数据进行mask操作（设为0）<br>reduction：控制损失输出模式。设为”sum”表示对样本进行求损失和；设为”mean”表示对样本进行求损失的平均值；而设为”none”表示对样本逐个求损失，输出与输入的shape一样。<br>此外BCEWithLogitsLoss还提供了参数pos_weight用于设置损失的class权重，用于缓解样本的不均衡问题。</p>
</blockquote>
<h1 id="注意力机制（Attention-Mechanism）"><a href="#注意力机制（Attention-Mechanism）" class="headerlink" title="注意力机制（Attention Mechanism）"></a>注意力机制（Attention Mechanism）</h1><p>自上而下有意识的聚焦称为<strong>聚焦式注意力</strong>，自下而上无意识、由外界刺激引发的注意力称为<strong>显著式注意力</strong>。<br>神经网络中的注意力机制是在计算能力有限的情况下，将计算资源分配给更重要的任务，同时解决信息超载问题的一种资源分配方案，到2014年，Volodymyr的《Recurrent Models of Visual Attention》一文中将其应用在视觉领域，后来伴随着2017年Ashish Vaswani的《Attention is all you need》中Transformer结构的提出，注意力机制在NLP,CV相关问题的网络设计上被广泛应用。<br>注意力有两种，一种是软注意力(soft attention)，另一种则是强注意力(hard attention)。<br><strong>软注意力</strong>更关注区域或者通道，是确定性的注意力，学习完成后直接可以通过网络生成，最关键的地方是软注意力是可微的，这是一个非常重要的地方。可以微分的注意力就可以通过神经网络算出梯度并且前向传播和后向反馈来学习得到注意力的权重。<br><strong>强注意力</strong>是更加关注点，也就是图像中的每个点都有可能延伸出注意力，同时强注意力是一个随机的预测过程，更强调动态变化。当然，最关键是强注意力是一个不可微的注意力，训练过程往往是通过增强学习(reinforcement learning)来完成的。</p>
<h2 id="软注意力的注意力域"><a href="#软注意力的注意力域" class="headerlink" title="软注意力的注意力域"></a>软注意力的注意力域</h2><h3 id="空间域（Spatial-Domain）"><a href="#空间域（Spatial-Domain）" class="headerlink" title="空间域（Spatial Domain）"></a>空间域（Spatial Domain）</h3><p>空间域将原始图片中的空间信息变换到另一个空间中并保留了关键信息。<br>普通的卷积神经网络中的池化层（pooling layer）直接用一些max pooling 或者average pooling 的方法，将图片信息压缩，减少运算量提升准确率。<br>发明者认为之前pooling的方法太过于暴力，直接将信息合并会导致关键信息无法识别出来，所以提出了一个叫 <strong>空间转换器（spatial transformer）</strong> 的模块，将图片中的的空间域信息做对应的空间变换，从而能将关键的信息提取出来。<img src="/images/b755f4e3ca501037ef4f31cdf20e76226dab60729dda8999131f3d91b8c73029.png" alt="图 1">  </p>
<h3 id="通道域（Channel-Domain）"><a href="#通道域（Channel-Domain）" class="headerlink" title="通道域（Channel Domain）"></a>通道域（Channel Domain）</h3><p>通道注意力机制在计算机视觉中，更关注特征图中channel之间的关系，而普通的卷积会对通道做通道融合，这个开山鼻祖是SENet,后面有GSoP-Net，FcaNet 对SENet中的squeeze部分改进，EACNet对SENet中的excitation部分改进，SRM,GCT等对SENet中的scale部分改进。</p>
<p><a href="https://arxiv.org/abs/1709.01507">SENet</a>,<a href="https://github.com/moskomule/senet.pytorch">pytorch</a><br>SENet《Squeeze-and-Excitation Networks》是CVPR17年的一篇文章，提出SE module。在卷积神经网络中，卷积操作更多的是关注感受野，在通道上默认为是所有通道的融合（深度可分离卷积不对通道进行融合，但是没有学习通道之间的关系，其主要目的是为了减少计算量），SENet提出SE模块，将注意力放到通道之间，希望模型可以学习到不同通道之间的权重：<img src="/images/0c5214adad74f71cd2e5a5fb88b290102edf2a73b2c8678c2d5e7b6a6406878c.png" alt="图 8">  </p>
<h3 id="时域注意力机制"><a href="#时域注意力机制" class="headerlink" title="时域注意力机制"></a>时域注意力机制</h3><p>时域注意力机制在cv领域主要考虑有时序信息的领域，如视频领域中的动作识别方向，其注意力机制主要是在时序列中，关注某一时序即某一帧的信息。</p>
<h3 id="通道和空间注意力机制"><a href="#通道和空间注意力机制" class="headerlink" title="通道和空间注意力机制"></a>通道和空间注意力机制</h3><p>通道和空间注意力是基于通道注意力和空间注意力机制，将两者有效的结合在一起，让注意力能关注到两者，又称混合注意力机制，如CBAM,BAM,scSE等，同时基于混合注意力机制的一些关注点，如Triplet Attention 关注各种跨维度的相互作用；Coordinate Attention, DANet关注长距离的依赖；RGA 关注关系感知注意力。还有一种混合注意力机制，为3D的attention :Residual attention,SimAM, Strip Pooling, SCNet等。</p>
<p><a href="https://arxiv.org/abs/1807.06521">CBAM</a>,<a href="https://github.com/luuuyi/CBAM.PyTorch">github</a><br>CBAM (Convolutional Block Attention Module)是SENet的一种拓展，SENet主要基于通道注意力，CBAM是通道注意力和空间注意力融合的注意力机制。<img src="/images/1153e98fa26db00008fadc4159bd04f5e0062eb261e9c5b8d9fd9f70373698f0.png" alt="图 6"><br>如上图所示，输入一个h<em>w</em>c的特征图，通过channel Attention Module 生成通道注意力权重对输入特征图在通道层添加权重，再通过spatial Attention Module 生成空间注意力权重，对特征图在空间层添加权重，输出特征图。</p>
<h1 id="Metrics-评估"><a href="#Metrics-评估" class="headerlink" title="Metrics 评估"></a>Metrics 评估</h1><h2 id="混淆矩阵"><a href="#混淆矩阵" class="headerlink" title="混淆矩阵"></a>混淆矩阵</h2><p><img src="/images/3bacb5b697b3f89632f000291f5f832066eae51cb75d9d2456e3da41a1b433b5.png" alt="图 17"><br>X横坐标为正确的分类（即你用标签所标注的真实分类）<br>Y纵坐标为模型所预测的分类（即图片经过模型推理后模型将其辨别为的分类）</p>
<blockquote>
<p>True positives (TP): 猫🐱的图片被正确识别成了猫🐱。（猫🐱的正确分类预测）<br>True negatives(TN): 背景的图片被正确识别为背景。（非猫🐱被预测为其他动物或背景）<br>False positives(FP): 背景的图片被错误识别为猫🐱。（非猫🐱被预测为猫🐱）<br>False negatives(FN): 猫🐱的图片被错误识别为背景。（猫🐱被预测为其他动物或者背景）</p>
</blockquote>
<h2 id="Evaluation-parameters"><a href="#Evaluation-parameters" class="headerlink" title="Evaluation parameters"></a>Evaluation parameters</h2><p><strong>准确率 Accuracy</strong>：在正负样本数量接近的情况下，准确率越高，模型的性能越好（当测试样本不平衡时，该指标会失去意义。）<br>$$Accuracy&#x3D;\frac{TP+TN}{TP+FP+TN+FN}$$<br><strong>精准率（查准率） precision</strong>：代表在总体预测结果中真阳性的预测数，针对预测结果，当区分能力强时，容易将部分（与负样本相似度高）正样本排除。<br>$$precision(P)&#x3D;\frac{TP}{TP+FP}$$<br><strong>召回率（查全率） recall</strong>：所有ground truths中真阳性的预测数，针对原样本，当敏感度高时，容易将部分（与正样本相似度高）负样本也判断为正样本。<br>$$recall(R)&#x3D;\frac{TP}{TP+FN}$$<br><strong>F1 score</strong>：对Precision和Recall两个指标的调和平均值（类似平均速度），F1分值越高，目标检测的准确性越好。<br>$$F_1 score&#x3D;2\cdot \frac{P\cdot R}{P+R}$$<br><strong>AP</strong>：同时考察Precision和Recall两个指标来衡量模型对于各个类别的性能。<br>$$AP_i&#x3D;\int_0^1P_i(R_i)dR_i$$<br><strong>mAP</strong>：表示AP的平均值，并用作衡量目标检测算法的总体检测精度的度量。<br>将recall设置为横坐标，precision设置为纵坐标。PR曲线下围成的面积即AP，所有类别AP平均值即mAP.<br>$$mAP&#x3D;\frac1n\sum_{i &#x3D; 1}^{n}AP_i$$<br><strong>置信度 Confidence</strong>：置信度设定越大，Prediction约接近1，Recall越接近0，要寻找最优的F1分数，需要遍历置信度。<br><img src="/images/ece9df2376a4c708a78f34277acd60b4bc05822dfc7e08b00313bd6418d9d48c.png" alt="图 19"><br><strong>交并比 IoU</strong>（Intersection over Union）：是目标检测中使用的一个概念，IoU计算的是“预测的边框”和“真实的边框”的交叠率，即它们的交集和并集的比值。最理想情况是完全重叠，即比值为1。<a href="mailto:&#109;&#97;&#112;&#x40;&#x30;&#46;&#x35;">&#109;&#97;&#112;&#x40;&#x30;&#46;&#x35;</a>即IoU&#x3D;0.5，预测框和标注框的交集与非交集占比相同，都为50%。 <img src="/images/29079e96d09fec2291bc4fe2172db27c1d63681908c45aebc4af5a0dd2091ba4.png" alt="图 20">  </p>
<p><strong>ROC曲线</strong>(Receiver Operating Characteristic 受试者工作特征)<br>$$TPR&#x3D;\frac{TP}{TP+FN},FPR&#x3D;\frac{FP}{FP+TN}$$可以理解为分类器对正样本的覆盖敏感性和对负样本的敏感性的权衡。<br>在ROC曲线图中，每个点以对应的FPR值为横坐标，以TPR值为纵坐标<img src="/images/e8ac2b4d0adec392c93af2ec345dcab77ac5628b88cde8e28224c8003b66f1c0.png" alt="图 9"><br><strong>AUC值</strong>：PR曲线下方的面积<br><img src="/images/b9d32332516f48892a5e94bc80f4966a343a6685185ee7d81b506dcca28b23db.png" alt="图 21">  </p>
<blockquote>
<p>1.AUC &#x3D; 1，是完美分类器，采用这个预测模型时，存在至少一个阈值能得出完美预测。绝大多数预测的场合，不存在完美分类器。<br>2.0.5 &lt; AUC &lt; 1，优于随机猜测。这个分类器（模型）妥善设定阈值的话，能有预测价值。<br>3.AUC &#x3D; 0.5，跟随机猜测一样（例：丢铜板），模型没有预测价值。<br>4.AUC &lt; 0.5，比随机猜测还差；但只要总是反预测而行，就优于随机猜测。</p>
</blockquote>
<p>ROC曲线图中，越靠近(0,1)的点对应的模型分类性能越好。而且可以明确的一点是，ROC曲线图中的点对应的模型，它们的不同之处仅仅是在分类时选用的阈值(Threshold)不同，每个点所选用的阈值都对应某个样本被预测为正类的概率值。</p>
<h2 id="模型计算量-FLOPs-和参数量-Params"><a href="#模型计算量-FLOPs-和参数量-Params" class="headerlink" title="模型计算量(FLOPs)和参数量(Params)"></a>模型计算量(FLOPs)和参数量(Params)</h2><p><strong>计算量 FLOPs</strong>：FLOP时指浮点运算次数，s是指秒，即每秒浮点运算次数的意思，考量一个网络模型的计算量的标准。硬件要求是在于芯片的floaps（指的是gpu的运算能力）<br><strong>参数量 Params</strong>：是指网络模型中需要训练的参数总数。硬件要求在于显存大小<br>1.<strong>卷积层</strong><br>计算时间复杂度(计算量)<br>$$Time\sim O(\sum_{l&#x3D;1}^D M_l^2\cdot K_l^2\cdot C_{l-1}\cdot C_l)$$</p>
<p>计算空间复杂度(参数量)<br>$$Space\sim O(\sum_{l&#x3D;1}^D K_l^2\cdot C_{l-1}\cdot C_l+\sum_{l&#x3D;1}^D M^2\cdot C_l)$$</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">参数量</span><br><span class="line">(kernel*kernel) *channel_input*channel_output</span><br><span class="line">kernel*kernel 就是 weight * weight</span><br><span class="line">其中kernel*kernel ＝ <span class="number">1</span>个<span class="built_in">feature</span>的参数量</span><br><span class="line"></span><br><span class="line">计算量</span><br><span class="line">(kernel*kernel*<span class="built_in">map</span>*<span class="built_in">map</span>) *channel_input*channel_output</span><br><span class="line">kernel*kernel 就是weight*weight</span><br><span class="line"><span class="built_in">map</span>*<span class="built_in">map</span>是下个featuremap的大小，也就是上个weight*weight到底做了多少次运算</span><br><span class="line">其中kernel*kernel*<span class="built_in">map</span>*<span class="built_in">map</span>＝　<span class="number">1</span>个<span class="built_in">feature</span>的计算量</span><br></pre></td></tr></table></figure>
<p>2.池化层<br>无参数<br>3.<strong>全连接层</strong><br><code>参数量＝计算量＝weight_in*weight_out  #模型里面最费参数的就是全连接层</code></p>
<p><strong>换算计算量</strong>,一般一个参数是值一个float，也就是４个字节,1kb&#x3D;1024字节</p>
<h1 id="Transformer"><a href="#Transformer" class="headerlink" title="Transformer"></a>Transformer</h1><p><img src="/images/2e94102787d56e7b4d268071f643aa27b65ad2e4a90dd0cd0f6132990924811f.png" alt="图 14"> <img src="/images/6558163262d7b38fd0622153099684d42af7d3a1c4a3b715b1e8e38e3e65d53c.png" alt="图 15"> <img src="/images/97b9e0eeacec4859c3759422ffa214c05f1184c05511136017169f00bf09374d.png" alt="图 16">  </p>
]]></content>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux：Ubuntu，Docker</title>
    <url>/2022/11/28/Linux/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><p>Virtual Box+Ubuntu 20.04<br>64bit:Bios enable intel virsualization<br>Host 键:右ctrl<br>换源：华为云，更新索引</p>
<h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><p><code>Ctrl+alt+T</code>	Terminal<br><code>sudo nautilu</code>	执行文件操作<br><code>ls</code>	检索<br><code>chmod u+x …</code>		添加可执行文件<br><code>sudo apt update</code>	更新索引<br><code>sudo passwd root；su</code>	权限</p>
<h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><p>Could not get lock &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;lock – open &gt; 执行 <code>sudo rm -rf /var/lib/dpkg/lock</code><br>共享文件夹ubuntu中不显示&gt;重新安装VMware tools
 </p>
<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p><a href="https://www.bilibili.com/video/BV1MR4y1Q738/">🐳Docker概念，工作流和实践</a><img src="/images/d526d9d2a480a5a8e1c132f305ce080ca6e8b2bfe3554a40d253e84b7fe8471e.png" alt="图 1">  <img src="/images/6dc1e73e12bff3e522c1fbe3918fac4cbe43c13d725ef3cca849308809194f0b.png" alt="图 2">  </p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前运⾏的docker实例状态</span> </span><br><span class="line">sudo docker ps -a </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在上⼀条指显示结果列表中，查看openharmony的STATUS</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如为 Exited，则需要执⾏下⾯这条指令，再次启动</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如为 Up，则跳过下⾯这条指令</span> </span><br><span class="line">sudo docker start openharmony</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进⼊docker编译环境</span> </span><br><span class="line">sudo docker exec -it openharmony bash </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执⾏后，出现类似如下信息，说明再次进⼊成功</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root@bae85ba0f77c:/home/openharmony<span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">退出</span></span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
<p>启动docker的samba服务：<code>service smbd restart</code><br>查看ip：<code>ifconfig</code><br>连接：<code>\\192.168.174.128\docker</code></p>
<h3 id="文件拷贝"><a href="#文件拷贝" class="headerlink" title="文件拷贝"></a>文件拷贝</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1、主机拷贝文件到docker编译环境里：</span></span><br><span class="line">sudo docker cp源文件openharmony:/目标文件</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">参数解析：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">源文件：主机上的，可为文件或者目录</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">盘目标文件：docker编译环境里的，通常为目录，表示将文件拷贝到该目录</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2、docker编译环境拷贝文件到主机：</span></span><br><span class="line">sudo docker cp openharmony:/源文件目标文件</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">源文件：docker编译环境里的，可为文件或者目录</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">目标文件：主机上的，通常为目录，表示将文件拷贝到该目录下</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除docker编译环境【谨慎操作，不可恢复】</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看当前运行的docker实例状态</span></span><br><span class="line">sudo docker ps -a</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在上一条指显示结果列表中，查看openharmony的STATUS</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如为Up，则需要执行下面这条指令，停止其运行</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如为Exited，则跳过下面这条指令</span></span><br><span class="line">sudo docker stop openharmony</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除</span></span><br><span class="line">sudo docker rm openharmony</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">提醒：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除前，请确保该运行环境内的有效数据都已拷贝到主机上</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除后，该运行环境内的所有数据将被移除，不可恢复</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Blog! 从零开始搭建自己的博客网站</title>
    <url>/2022/11/22/Hello-blog/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>第一篇博客用来记录搭建该网站并成功发表这篇博客的流程，使用Hexo静态博客框架，托管于Github，参考了多篇文章<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[知乎：GitHub+Hexo 搭建个人网站详细教程](https://zhuanlan.zhihu.com/p/26625249)|
[Hexo官方文档](https://hexo.io/zh-cn/docs/)|
[Next主题官方文档](http://theme-next.iissnan.com/getting-started.html)|
[知乎：hexo的next主题个性化教程:打造炫酷网站](https://zhuanlan.zhihu.com/p/28128674)|
[菜鸟教程：Markdown 教程](https://www.runoob.com/markdown/md-tutorial.html)|
[个人网站：Arrow的笔记本](http://wangyujie.site/)">[1]</span></a></sup>。</p>
<img decoding="async" src="https://s2.loli.net/2022/11/20/LG4pSfyvVZ6iBWc.jpg" width=100>

<h3 id="总体流程"><a href="#总体流程" class="headerlink" title="总体流程"></a>总体流程</h3><p>其中主流程参考<a href="https://zhuanlan.zhihu.com/p/26625249">知乎：GitHub+Hexo 搭建个人网站详细教程</a>，虽然是老文章，但每一步都非常详细，框架搭建过程存在问题可以看文章的评论区或<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a>进行补充；</p>
<p>域名在<a href="https://dc.console.aliyun.com/next/index?spm=5176.12818093.ProductAndResource--ali--widget-product-recent.dre1.265516d0P13nxv&accounttraceid=b4a1b2c1dcab4588a55aa2f5926041aazltv#/overview">阿里云</a>购买,买的 <em>wangyujie.site</em> 首年6元，这也是唯一的开销，如果愿意使用原网站 <em>&lt;arrowes.github.io&gt;</em> ,这一步甚至可以省略；</p>
<p>选用了Next主题，主题优化参考了<a href="http://theme-next.iissnan.com/getting-started.html">Next主题官方文档</a>以及<a href="https://zhuanlan.zhihu.com/p/28128674">知乎：hexo的next主题个性化教程:打造炫酷网站</a>（其中访问量、统计功能教程已过期,很多配置next主题已内置），可以把网站搭建的花里胡哨；</p>
<p>编写博客使用的Markdown语言通过看<a href="https://www.runoob.com/markdown/md-tutorial.html">菜鸟教程：Markdown 教程</a>非常简单，可以边学边写，使用VScode，安装<code>Markdown Preview Enhanced</code>及<code>markdown image</code>插件；</p>
<p>其他工具有：logo下载：<a href="https://www.iconfont.cn/">iconfont</a>，Next默认的icon网站（灰色为收费图标）：<a href="https://fontawesome.com/icons">Font Awesome</a>，图床url链接生成：<a href="https://sm.ms/">SM.MS</a>，此外，大多数网站需要用到<del>科学上网</del>。</p>
<p>Github网站项目地址：<a href="https://github.com/Arrowes/Arrowes.github.io">Arrowes.github.io</a></p>
<p>用关键词在谷歌里搜到自己的网页：<a href="https://zoharandroid.github.io/2019-08-03-%E8%AE%A9%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/">让Google搜索到自己的博客</a></p>
<h3 id="网站配置"><a href="#网站配置" class="headerlink" title="网站配置"></a>网站配置</h3><h4 id="hexo-添加自定义单静态页面-跳过hexo渲染，以resume为例"><a href="#hexo-添加自定义单静态页面-跳过hexo渲染，以resume为例" class="headerlink" title="hexo 添加自定义单静态页面 跳过hexo渲染，以resume为例:"></a>hexo 添加自定义单静态页面 跳过hexo渲染，以resume为例:</h4><ol>
<li>将resume文件夹放进Theme主题文件夹下的&#x2F;source</li>
<li>Hexo-config: skip_render: resume&#x2F;** （可省略）</li>
<li>引用时直接 &#x2F;resume&#x2F;</li>
</ol>
<h4 id="添加动态背景，以动态线条为例："><a href="#添加动态背景，以动态线条为例：" class="headerlink" title="添加动态背景，以动态线条为例："></a>添加动态背景，以动态线条为例：</h4><ol>
<li>themes&#x2F;next&#x2F;layout&#x2F;_layout 在<code>&lt;/body&gt;</code>末尾添加如下代码：  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li>
<li>&#x2F;next&#x2F;_config.yml,在里面添加如下代码：(可以放在最后面)  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">#是否打开动态背景</span><br><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="统计功能"><a href="#统计功能" class="headerlink" title="统计功能"></a>统计功能</h4><p>&#x2F;next&#x2F;_config：找到busuanzi_count进行配置<br>或自定义配置：<br>打开themes\next\layout_partial\footer.swig文件，在文件末尾添加：</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;theme-info&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;powered-by&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-count&quot;</span>&gt;</span>全站共</span><span class="template-variable">&#123;&#123; <span class="name">totalcount</span>(<span class="name">site</span>) &#125;&#125;</span><span class="language-xml">字<span class="tag">&lt;/<span class="name">span</span>&gt;</span> | 访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>阅读时间：</p>
<ol>
<li>npm install hexo-word-counter</li>
<li>Hexo _config.yml：<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">&quot;mins.&quot;</span></span><br></pre></td></tr></table></figure></li>
<li>&#x2F;next&#x2F;_config:将设置item_text_total为true</li>
</ol>
<h4 id="配置网站超链接颜色"><a href="#配置网站超链接颜色" class="headerlink" title="配置网站超链接颜色"></a>配置网站超链接颜色</h4><p>打开 <code>Blog\themes\next\source\css\_common\components\post</code> 路径下的post.styl , 并在底部添加如下代码:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.btn</span>)&#123;</span><br><span class="line">  <span class="attribute">color</span>:; //超链接显示颜色</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#469FF1</span>;  //鼠标移动上去后超链接颜色</span><br><span class="line">	<span class="attribute">font-weight</span>: none;</span><br><span class="line">	<span class="attribute">text-decoration</span>: none;</span><br><span class="line">	&#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h4><ol>
<li>在项目根目录下运行 <code>npm install hexo-generator-searchdb --save</code></li>
<li>更改主题配置文件 &#x2F;next&#x2F;_config 将local_search下的enable从false改为true</li>
</ol>
<h4 id="设置阅读全文"><a href="#设置阅读全文" class="headerlink" title="设置阅读全文"></a>设置阅读全文</h4><ol>
<li><p>在项目根目录下执行 <code>npm install hexo-excerpt --save</code></p>
</li>
<li><p>在站点配置文件&#x2F;hexo&#x2F;_config.yml添加:</p>
 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">excerpt:			# 一定要顶格写，注意格式</span><br><span class="line">  depth: <span class="number">5</span>			# 他的大小就是全文阅读预览长度设置</span><br><span class="line">  excerpt_excludes: []</span><br><span class="line">  more_excludes: []</span><br><span class="line">  hideWholePostExcerpts: true</span><br></pre></td></tr></table></figure>
</li>
<li><p>在主题配置文件&#x2F;next&#x2F;_config中 excerpt_description 改为true</p>
</li>
</ol>
<h4 id="添加标签"><a href="#添加标签" class="headerlink" title="添加标签"></a>添加标签</h4><ol>
<li>配置 主题配置文件中删掉tags的注释</li>
<li>文件 新建tags文件 <code>hexo new page &quot;tags&quot;</code></li>
<li>文章 <code>tags: - XXX</code></li>
</ol>
<h4 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h4><p><a href="https://blog.csdn.net/konglongdanfo1/article/details/85204312">markdown公式符号大全</a><br>文章内：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span></span><br><span class="line"><span class="attr">date:</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<p>主题配置文件：<code>mathjax:  enable: true</code></p>
<h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><p><code>npm install hexo-filter-mermaid-diagrams</code><br>主题配置文件：<code>mermaid:  enable: true</code></p>
<h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><p><code>npm install hexo-reference --save</code> 支持Markdown脚注<br><code>npm install hexo-wordcount --save</code> 字数统计<br><strong>Markdown Preview Enhanced</strong> markdown预览插件（vs code）</p>
<p><strong>markdown image</strong> markdown图片插件（vs code）<br> <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Local</span><br><span class="line">E:\Github\Blog\blog\node_modules\hexo-theme-<span class="built_in">next</span>\source\images\ <span class="comment">#Path</span></span><br><span class="line">/images/ <span class="comment">#Reference Path</span></span><br><span class="line"></span><br><span class="line">Github</span><br><span class="line">main <span class="comment">#Branch</span></span><br><span class="line">/images <span class="comment">#Path</span></span><br><span class="line">https://github.com/Arrowes/Arrowes-Blogbackup <span class="comment">#Repository</span></span><br><span class="line">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 <span class="comment">#Token</span></span><br></pre></td></tr></table></figure></p>
<h3 id="常用Hexo指令"><a href="#常用Hexo指令" class="headerlink" title="常用Hexo指令"></a>常用<a href="https://hexo.io/zh-cn/docs/commands">Hexo指令</a></h3><p><code>hexo init [folder]</code> 新建一个网站<br><code>hexo new &quot;title&quot;</code> 新建一篇文章<br><code>hexo clean</code> 清除缓存文件 (db.json) 和已生成的静态文件 (public)<br><code>hexo g</code> 生成静态文件<br><code>hexo s</code> 生成本地预览 <a href="localhost:4000">localhost:4000</a><br><code>hexo d</code> 部署网站</p>
<p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 快速预览<br><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code> 快速部署</p>
<h3 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h3><p>√ 网站底部的图标不显示:Font Awesome部分图标收费<br>√ 访客数、文章字数没有数据：busuanzi链接过期<br>√ 生成的文章目录结构混乱：避免写跨级结构<br>部署经常超时 error：spawn failed，参考的<a href="https://blog.csdn.net/HTL2018/article/details/106876940">方法</a>存疑</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>熟悉了搭建网站流程，想起本科打电子商务比赛花钱请人做网站，还是本地的静态网站，有点冤种；<br>对Github的工作流有了一定了解，比一键<strong>Download ZIP</strong>有所进步；<br>看了很多人写的教程才完成，花了整整两天，还是有点费时间的，除了瞎折腾，更多的其实是想搭建一个<strong>输出</strong>的平台，锻炼一下自己的表达、总结能力，改善一下自己学了就忘，忘了就废的情况，希望自己能继续坚持，多写几篇！</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/26625249">知乎：GitHub+Hexo 搭建个人网站详细教程</a>|
<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a>|
<a href="http://theme-next.iissnan.com/getting-started.html">Next主题官方文档</a>|
<a href="https://zhuanlan.zhihu.com/p/28128674">知乎：hexo的next主题个性化教程:打造炫酷网站</a>|
<a href="https://www.runoob.com/markdown/md-tutorial.html">菜鸟教程：Markdown 教程</a>|
<a href="http://wangyujie.site/">个人网站：Arrow的笔记本</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Paper：科研灌水方法总结</title>
    <url>/2023/03/15/Paper/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="文献管理神器：Zotero"><a href="#文献管理神器：Zotero" class="headerlink" title="文献管理神器：Zotero"></a>文献管理神器：Zotero</h1><p><a href="https://www.zotero.org/">Zotero下载</a>，安装软件后再装浏览器插件，可以很方便的在浏览器随时导入文献；<br>顺便在官网注册一个账号，用于同步,且可登陆官网在线查看自己的论文库；<br><img src="/images/21cdf30c18b270e8a5c8c5c410baff6f4a3695b951052c913b58ef89462e345c.png" alt="图 1">  </p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="常规设置"><a href="#常规设置" class="headerlink" title="常规设置"></a>常规设置</h3><blockquote>
<p>编辑 &gt; 首选项 &gt; 同步 &gt; 登陆<br>编辑 &gt; 首选项 &gt; 高级 &gt; 文件和文件夹 &gt; 更改数据储存路径  #自选合适的位置存储本地文件</p>
</blockquote>
<h3 id="SCI-Hub抓取pdf"><a href="#SCI-Hub抓取pdf" class="headerlink" title="SCI-Hub抓取pdf"></a>SCI-Hub抓取pdf</h3><ol>
<li>打开Zotero 首选项-&gt;高级-&gt;设置编辑器</li>
<li>搜索 extensions.zotero.findPDFs.resolvers ，搜到之后双击打开，在对话框中填入：<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>:<span class="string">&quot;Sci-Hub&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>:<span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="string">&quot;url&quot;</span>:<span class="string">&quot;https://sci-hub.ren/&#123;doi&#125;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mode&quot;</span>:<span class="string">&quot;html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;selector&quot;</span>:<span class="string">&quot;<span class="subst">#pdf</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;attribute&quot;</span>:<span class="string">&quot;src&quot;</span>,</span><br><span class="line">    <span class="string">&quot;automatic&quot;</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>实现抓取任意文献pdf（知网和部分新文献不行） <img src="/images/12f9f2092cb14543eb8fbec9c5ae60d0c04accb8bb91517f50fa02ce735ef659.png" alt="图 2"></li>
</ol>
<h3 id="配置搜索引擎"><a href="#配置搜索引擎" class="headerlink" title="配置搜索引擎"></a>配置搜索引擎</h3><ol>
<li><a href="https://www.123pan.com/s/goS7Vv-mIKbd.html">下载 engines.json 文件</a></li>
<li>打开数据储存路径,替换同名文件 <code>...\Zotero\locate\engines.json</code></li>
<li>重启Zotero后，实现多搜索引擎，很方便 <img src="/images/447faaac4d96dda3def60f4290e022204a679b4a2b21133c14f1ecb1780681a6.png" alt="图 3"></li>
</ol>
<h3 id="Word插件"><a href="#Word插件" class="headerlink" title="Word插件"></a>Word插件</h3><p>安装word插件，实现高效插入引文，并且可以根据期刊选择参考文献样式</p>
<blockquote>
<p>编辑 &gt; 首选项 &gt; 引用 &gt; 文字处理软件 &gt; 安装word插件</p>
</blockquote>
<p><img src="/images/fc3941d72452e0435b42ca8a823294ce1e2d346915232d2a2ac917159c8f3f74.png" alt="图 4">  </p>
<h2 id="插件，让Zotero真正好用"><a href="#插件，让Zotero真正好用" class="headerlink" title="插件，让Zotero真正好用"></a>插件，让Zotero真正好用</h2><p><a href="https://www.zotero.org/support/plugins">官方插件下载地址</a><br>安装方法：下载.xpi 文件到你的电脑。然后，在 Zotero，点击“工具→插件（附加组件）”，然后拖动插件的 .xpi 文件到插件窗口打开，或者选择从文件中安装。安装完成后重新启动软件即可。</p>
<p><strong>下面是强烈推荐的4个必备插件，嫌麻烦可以直接安装我上传的，都是2023年最新的，4个全部拖进去即可，地址：<a href="https://www.123pan.com/s/goS7Vv-mIKbd.html">推荐插件下载</a></strong></p>
<h3 id="Zotero-PDF-Translate"><a href="#Zotero-PDF-Translate" class="headerlink" title="Zotero PDF Translate"></a>Zotero PDF Translate</h3><p><a href="https://github.com/windingwind/zotero-pdf-translate/releases">zotero-pdf-translate 下载</a>，实现划词翻译，但是需要在插件设置里配置翻译引擎（免费,推荐腾讯云），<a href="https://doc.tern.1c7.me/zh/folder/setting/#%E8%85%BE%E8%AE%AF%E4%BA%91">配置方法文档</a></p>
<h3 id="Jasminum-茉莉花"><a href="#Jasminum-茉莉花" class="headerlink" title="Jasminum - 茉莉花"></a>Jasminum - 茉莉花</h3><p><a href="https://github.com/l0o0/jasminum/releases">Jasminum 下载</a>，一个简单的 Zotero 中文插件, 优化知网中文论文管理体验</p>
<h3 id="Zotero-DOI-Manager"><a href="#Zotero-DOI-Manager" class="headerlink" title="Zotero DOI Manager"></a>Zotero DOI Manager</h3><p><a href="https://github.com/bwiernik/zotero-shortdoi/releases">Zotero DOI Manager 下载</a>，更新抓取文献的DOI号，提高SCI-Hub抓取pdf成功率</p>
<h3 id="Zotero-IF"><a href="#Zotero-IF" class="headerlink" title="Zotero IF"></a>Zotero IF</h3><p><a href="https://pan.baidu.com/s/1-nIHvhRj_wK_t6LMsNF6rg#list/path=%2Fsharelink3626522904-21879764921069%2FZotero%20IF&parentPath=%2Fsharelink3626522904-21879764921069">Zotero IF百度云地址，提取码: apeh</a>,为所抓取的文献更新影响因子</p>
]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Photograph：个人摄影笔记</title>
    <url>/2022/12/01/Photograph/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="摄影笔记"><a href="#摄影笔记" class="headerlink" title="摄影笔记"></a>摄影笔记</h1><p>四要素：<code>取景，曝光，虚实，构图</code></p>
<h2 id="取景"><a href="#取景" class="headerlink" title="取景"></a>取景</h2><p>互动：选取合适的前景与背景相互配合，有好的背景,就等合适的主体，注意人和景色的互动<br>云：镜头正对方向与云运动方向平行时，会呈放射状；大面积的卷云会在日落后形成火烧云<br>色温：日出日落时色温低，画面暖，之后一会儿就色温高画面冷<br>时间：阴天，多云，或日出后1h，日落前1h拍摄</p>
<p><strong>光线：</strong></p>
<blockquote>
<p>不要在强光下拍风光片(建筑例外),必要则顺光拍；<br>早晚、阴天：顺逆光皆可；<br>侧逆光能更好地表现食物的立体感（柔光板辅助）；<br>上午朝西，下午朝东，顺光、色彩较好。</p>
</blockquote>
<h2 id="曝光"><a href="#曝光" class="headerlink" title="曝光"></a>曝光</h2><p>白天一般不增减曝光补偿,夜晚减一点让画面更干净<br>室外晴天的感光度通常在300以内，在室内可能达到500-800，甚至1000+；<br>在拍摄高速运动的对象时需要1&#x2F;1000以上的快门速度，否则无法捕捉到瞬间画面；<br>逆光&#x2F;大光比：前期包围曝光，后期多张混合（灰度蒙版，手动笔刷）<br>曝光时间——500法则：$$快门速度（s）&#x3D;\frac{500}{镜头等效焦距（mm）}$$</p>
<h2 id="虚实"><a href="#虚实" class="headerlink" title="虚实"></a>虚实</h2><p>不能一味追求大光圈和虚化，要清晰<br>慢门创造虚：1.光圈优先，记下数据；2.切手动，设记下的光圈，ISO，快门延长1000倍（超过30s用B门）<br>水：快门优先,水面雾化,映照色彩<br>后期混合景深<br>两只眼睛都要实<br>先对焦、再构图</p>
<p><strong>摇摄</strong>：将相机调为S档，根据实际情况选择1&#x2F;15~1&#x2F;30秒之间的快门速度，选择AF-C连续对焦、广域对焦区域及高速连拍即可开始拍摄。<br>拍摄时，将对焦点选择在人物身上，然后随着人物运动的方向以与人物相同的角速度转动镜头并同时按下快门连拍，即可获得人物主体清晰、背景模糊的效果。<br>摇摄在拍摄快速移动的物体时除了能够虚化掉杂乱的背景，还能极大地增强画面动感。</p>
<h2 id="构图"><a href="#构图" class="headerlink" title="构图"></a>构图</h2><blockquote>
<p>1：身体 4321 160<br>2：三分法 99%的时候都有效<br>3：层次 前中后景<br>4：留白 前景 线条</p>
</blockquote>
<p><strong>三分法</strong>：人们的目光总是自然落在画面三分之二处的位置上，尽量使主要的被摄体位于画面三等分线的焦点上，效果会比位于中心位置更好。<br>大主体可以居中,否则放在三分焦点；<br>表达广阔场景时,将重要线条往三分线下压；<br>对称主体可居中,独立主体放左&#x2F;右三分线</p>
<p>善用框景<br>“如果你拍的不够好,是因为你站得不够近”<br>注意纵深感，立体感<br>引入线条：利用慢门的轨迹创造线条。<br>美食&#x2F;美颜：45°角，留白<br>参考当地明信片的名景点的拍摄位置和构图</p>
<p><strong>人像</strong>：</p>
<blockquote>
<p>人头不放正中间，要偏上一点,否则显矮；10°俯拍<br>人脸朝左,人物置右;人脸朝右,人物置左;面朝前时,将一只眼睛置竖直中线<br>手脚、关节不能裁切<br>让人物身体和面部与镜头呈45,立体、显瘦<br>头顶、脚下预留空间<br>只考虑人物：竖构图; 交代环境：横构图</p>
</blockquote>
<h2 id="修图"><a href="#修图" class="headerlink" title="修图"></a>修图</h2><p>修图流程：lr定调（不加颗粒）、 液化、 修瑕疵、 磨皮、 其它、 锐化<br>液化：压力8-16<br><img src="/images/1979438017bcf1cb204d5433d64ca7b442fefbbf55e93ed1657f77786adfc47f.png" alt="图 3"><img src="/images/b26f1eb4e339e9642fdce479ee851598dffd99d5d42bbec0995498ddf811581a.png" alt="图 4"><br><strong>直方图</strong><br><img src="/images/668d810b1579185c8b8ef8e1c9eda524a78f97575df2116d4779648f3d99b237.jpeg" alt="图 1">以12位图像为例，12位图像记录的单个通道色彩深度是4096，但是4096并不是平均分布在直方图上，而是从亮部到暗部倍减。<br>所以在不过曝的前提下，尽量把图像信息向直方图的右边推进，直方图越向右，记录的色调信息就越多；进光量越充分，画质越好。</p>
<h2 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h2><blockquote>
<p>摄影是人类对静止最深刻的表达方式之一。摄影使我们把时间握在手中，与时间融合，这是任何其他形式都不具备的。<br>相片本身会传达出作者注入其中的情感。<br> “为什么这样做”高于“如何实现”，我认为这应当是一切艺术的目标。<br> 我们的世界有许多美的事物。尽管摄影天生是一项孤独的活动，但我们可以通过照片感受到彼此之间的联系，从而让我们获得慰籍。<br> ——丹.温特斯《观看之路》</p>
</blockquote>
<p> 如果你带着相机四下转悠，那就有义务保持警醒。  ——胡里奥·科塔萨尔《放大》</p>
<p> 我曾以为照片能留住那刻的画面，然而拍照的时候我已经失去了那片刻的时光。<br> 我常想，如果我拍了足够的照片，我就不会再失去任何人。事实上，我的照片让我看到了我失去了多少。<br> 摄影不是一项业余爱好，而是一种生活方式。<br> 摄影不只是拍照，更是一种生活哲学。</p>
<blockquote>
<p>高光亮而不溢；暗部黑而不死；过度锐而不硬；画质润而不腻。焦内如刀割般犀利，焦外如奶油般化开。作品给人以美的感受，色彩清新脱俗，构图别出心裁，雅俗共赏。欣赏学习好友佳作，欢迎回访指导。</p>
<p>主体清晰通透，动态多样，抓拍到位，表情自然，活泼靓丽。深邃的思想，惊世的影调，高超的构图，无与伦比的后期。充满了人文的气息，接地气的大片，期待您的佳作。毒，德味，大片，学习了!</p>
</blockquote>
<h1 id="专题拍摄"><a href="#专题拍摄" class="headerlink" title="专题拍摄"></a>专题拍摄</h1><p>主题拍摄：一直拍一种，最后放在一起</p>
<h2 id="人像写真"><a href="#人像写真" class="headerlink" title="人像写真"></a>人像写真</h2><p>人像摄影三要素：情绪，姿态，故事性<br>主题性的拍摄：<br>①<strong>风格</strong><br>清新、复古、古风、私房…<br>重点：依据主题去确立服饰，妆容，场景的匹配<br>②<strong>场景</strong><br>海边：百搭场景，安静，放松，舒服<br>大自然，草坪：场景开阔，构图简单，有利于引导模特姿态<br>室内环境：容易做到出彩的背景色，强烈的主题风格<br>校园场景：制服，便服，清新活泼<br>③<strong>服装搭配</strong></p>
<pre class="mermaid">graph LR
A(依据主题风格选择服装搭配) -->B(依据搭配选场景)
C(依据模特确定主题) -->|简单大方清新自然不造作| A
B-->C</pre>
<p>各要素相辅相成<br>④<strong>模特</strong><br>各有特点，契合气质定主题<br>⑤<strong>与模特的沟通</strong><br>确定主题，表达想法；<br>建立模特对你拍摄技术的信心，给看样片；<br>放松自然（放音乐），不停和模特进行沟通，不冷场，多夸夸；<br>引导与<code>场景，服装，道具</code>的互动；<br>摆拍结合抓拍，引导自然的情绪流露。</p>
<h2 id="星空摄影"><a href="#星空摄影" class="headerlink" title="星空摄影"></a>星空摄影</h2><p>使用光污染地图：<a href="www.lightpollutionmap.info">light pollution map</a>，<a href="https://www.darkmap.cn/">天文通-全球光污染地图</a><br>对焦：手动对焦最亮的星星（无穷远），直到最小、最实<br>银河：春夏秋，银河核心会出现在夜空中用，最大光圈<br>月亮：农历的月初月末无月，月中满月，0点沉入地平线<br>流星：找辐射点，用最大光圈（拍星轨稍小），短曝光时间</p>
<h2 id="夜景烟火人像"><a href="#夜景烟火人像" class="headerlink" title="夜景烟火人像"></a>夜景烟火人像</h2><p>1.手动设置M档，大光圈，1&#x2F;80s快门，1000左右ISO，钨丝灯白平衡，连拍模式<br>2.不要将仙女棒拿着脸一侧，容易出现“阴阳脸”，2-3根的亮度较合适<br>3.尽量使用RAW格式<br>焰火：不长不短的曝光时间，拍1张焰火+1张背景，后期混合模式：变亮</p>
<h1 id="摄影名词解释"><a href="#摄影名词解释" class="headerlink" title="摄影名词解释"></a>摄影名词解释</h1><p><img src="/images/c17ebbe596bb1940396bdc1cf38963380c170de924c54f7d69a010881053ef44.png" alt="图 7"><a href="http://iphoto.blog.163.com/blog/static/174404124200832982358951/?utm_source=qq&utm_medium=social">几个必要的摄影名词解释</a></p>
<h2 id="感光度-ISO"><a href="#感光度-ISO" class="headerlink" title="感光度 ISO"></a>感光度 ISO</h2><p>International Standards Organization，曾是制订胶卷的生产标准，现为CCD&#x2F;CMOS（或胶卷）对光线的敏感程度。</p>
<blockquote>
<p>设 ISO100，$T_{正确曝光} &#x3D; 2s$<br>则 ISO200，$T_{正确曝光} &#x3D; 1s$</p>
</blockquote>
<p>高ISO：速度快，噪点大——弱光场合<br>低ISO：速度慢，画面精细——风光摄影</p>
<h2 id="快门-Shutter"><a href="#快门-Shutter" class="headerlink" title="快门 Shutter"></a>快门 Shutter</h2><p>相机里控制曝光时间的装置。<br>手持相机拍摄的安全速度原则：安全速度是焦距的倒数，如果使用35mm镜头，快门速度不得低于1&#x2F;35秒，使用200mm镜头时速度不得低于1&#x2F;200秒，否则图片就可能糊了。</p>
<h2 id="光圈-Aperture"><a href="#光圈-Aperture" class="headerlink" title="光圈 Aperture"></a>光圈 Aperture</h2><p>镜头里调节进光孔大小的装置。<br>所有相机都基于小孔成像原理：排列组合的几块凹凸镜头+大孔&#x3D;相机镜头<br>常见的光圈值如下： </p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">F1</span>， <span class="built_in">F1</span>.<span class="number">4</span>， <span class="built_in">F2</span>， <span class="built_in">F2</span>.<span class="number">8</span>， <span class="built_in">F4</span>， <span class="built_in">F5</span>.<span class="number">6</span>， F8， F11， F16， F22， F32， F44， F64。</span><br></pre></td></tr></table></figure>
<p>每两挡相邻光圈值之间进光量相差一倍。<br><img src="/images/429f283b00c52f2769ea94d454e4725c80f2628b66859972f601b9f42cefa4b9.gif" alt="图 1">最佳光圈：镜头在<strong>中等光圈</strong>的时候成像最好（图片最清晰）。<br>光圈大一级则镜片大很多，加工难度高，重量大，价格贵，适合弱光且无三脚架的情况。</p>
<p>光圈有三个作用：</p>
<blockquote>
<ol>
<li>控制进光量，这直接影响到图片是否能正确曝光，是拍摄成功与否的关键；</li>
<li>控制景深，光圈越小，景深越大。虽然焦距和拍摄远近都影响景深，但焦距和被摄物远近的改变同时也会影响构图，如果构图确定，我们能控制景深的武器就只剩下光圈了；</li>
<li>光圈影响图片的清晰度，任何一个镜头都是在中等光圈的时候成像最好（图片最清晰），在最大光圈和最小光圈的时候解像度差。</li>
</ol>
</blockquote>
<p><strong>光圈优先</strong> Aperture Priority: 手动定义光圈的大小，相机会根据这个光圈值确定能正确曝光的快门速度。<br><strong>小光圈</strong>的景深效果在于叙事，在实践中可将其称为叙事性光圈，主要用于需要传达较多照片信息的题材中。<br>为了使夜景画面星光璀璨，可以通过缩小光圈，得到呈星芒效果的灯光。这是因为光圈收缩到一定的程度时，光线就会通过光圈细小的孔洞产生衍射，从而使灯光出现四射的星芒效果，且光圈越小，光线越强烈，星芒效果越明显。</p>
<h2 id="曝光-Exposure"><a href="#曝光-Exposure" class="headerlink" title="曝光 Exposure"></a>曝光 Exposure</h2><p>光圈和快门的组合。<br>曝光量：让多少光进入<br>一张正确曝光的图片可以有N种不同的光圈和快门速度组合，若光圈F4快门速度1秒为正确曝光值，那F5.6和2秒以及F8和4秒也同样能得到准确曝光的图片。</p>
<p><strong>总结以上几个名词解释</strong>：有三个因素能影响一张图片是否正确曝光：光圈，快门速度，ISO。其中光圈和速度联合决定进光量，ISO决定CCD&#x2F;CMOS的感光速度。如果进光量不够，我们可以开大光圈或者降低快门速度，还是不够的话就提高ISO。大光圈的缺点是解像度不如中等光圈，快门速度降低则图片可能会糊，提高ISO后图片质量也会下降 。没有完美的方案，如何取舍要灵活决定。</p>
<h2 id="测光与测光模式-Metering"><a href="#测光与测光模式-Metering" class="headerlink" title="测光与测光模式 Metering"></a>测光与测光模式 Metering</h2><p>测定光照强度，相机内的电脑根据电阻值的变化确定光线强度，进而确定曝光值（光圈，快门）。</p>
<p>测光模式主要有点测光，中央重点测光，区域（平均）测光三种。</p>
<blockquote>
<p><strong>点测光</strong>: 只测取景框内一个小点的光线强度（此小点大约为取景框面积的10%到1%，看不同机型）。<br><strong>区域（平均）测光</strong>: 把取景框分为5到63块（看机型不同），分别对每块测光然后再加权平均得到光照强度。<br><strong>中央重点测光</strong>: 简化的区域（平均）测光，只把取景框分为中央圆圈和四周两块，分别测光，然后加权平均（中央圆圈的权重为70%左右）。</p>
</blockquote>
<p>大多数情况下用区域测光即可。在光线明暗反差很大时应该采用点测光。用区域（平均）测光或中央重点也可以，可根据自己的艺术创意进行曝光补偿。</p>
<h2 id="曝光补偿-Exposure-compansation"><a href="#曝光补偿-Exposure-compansation" class="headerlink" title="曝光补偿 Exposure compansation"></a>曝光补偿 Exposure compansation</h2><p>修正（增减）曝光值。<br>照片要能真实反映拍摄时的环境亮度，相机自动测光就是取平均数，最后给出一个让图片达到<strong>中间灰</strong>（柯达灰）的曝光值，相机自动确定的曝光值90%以上是正确的，但纯白和纯黑等场景会测不准，因此需要曝光补偿。</p>
<p>曝光补偿的原则：<strong>白加黑减</strong>。</p>
<blockquote>
<p>如果构图中有大片白色物体或特别明亮的物体，就要相应增加曝光量（增大光圈or&#x2F;and减低快门速度）；<br>如果取景框中有大片黑色的物体，则要减少曝光量。</p>
</blockquote>
<p>如果图片以RAW格式存储的话，其抗过曝&#x2F;欠曝能力是很强的，只要没有曝成完全没层次的一片纯白，过曝&#x2F;欠曝一个EV之内的照片都能在后期电脑处理时调正，而且基本不漏痕迹。但过曝&#x2F;欠曝太多还是不行，如果相差2EV以上，调正后的图片也会很难看。所以掌握曝光补偿白加黑减的原则依然重要。</p>
<h2 id="焦距-Focus"><a href="#焦距-Focus" class="headerlink" title="焦距 Focus"></a>焦距 Focus</h2><p>从镜片（或镜片组）的中心到焦点的距离（mm）。</p>
<blockquote>
<p>焦距50mm的镜头称为“标准镜头”，简称标头，拍出来的照片类似肉眼平视的感觉（视角为45°左右）；<br>广角镜头（焦距小于35mm）能够让照相机“看得更宽阔”，因为它视角大；<br>长焦镜头（焦距大于70mm）能让照相机“看得更远”，但视角窄。</p>
</blockquote>
<p>光学变焦Optical Zoom：依靠镜片的位移来实现焦距的改变。光学变焦倍数越大，里面的镜片就越多，镜头体积相应较大，画质相对较低，光圈相对较小。$$变焦倍数＝\frac{最大焦距值}{最小焦距值}$$<br>数码变焦只是电子放大，用来骗人的。</p>
<table>
<thead>
<tr>
<th>焦距</th>
<th>镜头类型</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>14-24mm</td>
<td>超广角</td>
<td>视角很大，形变夸张，多用于拍摄建筑与风光</td>
</tr>
<tr>
<td>24-35mm</td>
<td>广角</td>
<td>多用于拍摄建筑与风光以及街头人文抓拍</td>
</tr>
<tr>
<td>35-70mm</td>
<td>中焦</td>
<td>视角接近人眼，多用于人文纪实抓拍</td>
</tr>
<tr>
<td>70-135mm</td>
<td>中长焦</td>
<td>视角比人眼窄，很多人像摄影师喜欢用这个焦段拍半身和头像的特写</td>
</tr>
<tr>
<td>135-300mm</td>
<td>长焦</td>
<td>适合拍摄远距离物体。例如体育摄影、风光特写等等。</td>
</tr>
<tr>
<td>大于300mm</td>
<td>超长焦&#x2F;望远</td>
<td>适合拍摄超远距离物体比如野生动物</td>
</tr>
</tbody></table>
<p><strong>焦距转换系数</strong>:<br>镜头的视角是由镜头焦距和胶卷（或CCD&#x2F;CMOS）尺寸两者联合决定的。尺寸变小相当于焦距变大。大部分数码相机CCD&#x2F;CMOS面积都比原胶片小。<img src="/images/61b0ed6601df191ab8b9a922187e9feffba994d4d1dc0cafe3cf11f822cfebe8.gif" alt="图 2"> 假如焦距不变，CCD&#x2F;CMOS越小，镜头视角越小，镜头转换系数只影响视角 。<br>$$镜头转换系数&#x3D;\frac{135胶片对角线长度}{非全幅的CCD&#x2F;CMOS对角线长度}$$<br>佳能：1.6，<br>尼康，Sony：1.5</p>
<p>在其他条件相同的情况下，拍摄时使用的焦距越长，则画面的景深越浅，即可以得到更明显的虚化背景效果；反之，焦距越短视角越广，则画面的景深越大，越容易呈现大景深的画面效果。</p>
<h2 id="景深-Depth-of-field-DOF"><a href="#景深-Depth-of-field-DOF" class="headerlink" title="景深 Depth of field, DOF"></a>景深 Depth of field, DOF</h2><p>照片焦点前后延伸出来的“可接受清晰区域”。</p>
<blockquote>
<p>小（浅）景深 → 背景模糊 → 人像摄影<br>大景深 → 前后都清晰 → 风光摄影</p>
</blockquote>
<p>由三个因素决定：1. 光圈大小；2. 焦距长短；3. 被摄物体的远近。<br>估计景深：</p>
<blockquote>
<ol>
<li>光圈越大，景深越小；</li>
<li>焦距越长，景深越小；</li>
<li>离被摄物体越近，景深越小。</li>
</ol>
</blockquote>
<p>需要注意的是，后景深的范围大于前景深的范围。</p>
<h2 id="白平衡-White-Balance"><a href="#白平衡-White-Balance" class="headerlink" title="白平衡 White Balance"></a>白平衡 White Balance</h2><p>照相机对白色的还原准确性。<br>色温color temperature:以开尔文温度表示光线的色彩，单位K。</p>
<table>
<thead>
<tr>
<th>光源</th>
<th>色温（Ｋ）</th>
</tr>
</thead>
<tbody><tr>
<td>蜡烛</td>
<td>2000</td>
</tr>
<tr>
<td>钨丝灯</td>
<td>2500-3200</td>
</tr>
<tr>
<td>荧光灯</td>
<td>4500-6500</td>
</tr>
<tr>
<td>日光（平均）</td>
<td>5400</td>
</tr>
<tr>
<td>有云天气下的日光</td>
<td>6500-7000</td>
</tr>
</tbody></table>
<p>白平衡漂移：根据不同情况，在设置白平衡时设置不同的色调偏好能够得到不同的画面效果。比如在日光下拍摄樱花时，我们可以将日光白平衡中的色调加一些红，这样拍摄出的樱花会更粉嫩。<br>雪景容易偏色<br>物体在不同色温的光源照射下会呈现不同的色调，在日光灯下整体偏白，在普通钨丝白炽灯下整体偏黄。<br>在电脑上可以给RAW图片任意配置色温，彻底解决白平衡问题。</p>
<h2 id="RAW"><a href="#RAW" class="headerlink" title="RAW"></a>RAW</h2><ul>
<li>TIFF：不压缩的格式，单张超过25MB</li>
<li>JPEG：有损压缩格式，占内存小，但有细节损失<blockquote>
<p>CCD&#x2F;CMOS经曝光产生电子图片信号，相机内的小电脑把这些电子信号进行加工处理，再传输给存储卡。这些加工处理包括白平衡配置，颜色饱和度的增减，图片锐度和对比度增减，降低图片噪点等等，最后压缩转换为JPEG格式进行存储。</p>
</blockquote>
</li>
<li>RAW：无损压缩格式，文件较大，后期空间大<blockquote>
<p>CCD&#x2F;CMOS经过曝光产生的图片电子信号直接传给存储卡，文件没有经过相机内部电路的任何图片参数和质量处理。所以RAW文件又被称为数码底片Digital Negatives,几乎所有的参数都可以后期在电脑上调。</p>
</blockquote>
</li>
</ul>
<p>重要图片的拍摄一律存储JPEG+RAW，一般的图片存JPEG。</p>
<h2 id="色彩空间：sRGB-AdobeRGB"><a href="#色彩空间：sRGB-AdobeRGB" class="headerlink" title="色彩空间：sRGB,AdobeRGB"></a>色彩空间：sRGB,AdobeRGB</h2><ul>
<li>AdobeRGB:有更广泛的色彩范围，比sRGB多出35%，照片呈现的色彩更丰富，适合打印，且可转sRGB，但在网络上色彩范围无法完全显示，表现较差；</li>
<li>sRGB：范围较小，但在网络上有不错的表现。</li>
</ul>
<h1 id="相机知识"><a href="#相机知识" class="headerlink" title="相机知识"></a>相机知识</h1><p><a href="http://iphoto.blog.163.com/blog/static/1744041242011721920436">摄影初学者挑选相机的常见问题</a></p>
<h2 id="镜头组合"><a href="#镜头组合" class="headerlink" title="镜头组合"></a>镜头组合</h2><p>来自相机笔记的『几个镜头组合方案』<br>日常家用：16-50&#x2F;18-55 + 55-210（优先覆盖焦距）<br>旅游拍摄：腾龙18-200（大变焦，相对便携）<br>人像拍摄：添置35&#x2F;1.8或50&#x2F;1.8<br>风景拍摄：10-18 + 55-210（可考虑三阳8mm鱼眼）<br>扫街纪实：适马19&#x2F;2.8<br>真爱且APS-C不换粉：10-18 + 16-70ZA + FE70-200G（焦距密不透风，且均为F4恒定），再加蔡司Touit三只，原厂24&#x2F;1.8 ZA和55&#x2F;1.8 ZA。</p>
<p>如果你对摄影的确是有很浓厚的兴趣，而且预算又有余，那么可以在第一支 标准变焦镜头的基础上，再购买一支定焦镜头，它是：50&#x2F; F1.8。 不管对哪个品牌来说，50 &#x2F; F1.8都是一支经典镜头，极低廉的价格，却享有不 逊牛头的出色画质，1.8的大光圈可以让你更好的体会光圈的影响和作用，是 一支学习摄影的经典镜头 </p>
<h2 id="相机清洁"><a href="#相机清洁" class="headerlink" title="相机清洁"></a>相机清洁</h2><p>灰尘</p>
<blockquote>
<p>气吹：先空吹几下<br>棉签：确保无硬质灰尘，若有，用棉签定点清除<br>擦镜布：顺一个方向，不要反复擦，由内向外螺旋擦拭</p>
</blockquote>
<p>指纹油脂</p>
<blockquote>
<p>将镜头清洁液滴一滴在擦镜布上<br>先挥发一下，再开始擦拭，手法同上</p>
</blockquote>
<p>雨水&#x2F;海水</p>
<blockquote>
<p>气吹猛吹<br>大量清洁液滴在布上，不等挥发直接快速擦<br>用布较干的地方擦干净，再用毛巾&#x2F;软布擦干机身<br>海水需要多擦几遍</p>
</blockquote>
<p>其他工具</p>
<blockquote>
<p>毛刷：刷机身灰尘<br>棉签：死角、取景器（加液）、镜头卡口<br>节电导通剂：清洁镜头触点</p>
</blockquote>
<p>最后记得清洁镜头盖；<br>换镜头时要找背风处，动作要快。</p>
<p>传感器：</p>
<blockquote>
<p>1.找灰尘：用小光圈（F16+）试拍白纸，手动对焦无穷远，灰尘位置上下左右颠倒（或有手动清洁模式）<br>2.气吹<br>3.传感器清洁棒：从左到右反复，柔和均匀<br>4.传感器清洁液：等挥发</p>
</blockquote>
<h2 id="拥有相机后快速入门"><a href="#拥有相机后快速入门" class="headerlink" title="拥有相机后快速入门"></a>拥有相机后快速入门</h2><p>1．读一本好书《美国纽约摄影学院摄影教材（上）》《美国摄影用光教程》<br>2．阅读相机说明书熟悉常用设置和操作<br>3．大量拍摄和学习<br>4．关注几个严肃摄影媒体建立正确的价值观和审美情趣<br>5．提高艺术文化修养，你的照片反映了你是什么样的人</p>
]]></content>
      <tags>
        <tag>技术</tag>
        <tag>摄影</tag>
      </tags>
  </entry>
  <entry>
    <title>Project：多个项目汇总</title>
    <url>/2023/02/15/Project/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="CEAM-YOLOv7：基于通道扩展注意机制的改进YOLOv7驾驶员行为检测算法"><a href="#CEAM-YOLOv7：基于通道扩展注意机制的改进YOLOv7驾驶员行为检测算法" class="headerlink" title="CEAM-YOLOv7：基于通道扩展注意机制的改进YOLOv7驾驶员行为检测算法"></a>CEAM-YOLOv7：基于通道扩展注意机制的改进YOLOv7驾驶员行为检测算法</h1><p><a href="https://ieeexplore.ieee.org/document/9980374/metrics">CEAM-YOLOv7:Improved YOLOv7 Based on Channel Expansion Attention Mechanism for Driver behavior detection</a></p>
<h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><p>驾驶员的不规范行为易引发交通事故，因此，为规范驾驶员行为，减少交通事故的发生，对驾驶员行为进行检测至关重要。本文提出了一种改进的目标检测模型CEAM-YOLOv7，该模型利用GAM注意力模块和通道扩展数据增强算法来减少特征图生成过程中的信息丢失，提高检测精度。将YOLOv7架构的Backbone和Head部分加入GAM注意力模块，减少信息损失的同时放大全局维度交互特征，同时，使用剪枝算法，在保证实时检测的前提下，提高了YOLOv7网络的检测性能。此外，使用更适合于实际驾驶场景的红外图像数据集进行训练，结合inversion和CLAHE图像增强方法，提出了一种基于通道扩展的红外图像数据增强算法，改善针对红外图像的目标检测效果。经大量实验结果表明，与YOLOv7相比，CEAM-YOLOv7的map提升了20.26%，FPS达到了156，本文方法的有效性和优越性得到了验证。 </p>
<h2 id="技术点"><a href="#技术点" class="headerlink" title="技术点"></a>技术点</h2><h3 id="通道扩展算法"><a href="#通道扩展算法" class="headerlink" title="通道扩展算法"></a>通道扩展算法</h3><p><img src="/images/11daa2bff272eb1f5565e4c2dfcce3a4120442bdf056e950cce5d8f5498f8c59.png" alt="图 20">  </p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">inversion:</span>通过域迁移的思想使得网络能够更加适应处理后的红外图像。一般用于目标检测所用的 RGB 图像都是白天所摄，通常情况是背景较亮，目标较暗。但驾驶员环境通常较暗，且红外图像成像为辐射特性，背景辐射较弱而目标辐射较强，因此选用 inversion 操作；</span><br><span class="line"><span class="symbol">CLAHE:</span>由于红外图像的对比度比较低，其灰度分布通常都是分布在较窄的区域，采用自适应直方图均衡化能够使红外图像的灰度分布更均匀，增强对比度的同时抑制噪声，从而达到增加图像细节信息的作用。</span><br></pre></td></tr></table></figure>
<h3 id="GAM注意力机制"><a href="#GAM注意力机制" class="headerlink" title="GAM注意力机制"></a>GAM注意力机制</h3><p><img src="/images/b03d6ffc6a94c4a919929acf95b126d2371f226a815654843516200f21f4ffe6.png" alt="图 22"><br>GAM是一种能够捕捉所有三个维度的显著特征的注意机制，采用了CBAM中的顺序通道-空间注意机制，对通道-空间注意力子模块进行了重新设计，通道注意力子模块使用3D置换来跨三维保持信息，使用用两层感知器MLP（Multi-Layer Perceptron）放大跨维信道-空间相关性；空间注意力子模块采用了两个卷积层进行空间信息融合。由此，通过减少信息丢失和放大全局交互特征来提高深度神经网络的性能，提高了对于红外图像目标的识别能力，在识别速度和精度之间进行了有效的权衡，也与数据增强处理中的通道扩展算法相对应。</p>
<h3 id="网络架构"><a href="#网络架构" class="headerlink" title="网络架构"></a>网络架构</h3><p><img src="/images/91ed1c8890986bb5917f66253b8b4a7b704b0c228acb7e54b82145bffe67e051.png" alt="图 21">  </p>
<h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><p><img src="/images/61a1e9ad1fd04c0c4e7546681e3bafd6a8577865941d404edcd6c84b3992080c.png" alt="图 23"><br><img src="/images/7b67596d623f5522d4a7268a4107525d49cf982282b9312b9c90112fe5f124d7.png" alt="图 24">  </p>
<h1 id="基于-STM32-的智能空压机状态监测系统"><a href="#基于-STM32-的智能空压机状态监测系统" class="headerlink" title="基于 STM32 的智能空压机状态监测系统"></a>基于 STM32 的智能空压机状态监测系统</h1><p>2020-2021<br>优秀毕设</p>
<h2 id="项目简介-1"><a href="#项目简介-1" class="headerlink" title="项目简介"></a>项目简介</h2><p>空气压缩机是一种把气体压缩，从而提升气体压力的设备，使用范围广，其运行时的稳定性与可靠性将直接影响到企业生产时的生命与财产安全。本设计以往复式活塞压缩机为研究对象，基于因特网实现了对空压机运行状态的实时监控。</p>
<h2 id="技术点-1"><a href="#技术点-1" class="headerlink" title="技术点"></a>技术点</h2><p>本文所设计的监控系统以STM32F103C8T6单片机为主控芯片，利用BMP280温压传感器及ADXL335 三轴加速度传感器分别测得温度、气压以及XYZ三轴方向上的振动信号，实现了空压机工作数据的采集，并通过OLED显示屏显示，以便现场工作人员监测并及时检修；同时，用ESP8266 WiFi模块，将数据上传至阿里云，通过因特网传送至手机端及PC端，实现了运行状态的实时监测，为避免空压机状态异常进而运行失控造成严重后果，本设计增加了状态异常报警、停机功能，同时工作人员在手机app及PC端网页上可进行开、关机操作。本设计可基本实现对空气压缩机的实时状态监控功能。</p>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><p><img src="/images/85742add8e4e7a47b580bf4e01c0489428b6a5d93a075ce568bc86fe73b16c7c.png" alt="图 14"><br><img src="/images/4f8131f3436b0213fd6ca44e4255dbb1eefae7e424aa33ee38dfd7ce547b32b3.png" alt="图 15">  </p>
<h3 id="电路设计"><a href="#电路设计" class="headerlink" title="电路设计"></a>电路设计</h3><p><img src="/images/8aebc069d704b425f466578c620a90811fe554232cca1e8ac5f469a20dc592d4.png" alt="图 16">  </p>
<h3 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h3><p><img src="/images/673a0e0b922735d39f5a4eb8b106b6d5d80d5320ad7234bf51b37d2419a066ee.png" alt="图 18">  </p>
<h2 id="实物制作"><a href="#实物制作" class="headerlink" title="实物制作"></a>实物制作</h2><p><img src="/images/9c3a9ed0311e98478769574aeedb2c5454b2d0d9b8238c4bf332242aa293b7e3.png" alt="图 19">  </p>
<h1 id="SE智厨：一种新型循环节能与安全防控的厨房智能仪器"><a href="#SE智厨：一种新型循环节能与安全防控的厨房智能仪器" class="headerlink" title="SE智厨：一种新型循环节能与安全防控的厨房智能仪器"></a>SE智厨：一种新型循环节能与安全防控的厨房智能仪器</h1><p>2019-2020<br>湖南科技大学第六届“互联网+”大学生创新创业大赛 铜奖</p>
<h2 id="项目简介-2"><a href="#项目简介-2" class="headerlink" title="项目简介"></a>项目简介</h2><p>一款循环节能与安全防控的厨房智能产品，本装置利用炒菜或用火过程中炉火与外界的温差以及用太阳能板来发电储能在蓄电池中，以达到节约能源的目的；以STC15F2K60S2为主控，利用烟雾传感器MQ-2和温度传感器DS18B20的配合使用，监测现场火灾、煤气泄漏、漏电触电等厨房事故，并且该设备能对事故进行自动化处理，避免危害安全。</p>
<h2 id="技术点-2"><a href="#技术点-2" class="headerlink" title="技术点"></a>技术点</h2><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">安全监测：</span><br><span class="line">（<span class="number">1</span>）利用烟雾传感器MQ<span class="number">-2</span>和温度传感器DS18B20的配合使用,当达到预警设定时，立即进入报警处理，并通过电子阀门打开水闸开关，实现灭火处理；</span><br><span class="line">（<span class="number">2</span>）实时检测家中煤气是否泄漏，当出现煤气泄漏时，微处理器会立刻控制煤气电子阀门的关闭，通过<span class="built_in">GSM</span>无线通信模块向用户发送短信，传送当前煤气状态以及厨房是否发生火灾状态，预防事故发生。</span><br><span class="line">（<span class="number">3</span>）当厨房插座存在漏电或人触电时，能及时将电源切断。</span><br><span class="line">节能环保：</span><br><span class="line">（<span class="number">1</span>）系统能够将太阳能电压和温差发电输出的电压经过升压、降压、稳压电路稳定输出<span class="number">15</span>V，并通过充电电路存储在蓄电池中，给厨房智能控制系统和节能灯等工作，如果电压不足则自动切换到交流电供电。</span><br><span class="line">（<span class="number">2</span>）当用户使用炉火时，通过烟雾传感器检测油烟的浓度并实现排风扇的无级调速控制以达到节省用电效果；</span><br><span class="line">（<span class="number">3</span>）当厨房内温度较高时，系统根据DS18B20温度传感器检测的温度高低实现电风扇的无级调速，为厨房工作人员降温，减少能源的浪费；</span><br><span class="line">（<span class="number">4</span>）厨房内通过光敏传感器与红外传感器相结合检测厨房的光线强度和是否有人，当厨房较暗时，则自动调节LED照明亮度，以达到节约能源的目的，同时延长设备的使用寿命。</span><br></pre></td></tr></table></figure>
<h2 id="系统设计-1"><a href="#系统设计-1" class="headerlink" title="系统设计"></a>系统设计</h2><p>系统由K60主控模块、温差发电系统、太阳能发电系统、烟雾检测模块、温度检测模块、红外检测模块、电流检测模块、升压降压稳压模块、语音模块、驱动模块、电压检测模块、GSM模块组成。<br><img src="/images/1b4f5da604e884e3723910e210ec011730e169a84d6a16779e46e3d70ed68888.png" alt="图 11">  </p>
<h3 id="电路设计-1"><a href="#电路设计-1" class="headerlink" title="电路设计"></a>电路设计</h3><p><img src="/images/3b9c1bb38e5fe48dd2e53ccb690461b3827768f803c22230f99e0581d97dbce0.png" alt="图 12">  </p>
<h3 id="实物制作-1"><a href="#实物制作-1" class="headerlink" title="实物制作"></a>实物制作</h3><p><img src="/images/4550945f4f8c831257d5239c1a181f9f75b5e04d337922eae0f9ee09dfdadc5b.png" alt="图 13">  </p>
<h1 id="地球仓"><a href="#地球仓" class="headerlink" title="地球仓"></a>地球仓</h1><p>2019-2020<br>实用新型专利：一种自适应旅居设备及控制系统</p>
<h2 id="项目简介-3"><a href="#项目简介-3" class="headerlink" title="项目简介"></a>项目简介</h2><p>地球仓，一种高度智能化的房子，灵活的用于景区休闲娱乐。本设计基于单片机控制地球仓的底盘控制系统，主要模拟地球仓遇到外界环节环境变化时地球仓底盘自动变化的工程。</p>
<h2 id="技术点-3"><a href="#技术点-3" class="headerlink" title="技术点"></a>技术点</h2><p>根据温度传感器和光敏传感器实时采集的数据，STC89C52 芯片根据温度传感器DS18B20和灵敏型光敏电阻传感器的信号来做出反应。当光线过于强烈，LED灯就会亮起并输入一个脉冲信号给STC89C52让步进电机转动带动底盘旋转 180 度；而温度达到一定值时，也会给STC89C52输入脉冲信号，使步进电机转动带动底盘旋转 90 度，同时数码管也会显示温度值。就是经过这样的底盘旋转控制，让地球仓适应更复杂的自然环境。</p>
<h3 id="电路设计-2"><a href="#电路设计-2" class="headerlink" title="电路设计"></a>电路设计</h3><p><img src="/images/299429b1b5786fd7a0c3e568413399db90aafac642c71be21d40bb2a9506dce2.png" alt="图 9">  </p>
<h3 id="实物制作-2"><a href="#实物制作-2" class="headerlink" title="实物制作"></a>实物制作</h3><p><img src="/images/86415da3df66947266145f0b3bf1a728ef9accdd950ba594cb0f92a39405e3b3.png" alt="图 10">  </p>
<h1 id="风功率密度便携式测量仪"><a href="#风功率密度便携式测量仪" class="headerlink" title="风功率密度便携式测量仪"></a>风功率密度便携式测量仪</h1><p>2018-2019<br>第九届全国大学生电子商务“创新、创意及创业”挑战赛 校赛一等奖<br>第五届湖科大互联网+大赛 院赛金奖<br>“创青春”湖南科技大学大学生创业大赛 银奖</p>
<h2 id="项目简介-4"><a href="#项目简介-4" class="headerlink" title="项目简介"></a>项目简介</h2><p>本项目成果是一种新型风功率密度测量仪器，主要应用于风电场风功率密度测量，以实现风能电能的准确转化，提高电网运行的稳定性。传统风功率测量系统仍然停留在运用测风塔、雷达测出风速，然后将风速代入建模公式中计算得出结果，其过程繁琐，成本高昂。因此，团队成员在海内外知名教授的指导下设计出直接测量风功率的仪器，在将降低测量成本、提高预测准确度、增大使用便携度等方面具有独具一格的优势。</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">传统测风方法</span><br><span class="line">超声波测风：运用超声波测风无法启用风速，不受环境的影响，测量精度高、性能稳定，测量对象为风速、风向、温度，但无法直接计算出风功率，必须将风速带入一系列的数学建模公式中计算得出，过程复杂，耗时漫长。</span><br><span class="line">雷达测风：一次雷测风机具有足够大的发射频率，耗电量大，但是探测距离较近；距离远时回波信号弱；二次雷达具有探测精度高、采样速率快、使用方便等特点，但仍然无法直接测量出风功率。</span><br><span class="line">激光测风：激光测风虽然测量精度高、范围广，且测量过程不受天气的影响，但它目前技术仅仅停留在测量风速水平上，依旧无法打破新型技术壁垒<span class="comment">-----直接测量出瞬时风功率。</span></span><br></pre></td></tr></table></figure>
<h2 id="技术点-4"><a href="#技术点-4" class="headerlink" title="技术点"></a>技术点</h2><p>本实用新型专利是一种集风电场的风速、气压、温度和湿度的综合型风能功率密度便携式测试仪，用于风电场风电机组服役环境下风能功率密度的测量。该风能功率密度测试仪通过测量大气压中的压力、温度、湿度以及风速信号后，由51单片机计算出空气密度，再结合风速计算得到风能功率密度。</p>
<p>技术创新：</p>
<blockquote>
<p>①面向工程实际问题，直接输出风功率密度<br>②数据存储，有利于风电资源评估<br>③提出剔除风速瞬态扰动的有效功率密度处理算法，提高测量准确性<br>④操作简单、功耗较低，可随身携带使用或固定在风电场某处</p>
</blockquote>
<h2 id="信号采集与处理"><a href="#信号采集与处理" class="headerlink" title="信号采集与处理"></a>信号采集与处理</h2><h3 id="信号采集"><a href="#信号采集" class="headerlink" title="信号采集"></a>信号采集</h3><p>测试仪所需要采集的信号为风速信号、大气压力信号、温度信号以及湿度信号，分别利用NPN脉冲型RS485风速传感器(±（0.2+0.03v）m&#x2F;s)、BMP5大气压力传感器(±20Pa)、SHT21温湿度传感器(±0.3℃)(±2%RH)实现测量。<br>风速传感器采用输出为电压信号的机械式传感器，测量范围达到风电场风速变化的要求，需要信号调理电路输入到中央处理模块。大气压力、温湿度采用输出为数字量的模块化传感器对信号进行测量，可直接输入至单片机中进行处理。</p>
<h3 id="信号调理"><a href="#信号调理" class="headerlink" title="信号调理"></a>信号调理</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">①幅值调理电路：由于风速传感器输出的电压信号比较微弱，无法满足后续测试的工作要求，利用运算放大器以及电阻构成的放大网络对输出信号进行幅值调理，将其幅值放大以便满足模-数转换电路的要求。</span><br><span class="line">②信号滤波电路：由于环境以及人为影响，在输出的电压信号中，常伴有不必要的噪声信号。利用运算放大器和电阻等元件组成的有源滤波网络，对输出电压信号中的噪声信号进行剔除。</span><br><span class="line">③模-数转换电路：单片机所能处理的是数字量，而风速传感器输出为模拟电压量。因此，设置一个模-数转换电路，将对应的模拟量转换成数字量并输入至单片机中，对其进行处理及显示。</span><br></pre></td></tr></table></figure>
<h3 id="信号处理"><a href="#信号处理" class="headerlink" title="信号处理"></a>信号处理</h3><p><img src="/images/a75c5363a70b2ff962ccc9e81bb6322f8e858faffb295ffdfe4451a2e9ae6b0a.png" alt="图 6"> </p>
<h2 id="电路设计-3"><a href="#电路设计-3" class="headerlink" title="电路设计"></a>电路设计</h2><p> <img src="/images/eca2994dc9c4c30b1dc8dd88aac21f9c658b881f282e535745071d9cc2d9426d.png" alt="图 7"><br><img src="/images/9371d0f843c7d8cc41448e2abaf73dbbf2eaa1706c9f4cbfd68258db55993ac0.png" alt="图 8">  </p>
<h2 id="实物制作-3"><a href="#实物制作-3" class="headerlink" title="实物制作"></a>实物制作</h2><p><img src="/images/d3f751b606c1540946908dafa21bf9e0e9d4c0ccaa701e1948c0e2e0baa58b18.png" alt="图 2"><br><img src="/images/3f808e8f94670fae6a99f1373a81041b9b600b94ff07f77a850a1bc02f9f16ff.png" alt="图 4">  </p>
]]></content>
      <tags>
        <tag>技术</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Git：github工作流</title>
    <url>/2022/11/29/Git/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://www.bilibili.com/video/BV19e4y1q7JJ/?spm_id_from=333.1007.tianma.1-2-2.click&vd_source=b530b63b4657d68926b54a618d047d04">十分钟学会正确的github工作流，和开源作者们使用同一套流程</a></p>
<h2 id="主要指令"><a href="#主要指令" class="headerlink" title="主要指令"></a>主要指令</h2><p>1.<code>git clone &lt;X&gt;</code> &#x2F;&#x2F; 到本地<br>2.<code>git checkout -b xxx</code> 切换至新分支xxx，相当于复制了remote的仓库到本地的xxx分支上<br>3.修改或者添加本地代码（部署在硬盘的源文件上）<br>4.<code>git diff</code> 查看自己对代码做出的改变<br>5.<code>git add</code> 上传更新后的代码至暂存区<br>6.<code>git commit</code> 可以将暂存区里更新后的代码更新到本地git<br>7.<code>git push origin xxx</code> 将本地的xxxgit分支上传至github上的git</p>
<p>如果在写自己的代码过程中发现远端GitHub上代码出现改变<br>1.<code>git checkout main</code> 切换回main分支<br>2.<code>git pull origin master(main)</code> 将远端修改过的代码再更新到本地<br>3.<code>git checkout xxx</code> 回到xxx分支<br>4.<code>git rebase main</code> 我在xxx分支上，先把main移过来，然后根据我的commit来修改成新的内容<br>（中途可能会出现，rebase conflict —–》手动选择保留哪段代码）<br>5.<code>git push -f origin xxx</code> 把rebase后并且更新过的代码再push到远端github上<br>（-f —》强行）<br>6.原项目主人采用pull request 中的 squash and merge 合并所有不同的commit</p>
<p>远端完成更新后<br>1.<code>git branch -d xxx</code> 删除本地的git分支<br>2.<code>git pull origin master</code> 再把远端的最新代码拉至本地</p>
<h2 id="详细状态过程"><a href="#详细状态过程" class="headerlink" title="详细状态过程"></a>详细状态过程</h2><p><code>git clone &lt;https://github.com/example/example.git&gt; </code></p>
<blockquote>
<p>状态<br>•	Remote git repo 的状态: main(master) init<br>•	本地 git repo 的状态: main(master) init<br>•	本地磁盘存储文件的状态: main(master) init</p>
</blockquote>
<p>准备在本地修改代码, 先建立一个新的 branch<br><code>git checkout -b my-feature</code></p>
<blockquote>
<p>状态<br>•	remote:<br>    main(master) init<br>•	local:<br>    main(master) init<br>    my-feature init<br>•	Disk:<br>    my-feature init</p>
</blockquote>
<p>对本地代码做出修改, <code>git diff</code> 显示变动<br>当我们确认好修改的文件, 准备把文件告知 local git 的时候 <code>git add &lt;changed_file&gt;</code>, 此时 local git 会把这些文件放到暂存区<br>使用 <code>git commit</code> 把所有的修改真正的提交到 local git </p>
<blockquote>
<p>状态<br>•	remote:<br>    main(master): Init<br>•	local:<br>    main(master): Init<br>    my-feature: Init –&gt; f-commit<br>•	Disk:<br>    my-feature: Init –&gt; f-commit</p>
</blockquote>
<p>我们需要把 local git 的变化告知 remote git<br><code>git push origin my-feature </code><br>这个命令结束之后, remote git 会多出来一个 branch </p>
<blockquote>
<p>状态<br>•	remote:<br>    main(master): Init<br>    my-feature: Init –&gt; f-commit<br>•	local:<br>    main(master): Init<br>    my-feature: Init –&gt; f-commit<br>•	Disk:<br>    my-feature: Init –&gt; f-commit</p>
</blockquote>
<p>紧接着我们会遇到非常常见的情况: 在我们修改本地代码的时候, remote git 也发生了更新, 此时当然是要测试我们刚在做的 feature 在新的 update 下能不能正常运行 </p>
<blockquote>
<p>状态<br>•	remote:<br>    main(master): Init –&gt; update<br>    my-feature: Init –&gt; f-commit<br>•	local:<br>    main(master): Init<br>    my-feature: Init –&gt; f-commit<br>•	Disk:<br>    my-feature: Init –&gt; f-commit</p>
</blockquote>
<p>首先要 local git 切换回 main<br><code>git checkout main</code></p>
<blockquote>
<p>状态<br>•	remote:<br>    main(master): Init –&gt; update<br>    my-feature: Init –&gt; f-commit<br>•	local:<br>    main(master): Init<br>    my-feature: Init –&gt; f-commit<br>•	Disk:<br>    main(master): Init</p>
</blockquote>
<p><code>git pull origin master</code> 把 remote git 的变化同步到 local git 以及 disk </p>
<blockquote>
<p>状态<br>•	remote:<br>    main(master): Init –&gt; update<br>    my-feature: Init –&gt; f-commit<br>•	local:<br>    main(master): Init –&gt; update<br>    my-feature: Init –&gt; f-commit<br>•	Disk:<br>    main(master): Init –&gt; update</p>
</blockquote>
<p>回到 my-feature 分支 <code>git checkout my-feature</code></p>
<blockquote>
<p>状态<br>•	remote:<br>    main(master): Init –&gt; update<br>    my-feature: Init –&gt; f-commit<br>•	local:<br>    main(master): Init –&gt; update<br>    my-feature: Init –&gt; f-commit<br>•	Disk:<br>    my-feature: Init –&gt; f-commit</p>
</blockquote>
<p><code>git rebase main</code> 把 my-feature 的修改先放在一边, 然后把 main 的修改同步到 my-feature, 如果有冲突, 需要先手动去解决冲突 </p>
<blockquote>
<p>状态<br>•	remote:<br>o	main(master): Init –&gt; update<br>o	my-feature: Init –&gt; f-commit<br>•	local:<br>o	main(master): Init –&gt; update<br>o	my-feature: Init –&gt; update –&gt; f-commit<br>•	Disk:<br>o	my-feature: Init –&gt; update –&gt; f-commit</p>
</blockquote>
<p>更新完 my-feature 之后, 需要把 local git 的 my-feature 分支同步到 remote git 的 my-feature 分支<br><code>git push -f origin my-feature</code></p>
<blockquote>
<p>状态<br>•	remote:<br>o	main(master): Init –&gt; update<br>o	my-feature: Init –&gt; update –&gt; f-commit<br>•	local:<br>o	main(master): Init –&gt; update<br>o	my-feature: Init –&gt; update –&gt; f-commit<br>•	Disk:<br>o	my-feature: Init –&gt; update –&gt; f-commit</p>
</blockquote>
<p>此时需要把我们更新的代码合并到 main branch 上, 这个过程就是 pull request, 在 main 分支的维护者, 审查完 my-feature 的代码后, 进行一个 Squash and merge 操作.<br>•	Squash and merge 把一个分支上面的所有改变, 合并成一个改变, 然后把这个 commit 放到 main branch</p>
<blockquote>
<p>状态<br>o	remote:<br>	main(master): Init –&gt; update –&gt; update2<br>	my-feature: Init –&gt; update –&gt; f-commit<br>o	local:<br>	main(master): Init –&gt; update<br>	my-feature: Init –&gt; update –&gt; f-commit<br>o	Disk:<br>	my-feature: Init –&gt; update –&gt; f-commit</p>
</blockquote>
<p>一般情况下, main branch 的维护者会在 merge 完这个分之后, 把这个分支删除掉 delete branch 此时在本地, <code>git checkout main</code></p>
<blockquote>
<p>状态<br>•	remote:<br>o	main(master): Init –&gt; update –&gt; update2<br>•	local:<br>o	main(master): Init –&gt; update<br>o	my-feature: Init –&gt; update –&gt; f-commit<br>•	Disk:<br>o	main(master): Init –&gt; update</p>
</blockquote>
<p>然后使用, <code>git branch -D my-feature</code> 删除 local git 的 my-feature </p>
<blockquote>
<p>状态<br>•	remote:<br>o	main(master): Init –&gt; update –&gt; update2<br>•	local:<br>o	main(master): Init –&gt; update<br>•	Disk:<br>o	main(master): Init –&gt; update</p>
</blockquote>
<p>最后, git pull origin master</p>
<blockquote>
<p>状态<br>•	remote:<br>o	main(master): Init –&gt; update –&gt; update2<br>•	local:<br>o	main(master): Init –&gt; update –&gt; update2<br>•	Disk:<br>o	main(master): Init –&gt; update –&gt; update2</p>
</blockquote>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Embedded：嵌入式应用知识</title>
    <url>/2022/12/11/Embedded/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="相关常识"><a href="#相关常识" class="headerlink" title="相关常识"></a>相关常识</h1><h2 id="电容"><a href="#电容" class="headerlink" title="电容"></a>电容</h2><p>电容是电路设计中最为普通常用的器件，是无源元件之一，有源器件简单地说就是需能(电)源的器件叫有源器件，无需能(电)源的器件就是无源器件。<br>电容的作用和用途一般都有好多种，如：在旁路、去耦、滤波、储能方面的作用；在完成振荡、同步以及时间常数的作用：<br><strong>隔直流</strong>：作用是阻止直流通过而让交流通过。<img src="/images/685acd9502b523b1ad4c60f8841f253820460a46961942d9d064915d5d9c2569.png" alt="图 23"><br><strong>旁路（去耦）</strong>：为交流电路中某些并联的元件提供低阻抗通路。<img src="/images/e1ca270364f9eecc8b62658996dfed21c018ee3691ea2d1c9c74e9de6654be0b.png" alt="图 24"><br><strong>旁路电容</strong>：旁路电容，又称为退耦电容，是为某个器件提供能量的储能器件。<br>它利用了电容的频率阻抗特性，理想电容的频率特性随频率的升高，阻抗降低，就像一个水塘，它能使输出电压输出均匀，降低负载电压波动。<br>旁路电容要尽量靠近负载器件的供电电源管脚和地管脚，这是阻抗要求。<br>在画PCB时候特别要注意，只有靠近某个元器件时候才能抑制电压或其他输信号因过大而导致的地电位抬高和噪声。<br>说白了就是把直流电源中的交流分量，通过电容耦合到电源地中，起到了净化直流电源的作用。如图为旁路电容，画图时候要尽量靠近IC1。<img src="/images/0a4bc3d9c1194a0f7fcdd755bd79b48782488782e111218f3c9785b1e2e83c8f.png" alt="图 25"><br><strong>去耦电容</strong>：去耦电容，是把输出信号的干扰作为滤除对象，去耦电容相当于电池，利用其充放电，使得放大后的信号不会因电流的突变而受干扰。<br>它的容量根据信号的频率、抑制波纹程度而定，去耦电容就是起到一个“电池”的作用，满足驱动电路电流的变化，避免相互间的耦合干扰。<br><strong>旁路电容实际也是去耦合的</strong>，只是旁路电容一般是指高频旁路，也就是给高频的开关噪声提高一条低阻抗泄防途径。<br>高频旁路电容一般比较小，根据谐振频率一般取 0.1μF、0.01μF 等。<br>而去耦合电容的容量一般较大，可能是 10μF 或者更大，依据电路中分布参数、以及驱动电流的变化大小来确定。上图C3为去耦电容<br><strong>区别</strong>：旁路是把输入信号中的干扰作为滤除对象，而去耦是把输出信号的干扰作为滤除对象，防止干扰信号返回电源。<br><strong>耦合</strong>：作为两个电路之间的连接，允许交流信号通过并传输到下一级电路 。<br><img src="/images/46e04bdeeed43d3b70755a04ec96b2085cac0b8af0b4f045a4713c509f160368.png" alt="图 26"><br>用电容做耦合的元件，是为了将前级信号传递到后一级，并且隔断前一级的直流对后一级的影响，使电路调试简单，性能稳定。<br>如果不加电容交流信号放大不会改变，只是各级工作点需重新设计，由于前后级影响，调试工作点非常困难，在多级时几乎无法实现。<br><strong>滤波</strong>：这个对电路而言很重要，CPU背后的电容基本都是这个作用。<br>即频率f越大，电容的阻抗Z越小。当低频时，电容C由于阻抗Z比较大，有用信号可以顺利通过；当高频时，电容C由于阻抗Z已经很小了，相当于把高频噪声短路到GND上去了。<br><img src="/images/95b5c2765b6a8ea02741e983fb78885d2c85478ae1c116b2f032f66689ba0a31.png" alt="图 27"> <img src="/images/3a7874de3aaa4d76c2582df477563a03a08b2277fb02137421c47ff7e808a852.png" alt="图 28"><br><strong>滤波作用</strong>：理想电容，电容越大，阻抗越小，通过的频率也越高。<br>电解电容一般都是超过 1uF ，其中的电感成份很大，因此频率高后反而阻抗会大。<br>我们经常看见有时会看到有一个电容量较大电解电容并联了一个小电容，其实大的电容通低频，小电容通高频，这样才能充分滤除高低频。<br>电容频率越高时候则衰减越大，电容像一个水塘，几滴水不足以引起它的很大变化，也就是说电压波动不是你很大时候电压可以缓冲，如图C2：<img src="/images/158c15af5eace10b04f9f4e8c1cd2d74cd2e481f0edbbff2e54ce793df684ade.png" alt="图 29"><br><strong>温度补偿</strong>：针对其它元件对温度的适应性不够带来的影响，而进行补偿，改善电路的稳定性。<img src="/images/4b7c34fcaf3df2820be7fbf0f6d5b97a67344c7ae9b2b2b3aeed01d0b8b8f8fa.png" alt="图 30"><br><strong>分析</strong>：由于定时电容的容量决定了行振荡器的振荡频率，所以要求定时电容的容量非常稳定，不随环境湿度变化而变化，这样才能使行振荡器的振荡频率稳定。<br>因此采用正、负温度系数的电容释联，进行温度互补。<br>当工作温度升高时，Cl的容量在增大，而C2的容量在减小，两只电容并联后的总容量为两只电容容量之和，由于一个容量在增大而另一个在减小，所以总容量基本不变。<br>同理，在温度降低时，一个电容的容量在减小而另一个在增大，总的容量基本不变，稳定了振荡频率，实现温度补偿目的。<br><strong>计时</strong>：电容器与电阻器配合使用，确定电路的时间常数。<img src="/images/6ddf1893b1eb05c8e81791fd84087c60eab61bdc31d02454fa15e77e315f18f3.png" alt="图 31"><br>输入信号由低向高跳变时，经过缓冲1后输入RC电路。<br>电容充电的特性使B点的信号并不会跟随输入信号立即跳变，而是有一个逐渐变大的过程。<br>当变大到一定程度时，缓冲2翻转，在输出端得到了一个延迟的由低向高的跳变。<br><strong>时间常数</strong>：以常见的 RC 串联构成积分电路为例，当输入信号电压加在输入端时，电容上的电压逐渐上升。<br>而其充电电流则随着电压的上升而减小，电阻R和电容C串联接入输入信号VI，由电容C输出信号V0，当RC (τ)数值与输入方波宽度tW之间满足：τ》》tW，这种电路称为积分电路。<br><strong>调谐</strong>：对与频率相关的电路进行系统调谐，比如手机、收音机、电视机。<img src="/images/9583af04fd08345d4a2cd72350e921cfc725d277f6520357dec844e6cbf8968a.png" alt="图 32"><br>因为lc调谐的振荡电路的谐振频率是lc的函数，我们发现振荡电路的最大与最小谐振频率之比随着电容比的平方根变化。<br>此处电容比是指反偏电压最小时的电容与反偏电压最大时的电容之比。<br>因而，电路的调谐特征曲线（偏压一谐振频率）基本上是一条抛物线。<br><strong>整流</strong>：在预定的时间开或者关半闭导体开关元件。<img src="/images/2a2a2af5cce9cbe1cf3e6dd6aab20aa5a38092ebb92af8c4885675a3f57d4b56.png" alt="图 33"><br><strong>储能</strong>：储存电能，用于必须要的时候释放。<br>例如相机闪光灯，加热设备等等．（如今某些电容的储能水平己经接近锂电池的水准，一个电容储存的电能可以供一个手机使用一天。<br>一般地，电解电容都会有储能的作用，对于专门的储能作用的电容，电容储能的机理为双电层电容以及法拉第电容。<br>其主要形式为超级电容储能，其中超级电容器是利用双电层原理的电容器。<br>当外加电压加到超级电容器的两个极板上时，与普通电容器一样，极板的正电极存储正电荷，负极板存储负电荷。<br>在超级电容器的两极板上电荷产生的电场作用下，在电解液与电极间的界面上形成相反的电荷，以平衡电解液的内电场。<br>这种正电荷与负电荷在两个不同相之间的接触面上，以正负电荷之间极短间隙排列在相反的位置上，这个电荷分布层叫做双电层，因此电容量非常大。</p>
<h1 id="PCB布局布线"><a href="#PCB布局布线" class="headerlink" title="PCB布局布线"></a>PCB布局布线</h1><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>元器件布局的10条规则：</p>
<ol>
<li>遵照<strong>先大后小，先难后易</strong>的布置原则，即重要的单元电路、核心元器件应当优先布局。</li>
<li>布局中应参考原理框图，根据单板的主信号流向规律安排主要元器件。</li>
<li>元器件的排列要便于调试和维修，亦即小元件周围不能放置大元件、需调试的元器件周围要有足够的空间。 </li>
<li>相同结构电路部分，尽可能采用“对称式”标准布局。</li>
<li>按照均匀分布、重心平衡、版面美观的标准优化布局。 </li>
<li>同类型插装元器件在X或Y方向上应朝一个方向放置。同一种类型的有极性分立元件也要力争在X或Y方向上保持一致，便于生产和检验。 </li>
<li>发热元件一般应均匀分布，以利于单板和整机的散热，除温度检测元件以外的温度敏感器件应远离发热量大的元器件。 </li>
<li>布局应尽量满足以下要求：总的连线尽可能短，关键信号线最短；高电压、大电流信号与小电流，低电压的弱信号完全分开；模拟信号与数字信号分开；高频信号与低频信号分开；高频元器件的间隔要充分。</li>
<li>去耦电容的布局要尽量靠近IC的电源管脚，并使之与电源和地之间形成的回路最短。 </li>
<li>元件布局时，应适当考虑使用同一种电源的器件尽量放在一起, 以便于将来的电源分隔。</li>
</ol>
<h2 id="布线"><a href="#布线" class="headerlink" title="布线"></a>布线</h2><h3 id="（1）布线优先次序"><a href="#（1）布线优先次序" class="headerlink" title="（1）布线优先次序"></a>（1）布线优先次序</h3><p>关键信号线优先：模拟小信号、高速信号、时钟信号和同步信号等关键信号优先布线<br>密度优先原则：从单板上连接关系最复杂的器件优先布线。从单板上连线 最密集的区域开始布线<br>注意点：</p>
<blockquote>
<p>a. 尽量为时钟信号、高频信号、敏感信号等关键信号提供专门的布线层，并保证其最小的回路面积。必要时应采取手工优先布线、屏蔽和加大安全间距等方法。保证信号质量。<br>b. 电源层和地层之间的EMC环境较差，应避免布置对干扰敏感的信号。<br>c. 有阻抗控制要求的网络应尽量按线长线宽要求布线。 </p>
</blockquote>
<h3 id="（2）四种具体走线方式"><a href="#（2）四种具体走线方式" class="headerlink" title="（2）四种具体走线方式"></a>（2）四种具体走线方式</h3><h4 id="1-时钟的布线："><a href="#1-时钟的布线：" class="headerlink" title="1. 时钟的布线："></a>1. 时钟的布线：</h4><p>时钟线是对EMC 影响最大的因素之一。在时钟线上应少打过孔，尽量避免和其它信号线并行走线，且应远离一般信号线，避免对信号线的干扰。同时应避开板上的电源部分，以防止电源和时钟互相干扰。<br>如果板上有专门的时钟发生芯片，其下方不可走线，应在其下方铺铜，必要时还可以对其专门割地。对于很多芯片都有参考的晶体振荡器，这些晶振下方也不应走线，要铺铜隔离。<img src="/images/9a446328891042cdc8948f359a5c372759df00f0084dbbbed565452c34a1446d.png" alt="图 1">  </p>
<h4 id="2-直角走线"><a href="#2-直角走线" class="headerlink" title="2. 直角走线:"></a>2. 直角走线:</h4><p>直角走线一般是PCB布线中要求尽量避免的情况，也几乎成为衡量布线好坏的标准之一，那么直角走线究竟会对信号传输产生多大的影响呢？从原理上说，直角走线会使传输线的线宽发生变化，造成阻抗的不连续。其实不光是直角走线，顿角，锐角走线都可能会造成阻抗变化的情况。</p>
<p>直角走线的对信号的影响就是主要体现在三个方面：</p>
<blockquote>
<p>一是拐角可以等效为传输线上的容性负载，减缓上升时间；<br>二是阻抗不连续会造成信号的反射；<br>三是直角尖端产生的EMI。</p>
</blockquote>
<h4 id="3-差分走线"><a href="#3-差分走线" class="headerlink" title="3. 差分走线:"></a>3. 差分走线:</h4><p>参看：Altium Designer – 差分布线和阻抗匹配</p>
<p><strong>差分信号</strong>（Differential Signal）在高速电路设计中的应用越来越广泛，电路中最关键的信号往往都要采用差分结构设计.定义:通俗地说，就是驱动端发送两个等值、反相的信号，接收端通过比较这两个电压的差值来判断逻辑状态“0”还是“1”。而承载差分信号的那一对走线就称为差分走线。<br>差分信号和普通的单端信号走线相比，最明显的优势体现在以下三个方面：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>.抗干扰能力强，因为两根差分走线之间的耦合很好，当外界存在噪声干扰时，几乎是同时被耦合到两条线上，而接收端关心的只是两信号的差值，所以外界的共模噪声可以被完全抵消。</span><br><span class="line"><span class="selector-tag">b</span>.能有效抑制EMI，同样的道理，由于两根信号的极性相反，他们对外辐射的电磁场可以相互抵消，耦合的越紧密，泄放到外界的电磁能量越少。</span><br><span class="line">c.时序定位精确，由于差分信号的开关变化是位于两个信号的交点，而不像普通单端信号依靠高低两个阈值电压判断，因而受工艺，温度的影响小，能降低时序上的误差，同时也更适合于低幅度信号的电路。目前流行的LVDS（low voltage differential signaling）就是指这种小振幅差分信号技术。</span><br></pre></td></tr></table></figure>
<p>对于PCB工程师来说，最关注的还是如何确保在实际走线中能完全发挥差分走线的这些优势。也许只要是接触过Layout的人都会了解差分走线的一般要求，那就是“等长、等距”。</p>
<p>等长是为了保证两个差分信号时刻保持相反极性，减少共模分量；等距则主要是为了保证两者差分阻抗一致，减少反射。“尽量靠近原则”有时候也是差分走线的要求之一。</p>
<h4 id="4-蛇形线"><a href="#4-蛇形线" class="headerlink" title="4. 蛇形线:"></a>4. 蛇形线:</h4><p>蛇形线是Layout中经常使用的一类走线方式。其主要目的就是为了调节延时，满足系统时序设计要求。<br>设计者首先要有这样的认识：<br>蛇形线会破坏信号质量，改变传输延时，布线时要尽量避免使用。但实际设计中，为了保证信号有足够的保持时间，或者减小同组信号之间的时间偏移，往往不得不故意进行绕线。<br>注意点:<br>成对出现的差分信号线，一般平行走线，尽量少打过孔，必须打孔时，应两线一同打孔，以做到阻抗匹配。<br>相同属性的一组总线，应尽量并排走线，做到尽量等长。从贴片焊盘引出的过孔尽量离焊盘远些。<img src="/images/d2a5e8b322378f0374c95c329d613c1e28cd2256530fe7445220b76f1cdf304b.png" alt="图 2">  </p>
<h3 id="（3）布线常用规则"><a href="#（3）布线常用规则" class="headerlink" title="（3）布线常用规则"></a>（3）布线常用规则</h3><ol>
<li>走线的方向控制规则：<br>即相邻层的走线方向成正交结构。避免将不同的信号线在相邻层走成同一方向，以减少不必要的层间串扰；<br>当由于板结构限制（如某些背板）难以避免出现该情况，特别是信号速率较高时，应考虑用地平面隔离各布线层，用地信号线隔离各信号线。 <img src="/images/d4a7cd6dc62aa281ceb9a31a2dc787d4ff4c154e6bf2ac34703d36351b596fb8.png" alt="图 3">  </li>
<li>走线的开环检查规则：<br>一般不允许出现一端浮空的布线（Dangling Line), 主要是为了避免产生”天线效应”，减少不必要的干扰辐射和接受，否则可能带来不可预知的结果。 <img src="/images/cedb027afef39327b7211c6ea8ab22995e9ec6d1ab3dc05061f2a9d2eee7dfbc.png" alt="图 4">  </li>
<li>阻抗匹配检查规则：<br>同一网络的布线宽度应保持一致，线宽的变化会造成线路特性阻抗的不均匀，当传输的速度较高时会产生反射，在设计中应该尽量避免这种情况。<br>在某些条件下，如接插件引出线，BGA封装的引出线类似的结构时，可能无法避免线宽的变化，应该尽量减少中间不一致部分的有效长度。<img src="/images/e98b495e0928bb84cef6a67e6b3ba86d23338d81e2ebd6747cc4c84f8936a6ea.png" alt="图 5">  </li>
<li>走线长度控制规则：<br>即短线规则，在设计时应该尽量让布线长度尽量短，以减少由于走线过长带来的干扰问题，特别是一些重要信号线，如时钟线，务必将其振荡器放在离器件很近的地方。对驱动多个器件的情况，应根据具体情况决定采用何种网络拓扑结构。 <img src="/images/2f2712b920b2ef1a17051164bfb460657f58bd9f28ffb7bc9dc8e640974b7913.png" alt="图 6">  </li>
<li>倒角规则：<br>PCB设计中应避免产生锐角和直角， 产生不必要的辐射，同时工艺性能也不好。<img src="/images/30af6bcd52ad1edc186f75f548bbd01a49386e05b2d492595a9d42a853bab626.png" alt="图 7">  </li>
<li>器件去耦规则：<br>A. 在印制版上增加必要的去耦电容，滤除电源上的干扰信号，使电源信号稳定。<br>在多层板中，对去耦电容的位置一般要求不太高，但对双层板，去耦电容的布局及电源的布线方式将直接影响到整个系统的稳定性，有时甚至关系到设计的成败。<br>B. 在双层板设计中，一般应该使电流先经过滤波电容滤波再供器件使用。<br>C. 在高速电路设计中，能否正确地使用去耦电容，关系到整个板的稳定性。 <img src="/images/a9f69b0bc3976fcb6441829e554398bcb792a5e7348c597dd3d7f3e0e7c54e8f.png" alt="图 8">  </li>
<li>器件布局分区&#x2F;分层规则：<br>A. 主要是为了防止不同工作频率的模块之间的互相干扰，同时尽量缩短高频部分的布线长度。<br>B. 对混合电路，也有将模拟与数字电路分别布置在印制板的两面，分别使用不同的层布线，中间用地层隔离的方式。 <img src="/images/de907aaee955c5d88bd046037daeab30d9882e0be37f2af8a342d2b5c7f1239a.png" alt="图 9">  </li>
<li>地线回路规则：<br>环路最小规则，即信号线与其回路构成的环面积要尽可能小，环面积越小，对外的辐射越少，接收外界的干扰也越小。 <img src="/images/1c58802203d0ceb52af81f957068154b7c409eb701a4b86beb4a8c73797bdbad.png" alt="图 10">  </li>
<li>电源与地线层的完整性规则：<br>对于导通孔密集的区域，要注意避免孔在电源和地层的挖空区域相互连接，形成对平面层的分割，从而破坏平面层的完整性，并进而导致信号线在地层的回路面积增大。<img src="/images/7956cb4e6d91da3956e52eca5a3d7e963363bfa905f3c6fb968eec9b13d41cc0.png" alt="图 11">  </li>
<li>3W规则：<br>为了减少线间串扰，应保证线间距足够大，当线中心间距不少于3倍线宽时，则可保持70%的电场不互相干扰，称为3W规则。如要达到98%的电场不互相干扰，可使用10W的间距。<img src="/images/a5190860105961677ec97dfee5f305a1081424fce353c1d93c5f280edf7d955d.png" alt="图 12">  </li>
<li>屏蔽保护：<br>对应地线回路规则，实际上也是为了尽量减小信号的回路面积，多见于一些比较重要的信号，如时钟信号，同步信号；<br>对一些特别重要，频率特别高的信号，应该考虑采用铜轴电缆屏蔽结构设计，即将所布的线上下左右用地线隔离，而且还要考虑好如何有效的让屏蔽地与实际地平面有效结合。 <img src="/images/b73512a32176ce2e26bea628dbecf5d80cf618927675ac109e3237eb303aded3.png" alt="图 13">  </li>
<li>走线终结网络规则：<br>在高速数字电路中， 当PCB布线的延迟时间大于信号上升时间（或下降时间） 的1&#x2F;4时，该布线即可以看成传输线，为了保证信号的输入和输出阻抗与传输线的阻抗正确匹配，可以采用多种形式的匹配方法， 所选择的匹配方法与网络的连接方式和布线的拓朴结构有关。<br>A. 对于点对点（一个输出对应一个输入） 连接， 可以选择始端串联匹配或终端并联匹配。前者结构简单，成本低，但延迟较大。后者匹配效果好，但结构复杂，成本较高。<br>B. 对于点对多点（一个输出对应多个输出） 连接， 当网络的拓朴结构为菊花链时，应选择终端并联匹配。<br>当网络为星型结构时，可以参考点对点结构。星形和菊花链为两种基本的拓扑结构, 其他结构可看成基本结构的变形, 可采取一些灵活措施进行匹配。<br>在实际操作中要兼顾成本、 功耗和性能等因素， 一般不追求完全匹配，只要将失配引起的反射等干扰限制在可接受的范围即可。<img src="/images/e33a9a8e942c90b9ba35587114e0282707541faa4830dfe525c83c3190d80dbc.png" alt="图 14">  </li>
<li>走线闭环检查规则：<br>防止信号线在不同层间形成自环。在多层板设计中容易发生此类问题， 自环将引起辐射干扰。<img src="/images/c885c96dbf7ab6b02422db4f2994f3d55ea47c280975f464028cd72af9d4f4cf.png" alt="图 15">  </li>
<li>走线的分枝长度控制规则：<br>尽量控制分枝的长度，一般的要求是Tdelay&lt;&#x3D;Trise&#x2F;20。<img src="/images/a77c0592085fe218e9b982c479257b1e52ff0c2ebf1bb61718c2187f67bd4310.png" alt="图 16">  </li>
<li>走线的谐振规则：<br>主要针对高频信号设计而言， 即布线长度不得与其波长成整数倍关系， 以免产生谐振现象。<img src="/images/487075fd441bb1c2e98d64171ca25e5f99043cdad0b46a556b517495ad0aeeb1.png" alt="图 17">  </li>
<li>孤立铜区控制规则：<br>孤立铜区的出现， 将带来一些不可预知的问题， 因此将孤立铜区与别的信号相接， 有助于改善信号质量，通常是将孤立铜区接地或删除。<br>在实际的制作中， PCB厂家将一些板的空置部分增加了一些铜箔，这主要是为了方便印制板加工，同时对防止印制板翘曲也有一定的作用。<img src="/images/440ffb6c3a862cbd2f4670a3a8056d776b9cd77ed105b005d2b9b3987dd487da.png" alt="图 18">  </li>
<li>重叠电源与地线层规则：<br>不同电源层在空间上要避免重叠。主要是为了减少不同电源之间的干扰， 特别是一些电压相差很大的电源之间， 电源平面的重叠问题一定要设法避免， 难以避免时可考虑中间隔地层。<img src="/images/1f2db0734dc551cee2436fcb2e0e79eac248321ee0625989b38d5a4b609857e3.png" alt="图 19">  </li>
<li>20H规则：<br>由于电源层与地层之间的电场是变化的， 在板的边缘会向外辐射电磁干扰。称为边沿效应。<br>解决的办法是将电源层内缩， 使得电场只在接地层的范围内传导。以一个H（电源和地之间的介质厚度）为单位，若内缩20H则可以将70%的电场限制在接地层边沿内；内缩100H则可以将98%的电场限制在内。 <img src="/images/c047ed585330bfe6a93ab82f5a294290b7c06c5ac615fa89a6dcadce0d153cd2.png" alt="图 20"></li>
</ol>
<h3 id="（4）其他"><a href="#（4）其他" class="headerlink" title="（4）其他"></a>（4）其他</h3><p>对于单双层板电源线应尽量粗而短。电源线和地线的宽度要求可以根据1mm的线宽最大对应1A 的电流来计算，电源和地构成的环路尽量小。<img src="/images/892163613c41be93c760b7b81286d42b7071fe1417ee517fab982ef9c9350e39.png" alt="图 21"><br>为了防止电源线较长时，电源线上的耦合杂讯直接进入负载器件，应在进入每个器件之前，先对电源去耦。且为了防止它们彼此间的相互干扰，对每个负载的电源独立去耦，并做到先滤波再进入负载。<br>在布线中应保持接地良好。如下图。<img src="/images/ef6ac6fa34a2d4749851a5b3505019be0a813f2d58d6fb01e9335b08b3c3093b.png" alt="图 22">  </p>
]]></content>
      <tags>
        <tag>嵌入式</tag>
      </tags>
  </entry>
  <entry>
    <title>Yolo：Colab，Config，Ideas</title>
    <url>/2022/11/27/Yolo/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="YOLOv8"><a href="#YOLOv8" class="headerlink" title="YOLOv8"></a><a href="https://github.com/ultralytics/ultralytics">YOLOv8</a></h2><p>该版本参数集中配置ultralytics&#x2F;yolo&#x2F;configs&#x2F;default.yaml<br>model参数可以是pt也可以是yaml。</p>
<blockquote>
<p>pt:相当于使用预训练权重进行训练，比如选择为yolov8n.pt，就是训练一个yolov8n模型，并且训练前导入这个pt的权重。<br>yaml:相当于直接初始化一个模型进行训练，比如选择为yolov8n.yaml，就是训练一个yolov8n模型，权重是随机初始化。</p>
</blockquote>
<h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><p>data.yaml数据只能用绝对地址<br>要修改代码先卸ultralytics包，利用setup.py</p>
<h2 id="Google-Colab"><a href="#Google-Colab" class="headerlink" title="Google Colab"></a>Google Colab</h2><p>查看GPU</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改&gt;笔记本设置&gt;GPU</span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">tf.test.gpu_device_name()</span><br><span class="line"></span><br><span class="line">!/opt/<span class="built_in">bin</span>/nvidia-smi <span class="comment">#详情</span></span><br></pre></td></tr></table></figure>
<h3 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">!unzip /content/yolov5-master.<span class="built_in">zip</span> -d /content/yolov5-master <span class="comment">#解压</span></span><br><span class="line">%cd /content/yolov5-master <span class="comment">#进入：</span></span><br><span class="line">!pip install -r requirements.txt <span class="comment">#安装</span></span><br><span class="line">%load_ext tensorboard <span class="comment">#加载</span></span><br><span class="line">%tensorboard --logdir=runs/train <span class="comment">#执行</span></span><br><span class="line">!python train.py --rect <span class="comment">#训练</span></span><br><span class="line">!rm -rf /content/yolov5-master/mydata <span class="comment">#删除</span></span><br></pre></td></tr></table></figure>

<h3 id="云盘"><a href="#云盘" class="headerlink" title="云盘"></a>云盘</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"> <span class="comment">#指定Google Drive云端硬盘的根目录，名为drive</span></span><br><span class="line">!mkdir -p drive</span><br><span class="line">!google-drive-ocamlfuse drive</span><br><span class="line"></span><br><span class="line"><span class="comment">#connect to self drive</span></span><br><span class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> drive</span><br><span class="line">drive.mount(<span class="string">&#x27;/content/drive&#x27;</span>)</span><br><span class="line"><span class="comment">#云训练时还是要将盘里的文件拿出来再开始，否则容易直接断连!</span></span><br></pre></td></tr></table></figure>
<p>续航插件：Colab Alive</p>
<h2 id="Yolo"><a href="#Yolo" class="headerlink" title="Yolo"></a>Yolo</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p><a href="https://blog.csdn.net/wjinjie/article/details/107509243?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163082957716780366599375%2522%252C%2522scm%2522%253A%252220140713.130102334%E2%80%A6%2522%257D&request_id=163082957716780366599375&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2alltop_positive~default-1-107509243.first_rank_v2_pc_rank_v29&utm_term=yolo&spm=1018.2226.3001.4187">YOLO系列算法精讲：从yolov1至yolov5的进阶之路</a><br><a href="https://zhuanlan.zhihu.com/p/172121380">深入浅出Yolo系列之Yolov5核心基础知识完整讲解</a><br><a href="https://blog.csdn.net/athrunsunny/article/details/125951001?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0-125951001-blog-125883770.pc_relevant_show_downloadRating&spm=1001.2101.3001.4242.1&utm_relevant_index=1">理解yolov7网络结构</a> <a href="https://blog.csdn.net/u010899190/article/details/125883770">Yolov7 基础网络结构详解</a></p>
<h3 id="Detect参数"><a href="#Detect参数" class="headerlink" title="Detect参数"></a>Detect参数</h3><p>调用电脑摄像头:<br><code>--view-img --source 0</code><br><img src="/images/bce32bd51c230995cacfc6c64597d2551a7812527b4d38b5d68746a1c2282a31.png" alt="图 1">  </p>
<p>调用手机摄像头：<br>DroidCamX App，关闭代理 连同一个网：<br><code>http://192.168.0.102:4747/video</code> </p>
<h3 id="Train参数"><a href="#Train参数" class="headerlink" title="Train参数"></a>Train参数</h3><p><code>action=&#39;store_true&#39; #触发了为true，否则为false 和 default=False 效果一样</code></p>
<h2 id="Ideas"><a href="#Ideas" class="headerlink" title="Ideas"></a>Ideas</h2><h3 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h3><p>混合数据集：彩色+红外<br>开源驾驶员行为数据集：<a href="https://www.kaggle.com/c/state-farm-distracted-driver-detection/data">StateFarm-distracted-driver-detection</a><br>最好输入图像大小设置成和作者一样，输入图像的大小要求必须是32的倍数<br>针对红外图像优化<br>数据增强：抖动模糊<br>扩大数据集 旋转 偏移（数据量不够？）<br>各集种类分配不均，测试集用不同的人<br>测试集怎么用<br>WBF预处理<br>合成三通道</p>
<p><code>类别：c0：安全驾驶 c1：玩手机 c2：喝水c3:危险驾驶（双手脱离方向盘） c4：疲劳驾驶（打哈欠）</code></p>
<h3 id="anchor"><a href="#anchor" class="headerlink" title="anchor"></a>anchor</h3><p>设计——anchor的计算函数autoanchor<br><img src="/images/5fa9f11acfa0f2a400cb70630314bf87fb6670a72a3ddd3ed9a7071a4785d6ad.png" alt="图 2">  </p>
<h3 id="网络结构"><a href="#网络结构" class="headerlink" title="网络结构"></a>网络结构</h3><p>models&#x2F;common.py：加入新的结构代码<br>models&#x2F;yolo.py的parse_model函数：引入上面新写的结构名称<br>.yaml:修改网络结构<br><img src="/images/77c2bef1cba713cd8573b5115b983e41448ddb1399c3681df539bbbd14b91242.png" alt="图 2">  </p>
<h3 id="注意力模块"><a href="#注意力模块" class="headerlink" title="注意力模块"></a>注意力模块</h3><p><a href="https://zhuanlan.zhihu.com/p/330535757">CV中即插即用的注意力模块</a><br><a href="https://blog.csdn.net/weixin_43694096/article/details/124443059?spm=1001.2014.3001.5502">手把手带你YOLOv5 (v6.1)添加注意力机制</a><br>通道注意力机制<br>在上采样+concat之后接一个注意力机制可能会更好？<br>channel-wise比spatial-wise更好用？<br>backbone结尾使用一个注意力机制？<br>每个block（如residual block）结尾使用比每个Conv里使用更好？</p>
<p>transformer自注意力模块 CBAM注意力模块 CA注意力模块 SE注意力模块</p>
<h3 id="激活函数-activations-py"><a href="#激活函数-activations-py" class="headerlink" title="激活函数 activations.py"></a>激活函数 activations.py</h3><p><img src="/images/f539efce7ea9687323fb7fb3a5faf5e95df2ada73ba97313d9823cb67232230b.png" alt="图 1"><br>FRELU激活函数（Funnel Activiation）<br>比较看好的激活函数是 DyReLU和meta-AconC这两个激活函数</p>
<blockquote>
<p>activations.py：激活函数代码写在了activations.py文件里，可引入新的激活函数<br>common.py：替换激活函数，很多卷积组都涉及到了激活函数（Conv，BottleneckCSP），所以改的时候要全面</p>
</blockquote>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>构建一个初始模型：①YoloV5-XL ②图像的分辨率从3K调整为512</p>
<p>融合EfficientNet和YoloV5：主要思想是训练一个图像分类模型(EfficientNet)，它可以实现非常高的AUC(约0.99)，并找到一种方法将其与目标检测模型融合。这被称为“2 class filter”</p>
<p>加权框融合(WBF)后处理：对目标检测模型产生的框进行过滤，从而使结果更加准确和正确的技术。它的性能超过了现有的类似方法，如NMS和soft-NMS。</p>
<p>用5折交叉验证</p>
<p>矩形训练<br><img src="/images/1d0d9b858bfa9a9517a89072d8d201aa8d88dddfbedf616d86295a67bbaa343f.png" alt="图 3">  </p>
<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>safe重新标注√<br>通道压缩 *<br>Resize × 保持原始图像比例调整大小更安全<br>删mosic<br>删卷积层<br>把通道扩展图像增强工作流加入算法？</p>
<h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><p>数据集扩大时，若显存不足，需要调小batchsize或分辨率<br>可以从小模型中学到的权重开始，对更大模型进行训练</p>
<p>大的batch_size往往建议可以相应取大点learning_rate, 因为梯度震荡小，大learning_rate可以加速收敛过程，也可以防止陷入到局部最小值，而小batch_size用小learning_rate迭代，防止错过最优点，一直上下震荡没法收敛</p>
<p>参数调优过程一般要反复多次进行微调&lt;-&gt;训练&lt;-&gt;测试，最终得出符合需求&#x2F;较优的HyperPara，应用在项目中	<code>data/hyps/hyp.finetune.yaml</code></p>
]]></content>
      <tags>
        <tag>深度学习</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python工具：Anaconda，Pycharm，Jupyter，Pytorch</title>
    <url>/2022/11/24/Pytorch/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Anaconda-Prompt"><a href="#Anaconda-Prompt" class="headerlink" title="Anaconda Prompt"></a>Anaconda Prompt</h1><p>Anaconda创建环境 <code>conda create -n pytorch python=3.6</code><br>更新 <code>conda update python</code> <code>pip install --upgrade pip</code><br>激活环境 <code>conda activate pytorch</code><br>退出虚拟环境 <code>deactivate</code><br>安装<a href="https://pytorch.org/">pytorch</a>:<br><code>conda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch</code></p>
<p><strong>查包</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">pip <span class="built_in">list</span> <span class="comment">#列包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">torch.cuda.is_available() <span class="comment">#返回True说明GPU可以被使用</span></span><br><span class="line">torch.__version__ <span class="comment">#查pytorch</span></span><br><span class="line"></span><br><span class="line">nvidia-smi <span class="comment">#查GPU CUDA</span></span><br><span class="line">python –version <span class="comment">#查python版本</span></span><br></pre></td></tr></table></figure>
<p>安装特定版本&#x2F;卸载 <code>pip install XXX==2.0</code> &#x2F; <code>pip uninstall XXX</code></p>
<h1 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h1><h2 id="Pycharm"><a href="#Pycharm" class="headerlink" title="Pycharm"></a>Pycharm</h2><p>创建新项目	手动导入已存在的anaconda创建的环境：<code>D:\Anaconda3\envs\pytorch\python.exe</code><br>更改环境：				<code>Settings&gt;Project&gt;interpreter</code><br>环境路径配置： <code>接上interpreter&gt;齿轮&gt;Add&gt;System Interpreter&gt;手动添加</code><br>检验 : 				<code>Python Console</code>	<code>同上#查包处</code><br>Terminal：<code>File-&gt;Settings-&gt;Tools-&gt;Terminal-&gt;Shell path</code> <code>C:\Windows\System32\cmd.exe</code></p>
<p><strong>Pycharm使用</strong><br>新建.py文件(用作工程)&gt;右上角配置py解释器&gt;运行&#x2F;直接右键运行<br>控制台(用作调试，查参数)&gt;Shift+enter：输入多行&gt;“↑”重新编辑<br>Ctrl+D 快速复制至下一行<br>Ctrl+R 批量修改<br>ctrl+&#x2F; 批量注释<br>调试：打断点&gt;debug&gt;使用工具栏内的“下一步”或“计算器内输入表达式”进行调试</p>
<p>调试时使用Console的python调试台，print指令<br><img src="/images/3d48dab87c260ef9d021d26f8218f569fece80b9bd7ed27c94cc835121291d52.png" alt="图 1"><img src="/images/d2e472375bbf282c764539c21d3b00d9f7077d85d09e247faf0f23f092f0b446.png" alt="图 2"><img src="/images/46d8a3df125599f7e7a98ecf67cc57f419fb6ecd521d180eb4278d435bfbad4d.png" alt="图 3">  </p>
<h2 id="Jupyter-notebook"><a href="#Jupyter-notebook" class="headerlink" title="Jupyter notebook"></a>Jupyter notebook</h2><p>激活pytorch环境后 <code>conda install nb_conda</code><br>打开 jupyter notebook<br><code>New&gt;选择环境：Python [conda env:pytorch]</code><br>IDLE Ctrl+N 编辑多行代码<br>输入一半按tab可以补全</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cd 路径</span></span><br><span class="line">	C：\Users\Arrow&gt; cd E：\桌面</span><br><span class="line">	C：\Users\Arrow&gt; E：</span><br><span class="line">        得E：\桌面&gt;i.py</span><br><span class="line"><span class="comment">#亦或直接	</span></span><br><span class="line">        E：\桌面&gt; python E：\桌面\i.py</span><br></pre></td></tr></table></figure>

<p><strong>打包下载：</strong><br> <figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recursive_files</span>(<span class="params">dir_name=<span class="string">&#x27;.&#x27;</span>, ignore=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">for</span> dir_name,subdirs,files <span class="keyword">in</span> os.walk(dir_name):</span><br><span class="line">        <span class="keyword">if</span> ignore <span class="keyword">and</span> os.path.basename(dir_name) <span class="keyword">in</span> ignore: </span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> file_name <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> ignore <span class="keyword">and</span> file_name <span class="keyword">in</span> ignore:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">yield</span> os.path.join(dir_name, file_name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_tar_file</span>(<span class="params">dir_name=<span class="string">&#x27;.&#x27;</span>, tar_file_name=<span class="string">&#x27;tarfile.tar&#x27;</span>, ignore=<span class="literal">None</span></span>):</span><br><span class="line">    tar = tarfile.<span class="built_in">open</span>(tar_file_name, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> file_name <span class="keyword">in</span> recursive_files(dir_name, ignore):</span><br><span class="line">        tar.add(file_name)</span><br><span class="line"></span><br><span class="line">    tar.close()</span><br><span class="line"></span><br><span class="line">dir_name = <span class="string">&#x27;.&#x27;</span></span><br><span class="line">tar_file_name = <span class="string">&#x27;archive.tar&#x27;</span></span><br><span class="line">ignore = &#123;<span class="string">&#x27;.ipynb_checkpoints&#x27;</span>, <span class="string">&#x27;__pycache__&#x27;</span>, tar_file_name&#125;</span><br><span class="line">make_tar_file(dir_name, tar_file_name, ignore)</span><br></pre></td></tr></table></figure></p>
<h1 id="库"><a href="#库" class="headerlink" title="库"></a>库</h1><h2 id="两大查询函数"><a href="#两大查询函数" class="headerlink" title="两大查询函数"></a>两大查询函数</h2><p>dir（）函数，能让我们知道工具箱以及工具箱中的分隔区有什么东西。<br>help（）函数，能让我们知道每个工具是如何使用的，工具的使用方法。<br><code>Jupyter&gt;XX??</code><br><code>Pycharm&gt;ctrl+左键(查原函数)	ctrl+p(查询输入参数，有等号的可忽略)</code><br>多查<a href="https://pytorch.org/docs/stable/index.html">pytorch官方文档</a></p>
<p>文件</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">../XXX <span class="comment">#上一层</span></span><br><span class="line">root=“D:<span class="string">\\desktop”</span> <span class="comment">#window下绝对路径使用双斜杠\\避免转义：</span></span><br><span class="line">root=r“D:<span class="string">\\desktop”</span> <span class="comment">#或统一加上r取消转义</span></span><br></pre></td></tr></table></figure>
<p>计时		</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">time</span> 	</span><br><span class="line">start=<span class="type">time</span>.time()     end=<span class="type">time</span>.time()     print(<span class="keyword">start</span>-<span class="keyword">end</span>)</span><br></pre></td></tr></table></figure>
<p>图片通道处理 <code>image=image.convert(‘RGB’)  #PNG是四通道</code><br>全安装 		<code>pip install -r requirements</code></p>
<p>组 </p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = (<span class="number">1</span>, <span class="number">2</span>)  <span class="comment"># 元组 tuple</span></span><br><span class="line">b = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]  <span class="comment"># 数组 list</span></span><br><span class="line">c = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;wyj&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;23&#x27;</span>&#125;  </span><br><span class="line"><span class="comment"># 字典 dict</span></span><br><span class="line"> <span class="built_in">print</span>(a[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(b[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(c[<span class="string">&#x27;name&#x27;</span>])</span><br></pre></td></tr></table></figure>


<h2 id="Tensorboard可视化"><a href="#Tensorboard可视化" class="headerlink" title="Tensorboard可视化"></a>Tensorboard可视化</h2><p>pytorch下安装 <code>pip install tensorboard (conda)</code><br>使用</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line">writer=SummaryWriter(“logs“)</span><br><span class="line">writer.add_image(<span class="string">&quot;name“，parameter，组内步数)</span></span><br><span class="line"><span class="string">writer.close() #关闭读写 </span></span><br></pre></td></tr></table></figure>
<p>打开</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs(文件夹路径) --port=<span class="number">6006</span>（<span class="number">6007</span>） <span class="comment">#注意路径</span></span><br><span class="line">tensorboard --logdir runs/train  （YOLO）</span><br></pre></td></tr></table></figure>
<p>地址	localhost:6006</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#debug</span></span><br><span class="line">AttributeError: <span class="built_in">type</span> <span class="built_in">object</span> <span class="string">&#x27;h5py.h5.H5PYConfig&#x27;</span> has no attribute <span class="string">&#x27;__reduce_cython__&#x27;</span></span><br><span class="line">pip uninstall h5py</span><br><span class="line"></span><br><span class="line">AttributeError: module <span class="string">&#x27;distutils&#x27;</span> has no attribute <span class="string">&#x27;version&#x27;</span></span><br><span class="line">pip install setuptools==<span class="number">59.5</span><span class="number">.0</span></span><br><span class="line">pip install brotli</span><br></pre></td></tr></table></figure>
<h2 id="Transform"><a href="#Transform" class="headerlink" title="Transform"></a>Transform</h2><p>transforms.py图像处理工具箱</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">1.调用工具<span class="attribute">tool</span>=transforms.XXX()	2.使用 <span class="attribute">result</span>=tool(input)</span><br><span class="line">如	Totensor&gt;转向量	Normalize&gt;归一化		Resize&gt;缩放	</span><br><span class="line">Compose&gt;组合		RandomCrop&gt;随机裁剪</span><br></pre></td></tr></table></figure>
<h2 id="ToTensor（桥梁，很多输入都要求tensor类型）"><a href="#ToTensor（桥梁，很多输入都要求tensor类型）" class="headerlink" title="ToTensor（桥梁，很多输入都要求tensor类型）"></a>ToTensor（桥梁，很多输入都要求tensor类型）</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line">tensor_tool=transforms.ToTensor()</span><br><span class="line">tensor_result=tensor_tool(img)</span><br></pre></td></tr></table></figure>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">	_ _call_ _(self,name)	</span><br><span class="line">可直接调用&gt;person=Person(“wyj<span class="string">&quot;)</span></span><br></pre></td></tr></table></figure>
<h2 id="torchvision"><a href="#torchvision" class="headerlink" title="torchvision"></a>torchvision</h2><p>torchvision.datasets 数据集处理</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line">train_set = torchvision.datasets.CIFAR10(root=<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">True</span>, <span class="comment">#训练集</span></span><br><span class="line">transform=dataset_transform, download=<span class="literal">True</span>)</span><br><span class="line">test_set = torchvision.datasets.CIFAR10(root=<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, <span class="comment">#测试集</span></span><br><span class="line">transform=dataset_transform, download=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Dataloader"><a href="#Dataloader" class="headerlink" title="Dataloader"></a>Dataloader</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line">test_loader = DataLoader(dataset=test_data, batch_size=<span class="number">64</span>, shuffle=<span class="literal">True</span>, num_workers=<span class="number">0</span>, drop_last=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>例：</p>
<figure class="highlight stan"><table><tr><td class="code"><pre><span class="line">writer = SummaryWriter(<span class="string">&quot;dataloader&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">step</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> <span class="title">data</span> <span class="keyword">in</span> test_loader: <span class="comment">#读数据</span></span><br><span class="line">        imgs, targets = <span class="title">data</span></span><br><span class="line">        writer.add_images(<span class="string">&quot;Epoch: &#123;&#125;&quot;</span>.format(epoch), imgs, <span class="built_in">step</span>)</span><br><span class="line">        <span class="built_in">step</span> = <span class="built_in">step</span> + <span class="number">1</span></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Network：从神经网络到深度学习</title>
    <url>/2022/11/25/Network/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="TORCH-NN"><a href="#TORCH-NN" class="headerlink" title="TORCH.NN"></a>TORCH.NN</h2><p><strong>Module 所有神经网络模块的基类</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Model</span>(nn.Module): <span class="comment"># 继承Module模板（父类），在该模板基础上进行修改</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>): <span class="comment">#初始化</span></span><br><span class="line">        <span class="built_in">super</span>(Model, self).__init__() 	<span class="comment">#父类初始化</span></span><br><span class="line">        self.conv1 = Conv2d(in_channels=<span class="number">3</span>, out_channels=<span class="number">6</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>) <span class="comment">#2维卷积</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):<span class="comment">#前向传播 x即input</span></span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        <span class="keyword">return</span> x </span><br><span class="line">model=Model() 		<span class="comment">#创建神经网络</span></span><br><span class="line">output=model(x)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br></pre></td></tr></table></figure>
<p><strong>maxpool 下采样</strong><br><code>self.maxpool1 = MaxPool2d(kernel_size=3, ceil_mode=False) #ceil_mode=True为向上取整</code><br><strong>Non-linear Activations</strong><br><code>m = nn.ReLU() # inplace=True为直接替换input</code><br><strong>批标准化</strong><br><code>m = nn.BatchNorm2d(100)</code><br><strong>线性层</strong></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">dataset = torchvision.datasets.CIFAR10(<span class="string">&quot;../data&quot;</span>, train=<span class="literal">False</span>，</span><br><span class="line">			transform=torchvision.transforms.ToTensor(),download=<span class="literal">True</span>)</span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.linear1 = Linear(<span class="number">196608</span>, <span class="number">10</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span></span>):</span><br><span class="line">        output = self.linear1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"> </span><br><span class="line">tudui = Tudui()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    <span class="built_in">print</span>(imgs.shape)</span><br><span class="line">    output = torch.flatten(imgs) <span class="comment">#数据摊平</span></span><br><span class="line">    <span class="built_in">print</span>(output.shape)</span><br><span class="line">    output = tudui(output)</span><br><span class="line">    <span class="built_in">print</span>(output.shape)</span><br></pre></td></tr></table></figure>
<h2 id="CIFAR-10-model结构"><a href="#CIFAR-10-model结构" class="headerlink" title="CIFAR 10 model结构"></a>CIFAR 10 model结构</h2><p><img src="/images/800c1e2ff7a5177eed449271d07b7d8025e56a1fd5eba73bae57ad5249579985.png" alt="图 18">  </p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WYJ</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(WYJ,self).__init__()</span><br><span class="line">        self.conv1=Conv2d(<span class="number">3</span>,<span class="number">32</span>,<span class="number">5</span>,padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool1=MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.conv2 = Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool2 = MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.conv3 = Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool3 = MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.flatten=Flatten()</span><br><span class="line">        self.linear1=Linear(<span class="number">1024</span>,<span class="number">64</span>)</span><br><span class="line">   self.linear2 = Linear(<span class="number">64</span>,<span class="number">10</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.maxpool1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        x = self.maxpool2(x)</span><br><span class="line">        x = self.conv3(x)</span><br><span class="line">        x = self.maxpool3(x)</span><br><span class="line">        x = self.flatten(x)</span><br><span class="line">        x = self.linear1(x)</span><br><span class="line">        x = self.linear2(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"> </span><br><span class="line">wyj = WYJ()</span><br><span class="line"><span class="built_in">print</span>(wyj)</span><br><span class="line"><span class="built_in">input</span> = torch.ones((<span class="number">64</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">output = wyj(<span class="built_in">input</span>)</span><br><span class="line"><span class="built_in">print</span>(output.shape)</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"> <span class="comment"># Sequential 的妙用</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.model1 = Sequential(</span><br><span class="line">            Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.model1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"> </span><br><span class="line">tudui = Tudui()</span><br><span class="line"><span class="built_in">print</span>(tudui)</span><br><span class="line"><span class="built_in">input</span> = torch.ones((<span class="number">64</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">output = tudui(<span class="built_in">input</span>)</span><br><span class="line"><span class="built_in">print</span>(output.shape)</span><br><span class="line"> </span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;../logs_seq&quot;</span>)</span><br><span class="line">writer.add_graph(tudui, <span class="built_in">input</span>)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<h2 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">x = torch.tensor([<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>])</span><br><span class="line">y = torch.tensor([<span class="number">1</span>])</span><br><span class="line">x = torch.reshape(x, (<span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line">loss_cross = nn.CrossEntropyLoss()    <span class="comment">#注意输入输出形状</span></span><br><span class="line">result_cross = loss_cross(x, y)</span><br></pre></td></tr></table></figure>
<p><strong>反向传播</strong><br><code>result_loss.backward()</code></p>
<h2 id="优化器-梯度下降"><a href="#优化器-梯度下降" class="headerlink" title="优化器(梯度下降)"></a>优化器(梯度下降)</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">input</span>, target <span class="keyword">in</span> dataset:</span><br><span class="line">    optimizer.zero_grad()              <span class="comment">#梯度清零</span></span><br><span class="line">    output = model(<span class="built_in">input</span>)</span><br><span class="line">    loss = loss_fn(ou tput, target)</span><br><span class="line">    loss.backward()</span><br><span class="line">    optimizer.step()</span><br></pre></td></tr></table></figure>
<h2 id="网络模型"><a href="#网络模型" class="headerlink" title="网络模型"></a>网络模型</h2><p>添加<br><code>vgg16_true.classifier.add_module(&#39;add_linear&#39;, nn.Linear(1000, 10)) #在vgg16网络中的classifier 模块中加入一个linear层</code><br>修改<br><code>vgg16_false.classifier[6] = nn.Linear(4096, 10) #修改vgg16网络中的classifier 第6层</code></p>
<p>保存</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">vgg16 = torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存方式1,模型结构+模型参数</span></span><br><span class="line">torch.save(vgg16, <span class="string">&quot;vgg16_method1.pth&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 保存方式2，模型参数（官方推荐）</span></span><br><span class="line">torch.save(vgg16.state_dict(), <span class="string">&quot;vgg16_method2.pth&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>加载</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方式1</span></span><br><span class="line">model = torch.load(<span class="string">&quot;vgg16_method1.pth&quot;</span>)</span><br><span class="line"> <span class="comment">#若为自定义网络模型，加载时需要引入定义：</span></span><br><span class="line"><span class="keyword">from</span> model_save <span class="keyword">import</span> *  </span><br><span class="line"><span class="comment">#一定要在同一个文件夹下</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 方式2，加载模型</span></span><br><span class="line">vgg16 = torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line">vgg16.load_state_dict(torch.load(<span class="string">&quot;vgg16_method2.pth&quot;</span>)) <span class="comment">#读取字典中的参数</span></span><br></pre></td></tr></table></figure>
<h2 id="CPU训练"><a href="#CPU训练" class="headerlink" title="CPU训练"></a>CPU训练</h2> <figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> …</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> * <span class="comment">#引入CIFAR 10 model网络定义</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">#准备数据集 </span></span><br><span class="line">train_data = torchvision.datasets.CIFAR10(root=<span class="string">&quot;../data&quot;</span>, train=<span class="literal">True</span>, transform=torchvision.transforms.ToTensor(),download=<span class="literal">True</span>)</span><br><span class="line">test_data = torchvision.datasets.CIFAR10(root=<span class="string">&quot;../data&quot;</span>, train=<span class="literal">False</span>, transform=torchvision.transforms.ToTensor(),download=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment">#length 数据集长度</span></span><br><span class="line">train_data_size = <span class="built_in">len</span>(train_data)</span><br><span class="line">test_data_size = <span class="built_in">len</span>(test_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;训练数据集的长度为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(train_data_size))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试数据集的长度为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(test_data_size))</span><br><span class="line"> </span><br><span class="line"> <span class="comment">#利用 DataLoader 来加载数据集</span></span><br><span class="line">train_dataloader = DataLoader(train_data, batch_size=<span class="number">64</span>)</span><br><span class="line">test_dataloader = DataLoader(test_data, batch_size=<span class="number">64</span>)</span><br><span class="line"> </span><br><span class="line"> <span class="comment">#创建网络模型</span></span><br><span class="line">tudui = Tudui()</span><br><span class="line"> <span class="comment">#损失函数</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss()</span><br><span class="line"> <span class="comment">#优化器</span></span><br><span class="line">learning_rate = <span class="number">1e-2</span></span><br><span class="line">optimizer = torch.optim.SGD(tudui.parameters(), lr=learning_rate)</span><br><span class="line"> </span><br><span class="line"> <span class="comment">#设置训练网络的一些参数</span></span><br><span class="line"> <span class="comment">#记录训练的次数</span></span><br><span class="line">total_train_step = <span class="number">0</span></span><br><span class="line"> <span class="comment">#记录测试的次数</span></span><br><span class="line">total_test_step = <span class="number">0</span></span><br><span class="line"> <span class="comment">#训练的轮数</span></span><br><span class="line">epoch = <span class="number">10</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">#添加tensorboard</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;../logs_train&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(epoch):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;------第 &#123;&#125; 轮训练开始------&quot;</span>.<span class="built_in">format</span>(i+<span class="number">1</span>))</span><br><span class="line">    <span class="comment">#训练步骤开始</span></span><br><span class="line">    tudui.train() <span class="comment">#网络设为训练模式</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        imgs, targets = data</span><br><span class="line">        outputs = tudui(imgs)</span><br><span class="line">        loss = loss_fn(outputs, targets)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 优化器优化模型</span></span><br><span class="line">        optimizer.zero_grad() <span class="comment">#梯度清零</span></span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"> </span><br><span class="line">        total_train_step = total_train_step + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> total_train_step % <span class="number">100</span> == <span class="number">0</span>: <span class="comment">#逢百进一</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;训练次数：&#123;&#125;, Loss: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_train_step, loss.item()))</span><br><span class="line">            writer.add_scalar(<span class="string">&quot;train_loss&quot;</span>, loss.item(), total_train_step)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 验证步骤开始</span></span><br><span class="line">    tudui.<span class="built_in">eval</span>() <span class="comment">#网络设为验证模式</span></span><br><span class="line">    total_test_loss = <span class="number">0</span></span><br><span class="line">    total_accuracy = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad(): <span class="comment">#避免验证过程加入梯度，以节约内存</span></span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_dataloader:</span><br><span class="line">            imgs, targets = data</span><br><span class="line">            outputs = tudui(imgs)</span><br><span class="line">            loss = loss_fn(outputs, targets)</span><br><span class="line">            total_test_loss = total_test_loss + loss.item()</span><br><span class="line">            accuracy = (outputs.argmax(<span class="number">1</span>) == targets).<span class="built_in">sum</span>() <span class="comment">#argmax(1)：横轴取最大值并输出序号[0,1,0,0,…]</span></span><br><span class="line">            total_accuracy = total_accuracy + accuracy</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试集上的Loss: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_test_loss))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试集上的正确率: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_accuracy/test_data_size))</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_loss&quot;</span>, total_test_loss, total_test_step)</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_accuracy&quot;</span>, total_accuracy/test_data_size, total_test_step)</span><br><span class="line">    total_test_step = total_test_step + <span class="number">1</span></span><br><span class="line">    <span class="comment">#每epoch保存一个</span></span><br><span class="line">    torch.save(tudui, <span class="string">&quot;tudui_&#123;&#125;.pth&quot;</span>.<span class="built_in">format</span>(i))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;模型已保存&quot;</span>) </span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<h2 id="GPU训练"><a href="#GPU训练" class="headerlink" title="GPU训练"></a>GPU训练</h2><p>改cuda：网络、损失函数、data<br>① .cuda()</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    tudui = tudui.cuda()</span><br></pre></td></tr></table></figure>
<p>② .to(device)</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">device = torch.device(<span class="string">&quot;cuda&quot;</span>) <span class="comment">#只需修改此处在CPU,GPU之间切换	“cpu”</span></span><br><span class="line">tudui = tudui.to(device)</span><br><span class="line"></span><br><span class="line">device = torch.device(<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> “cpu”)</span><br></pre></td></tr></table></figure>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">model = torch.load(<span class="string">&quot;tudui_29_gpu.pth&quot;</span>, map_location=torch.device(<span class="string">&#x27;cpu&#x27;</span>)) </span><br><span class="line"><span class="built_in">print</span>(model) 	<span class="comment">#训练好的权重代入模型</span></span><br><span class="line">image = torch.reshape(image, (<span class="number">1</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">model.<span class="built_in">eval</span>()</span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    output = model(image)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>深度学习</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
